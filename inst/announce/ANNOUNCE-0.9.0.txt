
===== Summary =====

Version 0.9.0 of the Rcpp package is now on CRAN and its mirrors. 
This release marks another step in the development of the package.
A few key points are highlighted below.  More details are in the NEWS and
ChangeLog files.


===== Overview =====

Rcpp is an R package and associated C++ library that facilitates integration
of C++ code in R packages.

The package features a set of C++ classes (Rcpp::IntegerVector,
Rcpp::Function, Rcpp::Environment, ...) that makes it easier to manipulate R
objects of matching types (integer vectors, functions, environments, etc
...).

Rcpp takes advantage of C++ language features such as the explicit
constructor/destructor lifecycle of objects to manage garbage collection
automatically and transparently. We believe this is a major improvement over
use of PROTECT/UNPROTECT. When an Rcpp object is created, it protects the
underlying SEXP so that the garbage collector does not attempt to reclaim the
memory. This protection is withdrawn when the object goes out of
scope. Moreover, users generally do not need to manage memory directly (via
calls to new / delete or malloc / free) as this is done by the Rcpp classes
or the corresponding STL containers.

A few key points about Rcpp:

 - a rich API covering all core R data types including vectors, matrices,
   functions, environments, ... (with the exeception of factors
   which are less useful in C++)

 - seamless (bi-directional) data interchange between R and C++

 - possibility of inline use permitting definition, compilation, linking and
   loading of C++ functions directly from R

 - extensive documentation now covering nine vignettes

 - exception handling and error propagation back to R

 - extensive test suite using RUnit covering over 700 tests

 - comprehensive documentation in nine vignettes

 - extension packages RcppArmadillo and RcppGSL provide easy-to-use
   integration with the Armadillo (linear algebra) and GNU GSL librasries

 - increasing adoption among R users and package developers with now
   twenty packages from CRAN or BioConductor depending on Rcpp

Two key features were added during the 0.8.* cycles and are described below.


===== Rcpp sugar =====

Rcpp now provides syntactic sugar: vectorised expressions at the C++ level
which are motivated by the corresponding R expressions.  This covers
operators (binary arithmetic, binary logical, unary), functions (producing
single logical results, mathematical functions and d/p/q/r statistical
functions). Examples comprises anything from ifelse() to pmin()/pmax() or 

The Rcpp-sugar vignette describes sugar in more detail.


===== Rcpp modules =====

Rcpp modules are inspired by Boost.Python and makes exposing C++ functions or
classes to R even easier.  Rcpp modules are also described in more detail in
their own vignette.


===== Documentation =====

The package contains a total of nine vignette the first of which provides a
short and succinct introduction to the Rcpp package along with several
motivating examples.  


===== Links =====

Rcpp main page: http://dirk.eddelbuettel.com/code/rcpp.html
R-forge project page: http://r-forge.r-project.org/projects/rcpp/
Dirk's blog section about Rcpp: http://dirk.eddelbuettel.com/blog/code/rcpp/
Romain's blog section about Rcpp: http://romainfrancois.blog.free.fr/index.php?category/R-package/Rcpp


===== Support =====

Questions about Rcpp should be directed to the Rcpp-devel mailing list
https://lists.r-forge.r-project.org/cgi-bin/mailman/listinfo/rcpp-devel



 -- Dirk Eddelbuettel, Romain Francois, Doug Bates and John Chambers
    December 2010



