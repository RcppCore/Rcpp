2015-03-04  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.11.5
        * inst/NEWS.Rd: Release 0.11.5
        * inst/include/Rcpp/config.h: Release 0.11.5

        * debian/*: Changes for Debian release of 0.11.5
        
2015-03-03  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/routines.h: Additional application of the
        'attribute_hidden' macro for a number of routines in Rcpp::internal

2015-03-02  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/print.h (Rcpp): New inline function Rcpp::print()
        * inst/include/RcppCommon.h: Include new header

        * src/api.cpp: Commented-out print() in global namespace
        * src/Rcpp_init.cpp: Commented-out registration of print()
        * inst/include/Rcpp/routines.h: Commented-out initialization

2015-03-01  Dirk Eddelbuettel  <edd@debian.org>

        * src/api.cpp: New function print() as a wrapper around Rf_PrintValue()
        * src/Rcpp_init.cpp: Corresponding registration for print()
        * inst/include/Rcpp/routines.h: Corresponding initialization

2015-02-25  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/routines.h: Use the 'attribute_hidden' define from
        the R header R_ext/Visibility.h to protect symbols (cf #264)

        * inst/include/RcppCommon.h: Also include R_ext/Visibility.h

2015-02-24  JJ Allaire  <jj@rstudio.org>

        * src/attributes.cpp: Guard against includes referencing themselves
        (and thus creating an endless loop of include processing); Process
        attributes in included files; Automatically build implementation files
        (*.cc; *.cpp) corresponding to local header files if they exist.

2015-02-20  Lionel Henry  <lionel.hry@gmail.com>

        * inst/include/Rcpp/Function.h New Function constructors that will
        perform function-lookup in an environment or in a namespace.

2015-02-19  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Bump Version: and Date:

2015-02-19  Lionel Henry  <lionel.hry@gmail.com>

        * inst/include/Rcpp/Environment.h Allow new_env() to create an
        environment with a specified parent

2015-02-19  JJ Allaire  <jj@rstudio.org>

        * vignettes/Rcpp-attributes.Rnw: Add note on using inline
        keyword from shared header files.

2015-02-17  JJ Allaire  <jj@rstudio.org>

        * vignettes/Rcpp-attributes.Rnw: Update attributes vignette
        with docs on new features.

2015-02-14  JJ Allaire  <jj@rstudio.org>

        * src/attributes.cpp: Allow includes of local files
        (e.g. #include "foo.hpp") in sourceCpp
        * Rcpp.Rproj: Specify Sweave as Rnw handler for RStudio
        * vignettes/*.Rnw: Add driver magic comment and turn off
        Sweave concordance.
        * vignettes/.gitignore: Ignore artifacts of PDF preview

2015-02-13  Dirk Eddelbuettel  <edd@debian.org>

        * .travis.yml (install): Switch to using ppa:edd/misc to install all the
        R packages needed for the Travis CI run as r-cran-* binary packages

2015-02-13  JJ Allaire  <jj@rstudio.org>

        * src/attributes.cpp: Allow 'R' to come immediately after '***'
        for defining embedded R code chunks in sourceCpp

2015-02-12  JJ Allaire  <jj@rstudio.org>

        * DESCRIPTION: bump version
        * src/attributes.cpp: Add rng parameter to Rcpp::export to
        prevent inclusion of RNGScope in generated code; recognize
        Rtools 3.2

2015-02-06  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/vector/Subsetter.h: compare CHARSXP pointers
        rather than string contents in subsetter

2015-02-03  JJ Allaire  <jj@rstudio.org>

        * src/attributes.cpp: Simplify generated attributes code for
        RNGScope (use RObject and it's destructor rather than SEXP
        protect/unprotect).
        * vignettes/Rcpp-package.Rnw: Update docs on generated code.

2015-02-03  JJ Allaire  <jj@rstudio.org>

        * inst/include/Rcpp/exceptions.h: Add Rcpp::warning function as
        wrapper for Rf_warning

2014-02-03  JJ Allaire  <jj@rstudio.org>

        * inst/include/Rcpp/XPtr.h: Improvements to XPtr including new
        checked_get and release functions and improved behavior (throw
        an exception rather than crash) when a NULL external pointer is
        dereferenced.
        * inst/unitTests/runit.XPTr.R: tests for XPtr improvements.
        * inst/unitTests/cpp/XPtr.cpp: tests for XPtr improvements.

2014-02-03  JJ Allaire  <jj@rstudio.org>

        * R/Attributes.R: Include pkg_types.h file in RcppExports.cpp
        if it's present in inst/include or src
        * src/attributes.cpp: Include pkg_types.h file in generated
        C++ interface file if it's present in inst/include or src

2015-02-02  JJ Allaire  <jj@rstudio.org>

        * R/exceptions.R: Evaluate R code within an R_toplevelExec block
        * include/Rcpp/api/meat/Rcpp_eval.h: Evaluate R code within an
        R_toplevelExec block

2015-01-25  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/utils/tinyformat.h: define an error handler for
        tinyformat (using ::Rcpp::stop) to not spill assert

2015-01-20  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.11.4
        * inst/NEWS.Rd: Release 0.11.4
        * inst/include/Rcpp/config.h: Release 0.11.4

        * debian/*: Changes for Debian release of 0.11.4

2015-01-19  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/r/headers.h: move R headers inclusion to own file;
        move sysmacros.h workarounds to here
        * inst/include/RcppCommon.h: idem
        * inst/include/Rcpp/platform/sysmacros.h: idem

2015-01-19  Dirk Eddelbuettel  <edd@debian.org>

        * vignettes/Rcpp.bib: Updated to current package versions

        * vignettes/getCurrentVersionsOfCitedPackages.R: New helper function
        * .Rbuildignore: Added vignettes/getCurrentVersionsOfCitedPackages.R

        * R/unit.tests.R (test): Use requireNamespace() instead of require()
        * R/unit.tests.R (test): Ditto

2015-01-19  Wush Wu <wush978@gmail.com>

        * inst/include/Rcpp/sugar/functions/var.h: Support four vector types
        * inst/unitTests/runit.sugar.var.R: Added corresponding tests

2015-01-16  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/String.h: fix push_front()
        * inst/unitTests/runit.String.R: test
        * inst/unitTests/cpp/String.cpp: test

2015-01-15  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/platform/sysmacros.h: remove leaked macros
        'major', 'minor', 'makedev' from <sys/sysmacros.h>
        * inst/include/RcppCommon.h: ditto
        * inst/unitTests/cpp/Vector.cpp: simple test

2015-01-08  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/OpenMP/GNUmakefile: Renamed from Makefile because it
        contains GNU make extentions (which we happen to like)
        * inst/examples/ConvolveBenchmarks: Ditto

2015-01-02  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/sugar/functions/setdiff.h: fix for setequals
        * inst/unitTests/cpp/sugar.cpp: unit tests
        * inst/unitTests/runit.sugar.R: unit tests

2015-01-01  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/sugar/functions/mean.h: Return type is double, not
        storage type; also added logical vector case; also added integer case
        to correctly deal with NA values

        * inst/unitTests/runit.sugar.R: Added unit tests for new sugar mean()
        * inst/unitTests/cpp/sugar.cpp: C++ side of new unit tests

2014-12-31  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/sugar/functions/mean.h: Support int and complex

2014-12-30  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/sugar/functions/mean.h: Use two-pass method

2014-12-29  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/macros/macros.h: reformat for legibility

2014-12-11  Yixuan Qiu <yixuan.qiu@cos.name>

        * inst/include/Rcpp/internal/r_vector.h: Internal functions to
        help detect unqualified vector types for sorting, with the help
        of Romain Francois
        * inst/include/Rcpp/vector/Vector.h: Disallow sorting on List,
        RawVector and ExpressionVector, from the discussion with
        Dirk Eddelbuettel and Kevin Ushey

2014-11-30  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/proxy.h: Const iteration correction
        * inst/include/Rcpp/sugar: Ditto in three files

2014-11-25  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/grow.h: Apply additional Shield<> use around tail
        object as suggested by Martin Morgan on the rcpp-devel list

2014-11-24  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/config.h: Release version is still 0.11.3

2014-11-23  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/config.h: New macro RcppDevVersion to account for
        four-part development versions such as the current 0.11.3.2
        * DESCRIPTION: Version incremented to 0.11.3.2

2014-11-23  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/exceptions.h: Richer formatting for Rcpp::stop
        * inst/include/Rcpp/utils/tinyformat.h: Backend for formattinh
        * inst/unitTests/runit.misc.R: Added new unit test
        * inst/unitTests/cpp/misc.cpp: C++ backend for test

2014-11-19  Dirk Eddelbuettel  <edd@debian.org>

        * .travis.yml: Temporary stop-gap measure of setting CRAN to something
        other than the RStudio CDN which currently has DNS issue

        * inst/include/Rcpp/internal/NAComparator.h: Support sorting of complex
        numbers, thanks to patch by Yixuan Qiu (in PR #202)

2014-11-08  Kevin Ushey  <kevinushey@gmail.com>

        * R/Attributes.R: Fix regular expression used to find source files for
        compileAttributes

2014-11-02  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/RcppTestA: Rename to inst/unitTests/testRcppPackage
        * inst/unitTests/testRcppPackage: Updated throughout

        * inst/include/Rcpp/Rmath.h: As suggested by Kevin, test for R_VERSION
        via #define to conditon on R >= 3.1.2 -- this does not require a hard
        constraint in DESCRIPTION yet on newer R will get R::[dpq]nbinom_mu()

2014-11-01  Dirk Eddelbuettel  <edd@debian.org>

        * src/api.cpp: Do not include execinfo.h on AIX, per r-devel discussion
        with Mike Beddo, and http://sf.net/p/predef/wiki/OperatingSystems/

2014-10-29  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Rmath.h: Comment out R::[dpqr]nbinom_mu functions as
        not declared by R with Rf_* name-mapping prefixes

2014-10-17  Chenliang Xu <luckyrand@gmail.com>

        * R/Attributes: Enable scanning of header files

2014-10-03  JJ Allaire  <jj@rstudio.org>

        * R/Attributes.R: Only look for plugins in the package's namespace
        (rather than entire search path)

2014-10-01  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/vector/ListOf.h ListOf<T> inherits relevant proxies
        * inst/unitTests/cpp/ListOf.cpp: Idem
        * inst/unitTests/runit.ListOf.R: Idem

2014-09-29  Dirk Eddelbuettel  <edd@debian.org>

        * debian/*: Changes for Debian release of 0.11.3

        * inst/NEWS.Rd: Removed a double entry

2014-09-27  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.11.3
        * inst/NEWS.Rd: Release 0.11.3
        * inst/include/Rcpp/config.h: Release 0.11.3

        * ChangeLog: Added a few more entries based on commit log
        * inst/NEWS.Rd: Idem

2014-09-26  JJ Allaire <jj@rstudio.org>

        * DESCRIPTION: Bump version to enable checking for dryRun.

2014-09-23  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: Add dryRun parameter to sourceCpp.

2014-09-21  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Shorten Description: to single paragraph

2014-09-21  Kevin Ushey  <kevinushey@gmail.com>

        * inst/unitTests/runit.environments.R: Use 'checkIdentical' as it's a
        more appropriate expression of intent

2014-09-15  Dirk Eddelbuettel  <edd@debian.org>

        * R/Rcpp.package.skeleton.R: Use more neutral default name, email settings
        * man/Rcpp.package.skeleton.Rd: Document these

2014-09-14  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/testRcppClass/man/Rcpp_class_examples.Rd: Similar
        update to yesterday's update for testRcppModule

2014-09-14  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/vector/Vector.h: Alternate strategy using SFINAE
        * inst/include/Rcpp/traits/traits.h: Idem
        * inst/include/Rcpp/traits/enable_if.h: Idem

2014-09-13  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/vector/Vector.h: Allow logical vectors to be created
        from bools
        * inst/unitTests/runit.Vector.R: Idem
        * inst/unitTests/cpp/Vector.cpp: Idem

2014-09-13  Dirk Eddelbuettel  <edd@debian.org>

        * inst/skeleton/Rcpp_modules_examples.Rd: Added to document modules examples

        * inst/unitTests/testRcppModule/NAMESPACE: Updated for current Modules use
        * inst/unitTests/testRcppModule/R/zzz.R: Updated for current Modules use
        * inst/unitTests/testRcppModule/man/Rcpp_modules_examples.Rd: Also added here

2014-09-10  Dirk Eddelbuettel  <edd@debian.org>

        * R/R/Rcpp.package.skeleton.R: If available, pkgKitten used for skeleton pkg

2014-09-09  Dirk Eddelbuettel  <edd@debian.org>

        * R/unit.tests.R: Fully qualify three functions from RUnit via ::

2014-09-03  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/Environment.h: make new_env a free function

2014-09-02  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/api/meat/proxy.h: Finish meat reintroduction + tests
        * inst/unitTests/runit.wrap.R: Idem
        * inst/unitTests/cpp/wrap.cpp: Idem
        * inst/include/Rcpp/proxy/FieldProxy.h: Idem

2014-09-02  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/vector/Vector.h: Reversing change from Aug 30: the
        Vector ctor from char* and string are used for CharacterVector()

2014-09-02  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: Include LinkingTo in DESCRIPTION fields scanned
        to confirm that C++ dependencies are referenced by package.

2014-09-01  Yixuan Qiu <yixuan.qiu@cos.name>

        * inst/include/Rcpp/vector/Vector.h: fix return value of range eraser

2014-09-01  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/vector/ListOf.h: `size()` member function should
        return `R_len_t` rather than `int`

2014-08-30  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/Environment.h: Add 'new_env' function

2014-08-30  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/vector/Vector.h: Mark two 'from string' ctors as
        deprecated following a suggestion by Yixuan Qiu [reversed on 2014-09-02]

2014-08-18  Dirk Eddelbuettel  <edd@debian.org>

        * vignettes/Rcpp-FAQ.Rnw: Added a new entry regarding licensing of
        packages stressing that any combined work linking to the GPL-ed R will
        also be under the terms of the GNU General Public License.

2014-08-13  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/api/meat/meat.h: Reintroduce meat
        * inst/include/Rcpp/api/meat/proxy.h: Idem
        * inst/include/Rcpp/proxy/AttributeProxy.h: Idem
        * inst/include/Rcpp/proxy/Binding.h: Idem
        * inst/include/Rcpp/proxy/NamesProxy.h: Idem
        * inst/include/Rcpp/proxy/SlotProxy.h: Idem
        * inst/include/Rcpp/proxy/TagProxy.h: Idem
        * inst/include/Rcpp/proxy/proxy.h: Idem

2014-08-08  Christian Authmann <authmanc@Mathematik.Uni-Marburg.de>

        * inst/unitTests/cpp/InternalFunction.cpp: New unit test support
        * inst/unitTests/cpp/InternalFunctionCPP11.cpp: Idem
        * inst/unitTests/runit.InternalFunction.R: Idem
        * inst/unitTests/runit.InternalFunctionCPP11.R: Idem

2014-08-06  Christian Authmann <authmanc@Mathematik.Uni-Marburg.de>

        * inst/include/Rcpp/InternalFunctionWithStdFunction.h: Extend the
        existing Rcpp::InternalFunction interface to work with std::function,
        conditional on a sufficient C++11 support by the compiler

2014-08-05  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Date.h: Remove a const qualifier which triggers a
        warnings as 'type qualifiers ignored on function return type'

2014-08-03  Dirk Eddelbuettel  <edd@debian.org>

        * vignettes/Rcpp-FAQ.Rnw: Updated with respect to OS X installations
        requiring Fortran (to e.g. build against RcppArmadillo)

2014-07-29  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/vector/no_init.h: Add no_init for matrices
        * inst/include/Rcpp/vector/Matrix.h: Idem
        * inst/include/Rcpp/vector/Vector.h: Idem
        * inst/unitTests/runit.Matrix.R: Idem
        * inst/unitTests/cpp/Matrix.cpp: Idem

2014-07-29  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/vector/proxy.h: Removed operator bool() cast as
        discussed by Christian Authmann on rcpp-devel

2014-07-28  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/generated/InternalFunction__ctors.h: Updated from
        corrected creator script

2014-07-25  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Benchmark/Timer.h: Added new static method
        get_timers() to return a vector of timers useful for multithreaded
        contexts; also removed two unused old member functions (cf #157)

2014-07-14  Kevin Ushey  <kevinushey@gmail.com>

        * inst/unitTests/runit.Matrix.R: DimNames Proxy
        * inst/unitTests/cpp/Matrix.cpp: Idem
        * inst/include/Rcpp/vector/Matrix.h: Idem
        * inst/include/Rcpp/vector/DimNameProxy.h: Idem

2014-07-12  Kevin Ushey  <kevinushey@gmail.com>

        * R/Attributes.R: Strip version in .parseLinkingTo

2014-07-12  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/generated/InternalFunction__ctors.h: Regenerated
        with tighter whitespace and updated header information from updated
        generator script in corresponding rcpp-scripts repo
        * inst/include/Rcpp/module/Module_generated_CppFunction.h: Idem
        * inst/include/Rcpp/module/Module_generated_CppMethod.h: Idem
        * inst/include/Rcpp/module/Module_generated_Pointer_CppMethod.h: Idem
        * inst/include/Rcpp/module/Module_generated_Pointer_method.h: Idem
        * inst/include/Rcpp/module/Module_generated_function.h: Idem
        * inst/include/Rcpp/module/Module_generated_get_signature.h: Idem
        * inst/include/Rcpp/module/Module_generated_method.h: Idem

2014-07-09  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/Language.h: OUT -> RESULT_TYPE
        * inst/include/Rcpp/generated/InternalFunction__ctors.h: Idem
        * inst/include/Rcpp/module/Module_generated_CppFunction.h: Idem
        * inst/include/Rcpp/module/Module_generated_CppMethod.h: Idem
        * inst/include/Rcpp/module/Module_generated_Pointer_CppMethod.h: Idem
        * inst/include/Rcpp/module/Module_generated_Pointer_method.h: Idem
        * inst/include/Rcpp/module/Module_generated_function.h: Idem
        * inst/include/Rcpp/module/Module_generated_get_signature.h: Idem
        * inst/include/Rcpp/module/Module_generated_method.h: Idem
        * inst/include/Rcpp/module/get_return_type.h: Idem
        * inst/include/Rcpp/sugar/block/SugarBlock_1.h: Idem
        * inst/include/Rcpp/sugar/block/SugarBlock_2.h: Idem
        * inst/include/Rcpp/sugar/block/SugarBlock_3.h: Idem
        * inst/include/Rcpp/sugar/block/SugarMath.h: Idem
        * inst/include/Rcpp/sugar/functions/complex.h: Idem

2014-07-08  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/InternalFunction.h: Add missing update(SEXP) method
        per GitHub Pull Request #152, with thanks to Omar Andres Zapata Mesa
        * inst/THANKS: Updated

2014-07-04  Dirk Eddelbuettel  <edd@debian.org>

        * vignettes/Rcpp-unitTests.Rnw: Commented-out copy of results to /tmp

2014-06-29  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: fix setwd problem when sourceCpp used a
        relative path and included an R code chunk

2014-06-20  Dirk Eddelbuettel  <edd@debian.org>

        * include/Rcpp/sugar/functions/ifelse.h: Applied pull request #150 by
        Romain to have operator{} return the correct NA type

2014-06-11  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/macros/macros.h: No longer include
        macros/preprocessor_generated.h which was deprecated as of Rcpp 0.10.5
        * inst/include/Rcpp/macros/preprocessor_generated.h: Removed

2014-06-08  Dirk Eddelbuettel  <edd@debian.org>

        * cleanup: Do not remove 'build/Rcpp.pdf', thanks to hint by Kurt / CRAN

2014-06-06  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.11.2
        * inst/NEWS.Rd: Release 0.11.2
        * inst/include/Rcpp/config.h: Release 0.11.2
        * debian/*: Similarly updated for new release to Debian

        * tests/doRUnit.R: Additional check added for release version case

2014-06-05  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: Use -std=c++0x for cpp11 plugin on Windows if R <= 3.0

2014-05-28  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/vector/vector_from_string.h: Protect result of
        Rf_mkString

2014-05-24  Dirk Eddelbuettel  <edd@debian.org>

        * .Rbuildignore: Add .dir-locals.el

2014-05-23  Dirk Eddelbuettel  <edd@debian.org>

        * R/Module.R (new_dummyObject): Remove erraneous quotes

        * .dir-locals.el: Setting tab-width to 8

2014-05-18  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/vector/Vector.h: Safer casting to fix #146
        * inst/include/Rcpp/Environment.h: Idem
        * inst/include/Rcpp/api/meat/Environment.h: Idem
        * inst/include/Rcpp/vector/Vector.h: Idem

        * .dir-locals.el: Added for project-local Emacs settings

2014-05-10  Dirk Eddelbuettel  <edd@debian.org>

        * R/Attributes.R (compileAttributes): Read Imports: as well

2014-05-07  Kevin Ushey  <kevinushey@gmail.com>

        * R/Attributes.R (.plugins[["cpp11"]]): Set USE_CXX1X to more
          reasonable non-empty value

2014-05-06  Kevin Ushey  <kevinushey@gmail.com>

        * R/Attributes.R (.plugins[["cpp11"]]): Set USE_CXX1X to non-empty
          value

2014-04-30  Dirk Eddelbuettel  <edd@debian.org>

        * R/Attributes.R: Add plugins for C++0x and C++1y

2014-04-30  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: Use USE_CXX1X for cpp11 plugin when R >= 3.1

2014-04-02  Dirk Eddelbuettel  <edd@debian.org>

        * tests/doRUnit.R: Better RUnit error report with thanks to Murray

2014-03-18  JJ Allaire <jj@rstudio.org>

        * man/cppFunction.Rd: Correct package header file example to use .h

2014-03-14  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/DataFrame.h: Add missing return in Impl method

2014-03-13  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.11.1
        * inst/NEWS.Rd: Release 0.11.1
        * inst/include/Rcpp/config.h: Release 0.11.1
        * debian/*: Similarly updated for new release to Debian

2014-03-09  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/vector/const_string_proxy.h: Workaround for issue
        with constructing proxies from CHARSXPs

2014-03-08  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/proxy/proxy.h: Make sure proxies know about the
        const char* wrap shortcut

2014-03-08  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/proxy/Binding.h: Remove spurious ';' [g++ -pedantic]
        * inst/include/Rcpp/proxy/ProtectedProxy.h: Idem
        * inst/include/Rcpp/proxy/TagProxy.h: Idem
        * inst/include/Rcpp/proxy/AttributeProxy.h: Idem

2014-03-05  Kevin Ushey <kevinushey@gmail.com>

        * inst/include/Rcpp/proxy/FieldProxy.h: bandaid for protection issue
        in operator= of FieldProxy
        * R/unit.tests.R: modify Rcpp:::test so we can run tests with
        gctorture(TRUE)

2014-03-03  Kevin Ushey <kevinushey@gmail.com>

        * inst/include/Rcpp/proxy/SlotProxy.h: Add missing const_SlotProxy ctor
        definition

2014-02-24  Kevin Ushey  <kevinushey@gmail.com>

        * R/Rcpp.package.skeleton.R: make sure we add loadModule
        to NAMESPACE when module is TRUE

2014-02-23  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/DataFrame.h: better nrows behavior

2014-02-17  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/traits/un_pointer.h: fix bug in un_pointer for object<T>

2014-02-17  Kevin Ushey <kevinushey@gmail.com>

        * src/attributes.cpp: Fix attributes behavior with
        ::create, and also add an option for a default constructor
        (e.g. NumericVector v = NumericVector(10)) gives a default
        value of 'numeric(10)' at the R level). Also make NAs
        keep their type when exposed to R.

2014-02-16  JJ Allaire <jj@rstudio.org>

        * src/attributes.cpp Replace (incorrect) call to
        Rcpp::internal::jumpToTop with Rf_onintr

2014-02-07  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/Reference.h: Add default ctor

2014-02-03  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/vector/Vector.h: Enable conversion from
        Rcpp vectors to RObject

2014-02-02  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.11.0
        * inst/NEWS.Rd: Release 0.11.0
        * inst/include/Rcpp/config.h: Release 0.11.0
        * debian/*: Similarly updated for new release to Debian

2014-02-02  JJ Allaire  <jj@rstudio.org>

        * R/Attributes.R: Use placeholder for .Call to avoid warning

2014-02-01  Dirk Eddelbuettel  <edd@debian.org>

        * tests/doRUnit.R: Simplified following pattern in RProtoBuf

        * vignettes/Rcpp-unitTests.Rnw: Remove a now superfluous global var

        * vignettes/Rcpp.bib: Updated references to current packages

2014-02-01  JJ Allaire  <jj@rstudio.org>

        * R/Attributes.R: Embedded R code chunks in sourceCpp can
        now be disabled

2014-01-31  Dirk Eddelbuettel  <edd@debian.org>

        * vignettes/Rcpp-FAQ.Rnw: Render code with background boxen
        * vignettes/Rcpp-package.Rnw: Idem
        * vignettes/Rcpp-modules.Rnw: Idem
        * vignettes/Rcpp-extending.Rnw: Idem
        * vignettes/Rcpp-sugar.Rnw: Idem

        * vignettes/Rcpp-attributes.Rnw: Switched to highlight driver

        * inst/include/Rcpp/Benchmark/Timer.h: Reverted back to using
        iterators via use of anonymous namespace for accessors

        * inst/announce/ANNOUNCE-0.11.0.txt: Updated

2014-01-31  Dirk Eddelbuettel  <edd@debian.org>

        * man/Rcpp.package.skeleton.Rd: Also updated

2014-01-31  JJ Allaire  <jj@rstudio.org>

        * R/Attributes.R: Embedded R code chunks in sourceCpp are now
        executed within the working directory of the C++ source file.

2014-01-30  Dirk Eddelbuettel  <edd@debian.org>

        * vignettes/Rcpp-package.Rnw: Updates for upcoming release

2014-01-28  Dirk Eddelbuettel  <edd@debian.org>

        * vignettes/Rcpp-FAQ.Rnw: Some updates for upcoming release

2014-01-25  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Benchmark/Timer.h: Simplified -- Rcpp Gallery
        example using it was not building any longer under g++

2014-01-23  Dirk Eddelbuettel  <edd@debian.org>

	* inst/announce/ANNOUNCE-0.11.0.txt: Added for next release

2014-01-21  Dirk Eddelbuettel  <edd@debian.org>

	* R/Rcpp.package.skeleton.R: Update skeleton package to add proper
	Imports: to DESCRIPTION, and importFrom() to NAMESPACE

2014-01-19  Kevin Ushey  <kevinushey@gmail.com>

	* inst/include/Rcpp/api/meat/Vector.h: Add missing UNPROTECT in
	push_back_name__impl

2014-01-18  Kevin Ushey  <kevinushey@gmail.com>

	* inst/unitTests/runit.S4.R: Add a test for ctor from slot proxy
	* inst/unitTests/cpp/S4.cpp: Add a test for ctor from slot proxy
	* inst/include/Rcpp/vector/Vector.h: Add missing r_cast to vector
	ctor from proxy

2014-01-18  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: More restrictive matching of C++ file extensions
        for compileAttributes.

2014-01-18  Kevin Ushey  <kevinushey@gmail.com>

	* inst/unitTests/cpp/Matrix.cpp: Add unit test
	* inst/unitTests/runit.Matrix.R: Add unit test
	* inst/include/Rcpp/api/meat/Matrix.h: Bug fix in operator=

2014-01-17  Dirk Eddelbuettel  <edd@debian.org>

	* R/RcppLdpath.R (RcppCxxFlags): Restore function to supply values
	for include files for packages not yet converted to LinkingTo:

2014-01-16  JJ Allaire <jj@rstudio.org>

        * inst/include/Rcpp/macros/macros.h: Use Rf_onintr rather than
        non-public Rf_jump_to_toplevel
        * inst/include/Rcpp/DateVector.h: Fix GreedyVector compilation error
        * inst/include/Rcpp/DatetimeVector.h: Fix GreedyVector compilation error

2014-01-15  Dirk Eddelbuettel  <edd@debian.org>

	* inst/include/Rcpp/exceptions.h: Move stop() into Rcpp namespace

2014-01-03  JJ Allaire <jj@rstudio.org>

        * .gitignore: Added src/<object-files>, *.Rproj, and .Rproj.user
        * inst/include/Rcpp/Interrupt.h: New checkUserInterrupt function
        that provides a C++ friendly implementation of R_CheckUserInterrupt
        * inst/include/RcppCommon.h: Include Rcpp/Interrupts.h
        * inst/include/macros/macros.h: Check for interrupts in END_RCPP
        * src/attributes.cpp: Handle interrupted-error in attribute
        function envelope.

2013-12-31  Dirk Eddelbuettel  <edd@debian.org>

	* vignettes/Rcpp.bib: Updated CRAN package references

2013-12-20  Kevin Ushey  <kevinushey@gmail.com>

        * inst/include/Rcpp/sugar/tools/mapcompare.h: Use a union for
        type punning, to avoid compiler warning on aliasing. Also
        switch to uint64_t to enforce 64bit comparison.
        * inst/include/Rcpp/RObject.h: Add missing *this return for
        RObject_impl::operator=

2013-12-20  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/RObject.h: Applied fix by Kevin Ushey (#88)
        * inst/include/Rcpp/vector/Vector.h: Ditto (#89)

2013-12-01  Kevin Ushey  <kevinushey@gmail.com>

        * R/Rcpp.package.skeleton.R: Fixed bug relating to user-supplied
        functions in 'list' argument
        * inst/unitTests/runit.Rcpp.package.skeleton.R: Added unit tests

2013-11-30  Dirk Eddelbuettel  <edd@debian.org>

        * vignettes/Rcpp-FAQ.Rnw: Updated and corrected in several spots

2013-11-22  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/stats/nt.h: Correct expansion of (d|q|p)nt()
        * inst/unitTests/runit.stats.R: Added unit tests for t dist with ncp
        * inst/unitTests/cpp/stats.cpp: C++ side of expamded unit tests

2013-11-05  Dirk Eddelbuettel  <edd@debian.org>

        * .travis.yml: Added to support continuous integration on github

2013-10-28 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/protection/Armor.h : Armor::operator SEXP has to be const
        for it to work properly with wrap.

2013-10-27  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.10.6
        * inst/NEWS.Rd: Release 0.10.6
        * inst/include/Rcpp/config.h: Release 0.10.5
        * debian/*: Similarly updated for new release to Debian

2013-10-17  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: sourceCpp now correctly binds to Rtools 3.0 and 3.1

2013-10-16  Dirk Eddelbuettel  <edd@debian.org>

        * R/Rcpp.package.skeleton.R (Rcpp.package.skeleton): Deprecate
        namespace argument which package.skeleton() no longer uses
        * man/Rcpp.package.skeleton.Rd: Updated documentation accordingly

2013-10-16 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/api/meat/is.h : added missing implementation for
        is<Language> and is<DottedPair>

2013-10-14 Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/protection/protection.h: added
        Shield/Shelter/Armor
        * DESCRIPTION: bump to version 0.10.5.3

2013-10-12  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Depends): Rolled Depends: on R to "R (>= 3.0.0)" as
        required by the vignette building code (with thanks to Uwe Ligges)

2013-10-08  Dirk Eddelbuettel  <edd@debian.org>

        * NAMESPACE: Export LdFlags as well as RcppLdFlags
        * man/RcppLdFlags.Rd: Updated

2013-10-06  John M Chambers  <jmc@r-project.org>

        * R/exposeClass.R: avoid warning from unclosed file()

2013-10-06  John M Chambers  <jmc@r-project.org>

        * NAMESPACE: change classModule to exposeClass
        * R/classModule.R: delete
        * man/classModule.Rd: delete
        * R/exposeClass.R: add
        * man/exposeClass.Rd: add
        * man/setRcppClass.Rd: update, clarify, recommend exposeClass()

2013-10-03  John M Chambers  <jmc@r-project.org>

        * R/classModule.R: new function to write module file for class
        * man/classModule.Rd: documentation for new function classModule()
        * NAMESPACE: export classModule
        * R/loadModule.R: clean up an error message
        * R/RcppClass.R: defaults for module consistent w. classModule()
        * man/setRcppClass.Rd: add defaults, explain need for saveAs

2013-10-02  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/traits/is_na.h: More fixes thanks to Thomas Tse

2013-10-01  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/api/meat/is.h: Applied patch by Thomas Tse to
        provide missing Character(Vector|Matrix)

        * DESCRIPTION: Bump to development release 0.10.5.1

2013-09-28  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.10.5
        * inst/NEWS.Rd: Release 0.10.5
        * inst/include/Rcpp/config.h: Release 0.10.5
        * debian/*: Similarly updated for new release to Debian

        * vignettes/Rcpp-unitTests.Rnw: Switched to Charter font just like
        the other eight vignettes

2013-09-28 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/module/Module_generated_CppMethod.h : more code bloat
        to handle flexible semantics for passing parameters in methods
        * include/Rcpp/module/Module_generated_Pointer_CppMethod.h : same
        * inst/unitTests/cpp/Module.cpp: testing the above
        * unitTests/runit.Module.R: testing

2013-09-27  Dirk Eddelbuettel  <edd@debian.org>

        * vignettes/Rcpp-unitTests.Rnw: Re-activated vignette
        * DESCRIPTION: Version number bumped to 0.10.4.6

2013-09-27 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/module/Module_generated_CppFunction.h : regenerated to
        use input_parameter traits for more flexible parameter passing strategy
        * unitTests/cpp/Module.cpp : more testing
        * unitTests/runit.Module.R : more testing

2013-09-22  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/sugar/functions/diff.h: Declare set_previous
        const and add a missing traits:: prefix before is_na

        * inst/unitTests/cpp/sugar.cpp: Unit test for diff() of int. vector
        * inst/unitTests/runit.sugar.R: Invoke new test

2013-09-21  Dirk Eddelbuettel  <edd@debian.org>

        * vignettes/Rcpp-modules.Rnw: Remove vignette-local compilations
        which again caused problems for the Windows builds at R-Forge and
        win-builder. Unit tests comprise the same functionality and pass.

        * vignettes/Rcpp-attributes.Rnw: Refresh look by using Bitstream
        Charter, and microtype package (cf http://www.khirevich.com/latex)
        * vignettes/Rcpp-extending.Rnw: Idem
        * vignettes/Rcpp-FAQ.Rnw: Idem
        * vignettes/Rcpp-modules.Rnw: Idem
        * vignettes/Rcpp-package.Rnw: Idem
        * vignettes/Rcpp-quickref.Rnw: Idem
        * vignettes/Rcpp-sugar.Rnw: Idem

2013-09-20  Dirk Eddelbuettel  <edd@debian.org>

        * R/Module.R: More ':::' cleanups to make R CMD check happy
        * R/RcppClass.R: Ditto

        * NAMESPACE: Some new exports related to this

        * man/setRcppClass.Rd: Document loadRcppClass()
        * man/Rcpp-internal.Rd: Added in order to document
        cpp_object_initializer() and cpp_object_dummy()

2013-09-19  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/longlong.h: Unbreak long long by making it (as
        before) conditional on g++ (or clang) as well as C++11. The condition
        can be OR'ed with another suitably-defined variable, but the default
        has to be off as CRAN compliance has to remain the standard

2013-09-19  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/longlong.h: isolate all handling of long long
        in a separate file which we might choose not to include by default

        * include/Rcpp/traits/r_sexptype_traits.h : unsigned int wrapped as
        REALSXP long standing feature request from Murray.
        * R/Attributes.R : Added the helper demangle and sizeof functions
        * man/demangle.Rd : Documentation for demangle and sizeof
        * include/Rcpp/platform/compiler.h : less restritive support of long
        long types. But still behind a test for gcc and a test for the
        availability of the type, and the __extension__. -pedantic does not
        warn about it

2013-09-18  JJ Allaire  <jj@rstudio.org>

        * R/Attributes.R: Don't search the inline package as a fallback when
        loading plugins for the the Rcpp::plugins attribute

2013-09-18  Romain Francois <romain@r-enthusiasts.com>

        * vignettes/Rcpp-package.Rnw: Updating the vignette. Setting
        attributes to TRUE by default.
        * R/Rcpp.package.skeleton.R: Setting attributes to TRUE by
        default. This is what we should encourage people to use.
        * include/Rcpp/as.h: add as<char> specialization
        * include/Rcpp/sugar/functions/diff.h : rework the implementation of
        diff so that it works even when we don't know the previous value
        * unitTests/runit.sugar.R :
        * unitTests/cpp/sugar.cpp :
        * include/Rcpp/sugar/functions/range.h : factored out of minmax.h
        * include/Rcpp/sugar/functions/min.h : factored out of minmax.h
        * include/Rcpp/sugar/functions/max.h : factored out of minmax.h
        * TODO : 3 less items

2013-09-17  JJ Allaire  <jj@rstudio.org>

        * R/Attributes.R: Call inlineCxxPlugin and Rcpp.plugin.maker without
        qualification rather than with ':::'

2013-09-17  Dirk Eddelbuettel  <edd@debian.org>

        * NAMESPACE: Export RcppLdFlags which is often used to build Rcpp
        * man/RcppLdFlags.Rd: Added required manual page
        * R/Attributes.R: Call RcppLdFlags() via '::' instead of ':::'
        * R/SHLIB.R: Ditto
        * R/inline.R: Ditto

        * vignettes/Rcpp-FAQ.Rnw: Add %\VignetteEngine{highlight::highlight}
        * vignettes/Rcpp-attributes.Rnw: Idem
        * vignettes/Rcpp-extending.Rnw: Idem
        * vignettes/Rcpp-modules.Rnw: Idem
        * vignettes/Rcpp-package.Rnw: Idem
        * vignettes/Rcpp-quickref.Rnw: Idem
        * vignettes/Rcpp-sugar.Rnw: Idem

        * vignettes/Rcpp-package.Rnw: Altered to make use of highlight
        package; also no longer build embedded demo package (which upsets R
        CMD check under R-devel)

2013-09-16  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R : Remove calls to non-exported functions from the tools package

2013-09-16  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/internal/Exporter.h : Specific handling of containers
        (std::vector, std::deque, and std::list so that we use their faster
        range constructor when we can, and so let the STL optimize how data
        is copied
        * include/Rcpp/api/meat/export.h : Implementation of the above
        * include/Rcpp/vector/Vector.h : added Vector( const char* ) ctor
        * DESCRIPTION : bump to 0.10.4.5 (for RcppExtras)

2013-09-15  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/InputParameter.h (Rcpp): Add 'const' case

        * inst/unitTests/cpp/Vector.cpp: New unit tests for std::vector
        conversions, using both int and double arguments
        * inst/unitTests/runit.Vector.R: R complement of these tests

2013-09-15  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/InputParameter.h : added the traits::input_parameter
        trait to add another layer of abstration.
        * include/Rcpp/macros/module.h : taking advantage of input_parameter
        to specialize how to work with module objects
        * src/attributes.cpp : using traits::input_parameter<T> instead of
        InputParameter<T>

2013-09-14  Dirk Eddelbuettel  <edd@debian.org>

        * src/attributes.cpp : Precede closing '>' by space to avoid '>>'
        * inst/include/Rcpp/platform/compiler.h: Further refine #if test for
        'long long' by conditioning __LP64__ on also using clang/llvm

        * src/attributes.cpp : Precede closing '>' by space to avoid '>>'

2013-09-13  Romain Francois <romain@r-enthusiasts.com>

        * src/api.cpp : added "long long" to the capabilities function.
        * include/Rcpp/platform/compiler.h : demangling is definitely
        available on all mac versions using gcc. No point is testing for OSX
        version.
        * include/Rcpp/InputParameter.h : extra layer of abstraction to allow
        for custom handling of references etc ... used in RcppArmadillo
        * src/attributes.cpp : using InputParameter
        * DESCRIPTION: bump to 0.10.4.4

2013-09-12  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/platform/compiler.h : patch submitted by Murray for
        better support of long long type.
        * include/Rcpp/platform/compiler.h : gcc 4.2.1 has tr1/unordered_map
        and tr1/unordered_set. Previous test was for gcc 4.4.0 for some
        reason

2013-08-31  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/*: Moved all vignettes to vignettes/*
        * vignettes/*: Minor updates to some vignettes

2013-08-22  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/traits/is_primitive.h : new trait to identify if a
        type is primitive, this is a shortcut of using r_type_traits and
        compare it to r_type_primitive_tag
        * include/Rcpp/traits/r_type_traits.h : new tag r_type_pair_tag to
        handle wrapping map<KEY, VALUE> where KEY can be converted to String
        and VALUE can wrap itself
        * include/Rcpp/internal/wrap.h : handling map<KEY, VALUE> and vector<T>
        where T is a class handled by modules
        * include/Rcpp/api/meat/wrap.h : implementations to handle map<KEY,
        VALUE>
        * unitTests/cpp/wrap.cpp : more tests for map<KEY, VALUE> with KEY
        not a string
        * unitTests/runit.wrap.R : more tests for map<KEY, VALUE> with KEY
        not a string

        * include/Rcpp/internal/export.h : added export_range__dispatch for
        the r_type_generic_tag tag. Meaning we can now use as< vector<T> >
        where T is not a primitive
        * include/Rcpp/api/meat/export.h : implementation in meat because it needs as

2013-08-01  Romain Francois <romain@r-enthusiasts.com>

        * unitTests/cpp/wstring.cpp: fix to re-enable wstring test suite.
        * unitTests/runit.wstring.R: re-enable the wstring test suite.

2013-07-31  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Bump development version to 0.10.4.3

        * inst/doc/Makefile: Rejigged pdf builds in another attempt at
        pleasing whatever runs the builds on r-forge. L'espoir fait vivre.

2013-07-25  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/sugar/functions/is_na.h : added is_na for DateVector and
        DatetimeVector
        * include/Rcpp/Date.h : added is_na method
        * include/Rcpp/Datetime.h : added is_na method
        * unitTests/cpp/dates.cpp : removed the ignoreme useless parameters
        * unitTests/runit.Date.R : idem
        * src/attributes.cpp: collecting functions in a FunctionMap. Will use this
        for dispatching

2013-07-24  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/traits/is_module_object.h: trait class that identifies
        at compile time if a given type is a type exposed by a module,
        i.e. if we used the RCPP_EXPOSED_AS macro
        * include/Rcpp/is.h: able to identify if an object is of a given type
        exposed by a module (supports references and pointers too).
        * src/Module.cpp: implementation of is_module_object_internal that
        checks if an object is of a given typeid, used by is<T> where T is
        module exposed

2013-07-23  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/as.h: support as<T*> and as<const T*> where T is a class
        exposed by modules
        * include/Rcpp/macros/module.h: idem
        * include/Rcpp/traits/un_pointer.h: handle the object<T> case
        * include/Rcpp/traits/r_type_traits.h: adding traits to help the with
        as<T*> and as<const T*>
        * unitTests/runit.Module.R: testing as<T*> and as<const T*>
        * unitTests/cpp/Module.cpp: idem
        * src/attributes.cpp: take advantage of a more flexible as<>. The
        Type class gains a full_name() method that shows const-ness and
        reference-ness

2013-07-17  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/vector/instantiation.h: added the DoubleVector alias
        to NumericVector
        * include/Rcpp/is.h: added is template function

2013-07-11  Dirk Eddelbuettel  <edd@debian.org>

        * R/Attributes.R: Add an OpenMP plugin

2013-07-03  Romain Francois <romain@r-enthusiasts.com>

        * unitTests/runit.modref.R: using sourceCpp
        * unitTests/runit.Module.R: using sourceCpp
        * unitTests/runit.Vector.R: no more uses of inline
        * unitTests/runTests.R: we don't need inline no more for testing
        * doc/unitTests/Rcpp-unitTests.R: idem

2013-07-02  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/vector/Vector.h: fill__dispatch was mispelled (as
        fill_dispatch) for the non trivial case, so it did not work
        * unitTests/runit.Matrix.R: using sourceCpp
        * unitTests/runit.misc.R: using sourceCpp
        * unitTests/runit.wrap.R: using sourceCpp
        * unitTests/runit.support.R: using sourceCpp
        * unitTests/runit.rmath.R: using sourceCpp
        * unitTests/runit.RObject.R: using sourceCpp
        * unitTests/runit.stats.R: using sourceCpp
        * unitTests/runit.XPTr.R: using sourceCpp
        * unitTests/runit.Vector.R: testing List( int, IntegerVector ) which
        eventually uses fill__dispatch
        * include/Rcpp/traits/r_type_traits.h: support for as<T&> and as<const T&>
        when T is module exposed
        * include/Rcpp/as.h: as<T&> and as<const T&> when T is module exposed
        * include/Rcpp/module/Module_generated_CppFunction.h: removed the
        remove_const_and_reference since as<T&> and as<const T&> is supported
        * src/attributes.cpp: automatically populating the environment with
        the content of a module, rather than make the module object available
        in the environment

2013-07-01  Romain Francois <romain@r-enthusiasts.com>

        * R/unit.test.R: added helper function Rcpp:::unit_test_setup to avoid
        some boiler plate code in unit test files. See e.g. runit.Function.R for
        an example
        * unitTests/runit.as.R: using sourceCpp
        * unitTests/runit.Function.R: using sourceCpp
        * unitTests/runit.DataFrame.R: remove dependency on datasets

2013-06-25  Dirk Eddelbuettel  <edd@debian.org>

        * src/api.cpp: Also test for #defined(__sun) when checking for system
        lacking a valid backtrace() function for stack traces

2013-06-25  Romain Francois <romain@r-enthusiasts.com>

        * DESCRIPTION : devel version 0.10.4.1
        * src/Module.cpp : bring a simplified version of RCPP_FUNCTION 1 .. 4
        * unitTests/runit.macros.R : removed, as RCPP_FUNCTION ... are deprecated
        * include/Rcpp/macros/preprocessor_generated.h : deprecating RCPP_FUNCTION_... macros

2013-06-24  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/platform/compiler.h: Note the useful wiki page
        http://sourceforge.net/p/predef/wiki/Home with #defines for OSs,
        compilers, libraries and more

2013-06-23  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.10.4
        * inst/NEWS.Rd: Release 0.10.4
        * inst/include/Rcpp/config.h: Release 0.10.4
        * debian/*: Similarly updated for new release to Debian

2013-06-19  Romain Francois <romain@r-enthusiasts.com>

        * inst/NEWS.Rd: Document planned depreciation of old RCPP_FUNCION_*
        macros which are redundant thanks to Rcpp Modules and Rcpp Attributes

        * include/Rcpp/vector/string_proxy.h : added operator
        string_proxy::operator==( const string_proxy& ) so that me may
        compare x[i] and y[i] (x and y being CharacterVector)

        * include/Rcpp/module/Module_generated_Pointer_CppMethod.h : remove
        const and reference to OUT type in several places, that was causing
        problems e.g.  on making the Rcpp-modules vignette

        * include/Rcpp/module/Module_generated_CppMethod.h : idem

2013-06-18  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/module/Module_generated_CppFunction.h : using
        BEGIN_RCPP / END_RCPP as suggested by Ben North on Rcpp-devel. This
        should reduce cross dll exceptions issues on windows.

2013-06-14  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/stats/random/runif.h : removed unused max variable
        * include/Rcpp/stats/random/rf.h : removed unused n1 and n2 variables

2013-06-13  Romain Francois <romain@r-enthusiasts.com>

        * src/Module.cpp: small buglet in macro. Reported on Rcpp-devel

2013-06-12  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Makefile: Force serial build of vignettes in yet another
        effort to not let R-Forge fail when trying to rebuild them

2013-06-08  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp.bib: Updated entries

        * inst/doc/Rcpp-introduction.Rnw: Added pointer to 'Rcpp Attributes'
        vignette, as well as to 'Rcpp Sugar' and 'Rcpp Modules' vignettes.
        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: Idem

2013-06-06  Romain Francois <romain@r-enthusiasts.com>

        * unitTests/cpp/Vector.cpp : more unit tests for erase
        * unitTests/runit.Vector.R : more unit tests for erase

2013-06-05  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/api/meat/Vector.h : fixed Vector<>::erase(iterator,
        iterator) and correct return value of erase
        * unitTests/cpp/Vector.cpp : added regression test for the above fix
        * unitTests/runit.Vector.R : added regression test for the above fix
        * include/Rcpp/module/class.h : removed useless typedef

2013-05-31  Romain Francois <romain@r-enthusiasts.com>

        * unitTests/runit.sugar.R : new test for is_infinite and is_nan
        * unitTests/cpp/sugar.cpp : new test for is_infinite and is_nan
        * include/Rcpp/sugar/functions/is_infinite.h : new function
        is_infinite
        * include/Rcpp/traits/is_infinite.h : new function is_infinite
        * include/Rcpp/sugar/functions/is_nan.h : new function is_nan
        * include/Rcpp/traits/is_nan.h : new function is_nan

2013-05-30  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/sugar/functions/all.h : bug fixed for the NA=false
        case
        * include/Rcpp/sugar/functions/is_na.h : header
        * include/Rcpp/sugar/functions/is_finite.h : added sugar is_finite
        function
        * include/Rcpp/traits/is_finite.h : added is_finite trait
        * unitTests/runit.sugar.R : added test for is_finite
        * unitTests/cpp/S4.cpp : new cpp file to host S4 unit tests
        * unitTests/runit.S4.R : rework unit tests to use attributes
        * unitTests/runit.Reference.R : unit tests for Rcpp::Reference
        * unitTests/cpp/Reference.cpp : unit tests c++ code

2013-05-26  Dirk Eddelbuettel  <edd@debian.org>

        * src/api.cpp: Minor tweak for internal formatting

2013-05-24  J.J. Allaire <jj@rstudio.org>

        * R/Attributes.R: Disallow compilation for files that don't have
        extensions supported by R CMD SHLIB

2013-05-21  J.J. Allaire <jj@rstudio.org>

        * R/Attributes.R: Lookup plugins in inline package if they aren't
        found within the Rcpp package
        * man/pluginsAttribute.Rd: Documentation updates.

2013-05-17  J.J. Allaire <jj@rstudio.org>

        * src/attributes.cpp: prevent gc problems with RNGScope destructor
        in attributes generated functions; don't include package header
        file in generated cpp exports file
        * src/api.cpp: use unsigned long for RNG scope counter

2013-04-28  Dirk Eddelbuettel  <edd@debian.org>

        * src/api.cpp (Rcpp): No longer use Rd_format(Real|Complex) which is
        a very verboten R internal; formatting to string is now very bare
        bones

2013-04-27  Dirk Eddelbuettel  <edd@debian.org>

        * src/Makevars: Improved use as well as a new possible overrride of
        /usr/bin/install_name_tool on OS X, once again contributed by Simon

2013-04-16  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/sugar/functions/na_omit.h : new function na_omit to
        remove missing values from a vector.
        * src/attributes.cpp : portability fix (from Martyn Plummer)
        * include/Rcpp/api/meat/Vector.h : portability fix (from Martyn
        Plummer)

2013-04-14  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/traits/is_na.h: complex version did not work.
        added default for VECSXP and EXPRSXP versions

2013-04-02  Dirk Eddelbuettel  <edd@debian.org>

        * src/Date.cpp: Corrected operator-() for Date and Datetime objects
        to behave more inline with C++ standard

        * inst/include/Rcpp/Date.h: operator-() for Dates now returns a
        double as the date itself is fractional double since epoch

        * inst/unitTests/cpp/dates.cpp: New file with C++ portion of tests
        factored out from R unit test file
        * inst/unitTests/runit.Date.R: Rewritten for use with new C++ tests

2013-04-02 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/generated/DataFrame_generated.h : DateFrame::create
        uses List::create and then feeds to the DataFrame constructor, which
        seems to work better than the previous approach of calling back to the
        data.frame function in R
        * include/Rcpp/DataFrame.h : private function from_list, to help
        the new implementation of DataFrame::create
        * src/api.cpp : impl of DataFrame::from_list

2013-03-31  Dirk Eddelbuettel  <edd@debian.org>

        * debian/control (Build-Depends): Modified for Debian-only rebuilds
        under (rc version of upcoming) R 3.0.0 release
        * debian/changelog: Entry for Debian build 0.10.3-2

2013-03-29  Dirk Eddelbuettel  <edd@debian.org>

        * src/api.cpp (Rcpp): Re-enable coerce_to_string<>() for real and
        complex types with Poor Man's Versions (TM) of Rf_EncodeReal and
        Rf_EncodeComplex which the Powers That Be disallow from being used

2013-03-27 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/vector/MatrixRow.h : removed unintended printed
        messaged (reported on Rcpp-devel by Michaeal Love)

2013-03-23  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.10.3
        * inst/NEWS.Rd: Release 0.10.3
        * inst/include/Rcpp/config.h: Release 0.10.3
        * debian/*: Similarly updated for new release to Debian

2013-03-21  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.wstring.R (test.as_vector_wstring): replace
        the "€" symbol with its unicode equivalent "\u20ac"

2013-03-20  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp.bib: Updated versions for several CRAN packages

        * inst/CITATION: Add information about forthcoming book

2013-03-20 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/traits/is_wide_string.h : fixes to re-enable wrap(
        vector<char> ) and wrap( vector<wchar_t> ), needed to support package
        httpuv
        * include/Rcpp/internal/wrap.h : same

2013-03-19  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/config.h: Define RCPP_USE_NEW_PRESERVE_RELEASE
        with default value of 0 to enable/disable new preserve/release code

        * src/api.cpp: Bracket the new Rcpp object preserve / release code
        with the new variable RCPP_USE_NEW_PRESERVE_RELEASE and fall back
        to R behaviour if not set

2013-03-12 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/Module.h: added virtual destructor to CppProperty

2013-03-08  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/platform/compiler.h: Improved g++ version
        detection with thanks to Yan Zhou

2013-02-28 JJ Allaire <jj@rstudio.org>

        * src/attributes.cpp: standalone roxygen chunks (e.g. to document
        a class) are now transposed into RcppExports.R

2013-02-27 JJ Allaire <jj@rstudio.org>

        * R/Rcpp.package.skeleton.R: eliminated spurious empty hello world
        function definition in Rcpp.package.skeleton

2013-02-24 JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: add global package include file to RcppExports.cpp
        if it exists; handle Rcpp module definitions in sourceCpp
        * src/attributes.cpp: handle Rcpp module definitions in sourceCpp
        * man/sourceCpp.Rd: documentation updates

2013-02-20  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/platform/compiler.h: As deteced by Gong-Yi Liao,
        we need to test for __LONG_LONG_MAX__ (defined in limits.h) and not
        LONG_LONG_MAX (defined climits which we do not include)

2013-02-19 Romain Francois <romain@r-enthusiasts.com>

        * src/api.cpp : more debugging
        * include/RcppCommon.h : move sexp_to_name here. Used in some debugging
        * include/Rcpp/vector/MatrixRow.h : fix const version of operator[]
        * include/Rcpp/vector/Vector.h : more debugging
        * include/Rcpp/internal/wrap.h : more debugging. more dispatch.

2013-02-18 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/vector/string_proxy.h : only declare operator+=
        * include/Rcpp/String.h : define string_proxy::operator+=, now that
        String is defined.

2013-02-15 JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: Merge existing values of build related
        environment variables for sourceCpp

2013-02-12 Romain Francois <romain@r-enthusiasts.com>

        * src/api.cpp : More careful about RCPP_PROTECTION_STACK init

2013-02-08 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/as.h: re-enable as<std::string>(CharacterVector[int])
2013-02-07  Dirk Eddelbuettel  <edd@debian.org>

        * inst/THANKS: Adding Ben North for the help / bug report on iterators

2013-02-05 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/vector/string_proxy.h : more wstring support
        * include/Rcpp/XPtr.h : more debugging. removed delete_finalizer
        which is no longer used

2013-02-05 JJ Allaire <jj@rstudio.org>

        * src/attributes.cpp : ensure that line comments invalidate block
        comments when parsing for attributes

2013-02-04 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/traits/r_type_traits.h : make the
        r_type_pairstring_string_tag tag more general, handling wstring as
        well as string
        * include/Rcpp/internal/wrap.h : using make_charsexp, a more generic
        version of charsexp_from_wstring.
        * include/Rcpp/as.h : more support fot wstring
        * include/Rcpp/internal/wrap.h : rework the support of wstring
        * include/Rcpp/internal/export.h : added as_string_elt to rework the
        support of wstring
        * include/Rcpp/traits/char_type.h : new trait to help the wstring
        support
        * include/Rcpp/String.h : added some support for wstring
        * include/Rcpp/vector/string_proxy.h : adapt to add wstring support
        * unitTests/runit.wstring.R : unit tests for wstring support
        * unitTests/cpp/wstring.cpp : unit tests for wstring support

2013-02-03 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/traits/wrap_type_traits.h : support for wrap( wstring )
        * include/Rcpp/internal/export.h : exporting wstring and containers
        of wstring
        * include/Rcpp/internal/wrap.h : support for wrap( wstring ) and
        containers of wstring
        * include/RcppCommon.h : definition of charsexp_from_wstring
        * src/api.cpp: implementation of charsexp_from_wstring

2013-02-02 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/vector/MatrixRow.h: correct operator++(int) and
        operator--(int)
        * include/Rcpp/internal/Proxy_Iterator.h: correct operators ++ and --
        * include/Rcpp/sugar/Range.h: correct operators ++ and --
        * include/Rcpp/sugar/tools/iterator.h: correct operators ++ and --
        * include/Rcpp/vector/MatrixBase.h : correct operators ++ and --
        * include/Rcpp/vector/VectorBase.h : correct operators ++ and --
        * unitTests/cpp/Vector.cpp: new unit tests
        * unitTests/runit.Vector.R: new unit tests
        * src/api.cpp: comment dropTrailing0 which is not used anymore
        * include/Rcpp/as.h: support for as<wstring>
        * include/Rcpp/internal/export.h: more support for wstring

2013-01-15  Dirk Eddelbuettel  <edd@debian.org>

        * src/api.cpp (Rcpp): Commented-out coerce_to_string() for real and
        complex arguments as R-devel (as of today) dislikes use of non-API
        functions Rf_EncodeComplex’, ‘Rf_EncodeReal’, ‘Rf_formatComplex’

        * .Rbuildignore: Added inst/include/Rcpp/preprocessor and
        sugar/functions/impl which are currently empty directories

        * src/Timer.cpp (Rcpp): Avoid a 'long long' warning from a const

2014-01-15  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: don't add source directory as an include path for
        sourceCpp; fix duplicate inclusion of Rcpp directory
        * R/RcppLdpath.R: don't quote paths on windows

2014-01-14  JJ Allaire <jj@rstudio.org>

        * DESCRIPTION: bump version to 0.10.2.3
        * R/Attributes.R: handle build paths with spaces on windows
        * R/RcppLdpath.R: handle build paths with spaces on windows
        * R/tools.R: handle build paths with spaces on windows
        * src/Timer.cpp: fix OSX build (remove __MACH__ define check)
        * R/: set svn eol-style native for source files
        * src/: set svn eol-style native for source files
        * inst/include/: set svn eol-style native for source files

2014-01-13  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: use plugin includes in cppFunction; stop with
        explicit error on Windows then the Rcpl libPath or sourceCpp target
        file contains spaces in it's path; add source file directory as an
        include path for sourceCpp; special handling for sourceCpp include
        paths on windows
        * man/pluginsAttribute.Rd: clarify which fields of plugin are
        used by sourceCpp

2014-01-12  JJ Allaire <jj@rstudio.org>

        * DESCRIPTION: bump version to 0.10.2.2
        * NAMESPACE: add registerPlugin function
        * R/Attributes.R: add registerPlugin function; add plugins parameter
        to cppFunction
        * man/cppFunction.Rd: documentation updates
        * man/pluginsAttribute.Rd: documentation updates
        * man/registerPlugin: documentation updates

2014-01-11  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: initial support for Rcpp::plugins attribute; add
        built-in cpp11 plugin
        * src/attributes.cpp: initial support for Rcpp::plugins attribute

2014-01-04  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: null check on pkginfo depends field

2013-01-02  Dirk Eddelbuettel  <edd@debian.org>

        * src/Timer.cpp (Rcpp): Applied refinement of previously applied
        patch re *BSD builds, see http://bugs.debian.org/697032 for more

2012-12-30  Dirk Eddelbuettel  <edd@debian.org>

        * src/Timer.cpp (Rcpp): Added defined() tests for more *BSD family
        members as the build also failed with the FreeBSD Kernel on Debian

2012-12-27  Dirk Eddelbuettel  <edd@debian.org>

        * src/Timer.cpp (Rcpp): Applied patch kindly supplied by Rainer
        Hurling to support compilation on FreeBSD

2012-12-26  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: return invisibly from void functions
        * src/attributes.cpp: return invisibly from void functions

2012-12-21 Romain Francois <romain@r-enthusiasts.com>

        * NAMESPACE : remove C++ObjectS3 and C++ClassRepresentation classes
        * R/00_classes.R: remove unused S4 classes
        * src/internal.h: added Rcpp_PreserveObject, Rcpp_ReleaseObject and
        Rcpp_ReplaceObject as replacements to R_ versions. The back end of the Rcpp_
        version is a list (generic vector) instead of a linked list and
        is faster
        * src/Module.cpp: more debugging
        * src/barrier.cpp: added get_Rcpp_protection_stack used in the new
        stack system for protecting/releasing objects in Rcpp
        * src/api.cpp: implemetation of Rcpp_PreserveObject, Rcpp_ReleaseObject
        and Rcpp_ReplaceObject. RObject::setSEXP now uses the new system.
        The RObject(SEXP) constructor now directly uses Rcpp_PreserveObject
        More debugging for the RObject class
        Changes in api classes to better use the new protection system
        * unitTests/cpp/language.cpp: hosting unit test in sourceCpp form
        * unitTests/runit.Language.R: update unit tests
        * unitTests/runit.Module.client.package.R: remove code that has been
        commented for ages
        * include/Rcpp/DottedPair.h: better use of the RObject constructor
        * include/Rcpp/vector/Vector.h: better use of the RObject constructor
        * include/Rcpp/vector/Matrix.h: Using update_matrix instead of the virtual
        update which has been removed.
        * include/Rcpp/Module.h : more careful about types and constructors
        * include/Rcpp/XPtr.h: more debugging
        * include/Rcpp/macros/debug.h: more debugging macros
        * include/Rcpp/module/class_Base.h: using classes instead of SEXP
        * include/Rcpp/module/class.h: using classes instead of SEXP
        * include/Rcpp/generated/Language__ctors.h : using  update_language_object
        instead of the virtual update which has been removed.
        * include/Rcpp/api/meat/Vector.h : using update_vector instead of the
        virtual update that has been removed, more debugging
        * include/Rcpp/api/meat/Matrix.h : more debugging, using update_matrix
        instead of the virtual update which has been removed
        * include/Rcpp/Language.h : added update_language_object to
        replace update which was virtual
        * include/Rcpp/RObject.h : only keep declarations here

2012-12-21  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.10.2
        * inst/NEWS.Rd: Release 0.10.2
        * inst/include/Rcpp/config.h: Release 0.10.2
        * debian/*: Similarly updated for new release to Debian

        * inst/doc/unitTests/Rcpp-unitTests.R: added one more variable so
        that unitTest vignette can be built against new sourceCpp based files

2012-12-15 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/exceptions.h: added exception_to_r_condition
        * exceptions.cpp: new implementation of forward_exception_to_r that
        directly calls stop rather than a function in Rcpp
        * R/exceptions.R: remove code rendered useless
        * src/Rcpp_init.c: less exports
        * src/api.cpp: less going back to the R side

2012-12-14 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/sugar/functions/clamp.h: clamp was pretty wrong
        * unitTests/runit.sugar.R: new unit test for clamp
        * unitTests/cpp/sugar.cpp: new unit test for clamp

2012-12-12  JJ Allaire <jj@rstudio.org>

        * src/Attributes.R: always generate new dynlib file for rebuild=TRUE
        * src/attributes.cpp: set svn:eol-style to native; always generate
        new dynlib file for rebuild=TRUE; don't declare attributes constant
        strings extern

2012-12-12 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/Symbol.h: c_str becomes const and added
        Symbol::operator==(const char* )

2012-12-11  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: always print output when shared library is not
        created
        * src/attributes.cpp: consolidate attributes into single file
        * src/Attributes.cpp: consolidate attributes into single file
        * src/AttributesGen.h: consolidate attributes into single file
        * src/AttributesGen.cpp: consolidate attributes into single file
        * src/AttributesParser.h: consolidate attributes into single file
        * src/AttributesParser.cpp: consolidate attributes into single file
        * src/AttributesTypes.h: consolidate attributes into single file
        * src/AttributesUtil.h: consolidate attributes into single file
        * inst/NEWS.Rd: additional notes on changes to attributes
        * inst/doc/Rcpp-attributes/Rcpp-attributes.Rnw: update for changes to
        attributes in 0.10.2

2012-12-11 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/String.h: missing operator +=( const StringProxy& )
        * include/Rcpp/sugar/functions/strings/strings.h : string sugar functions
        * include/Rcpp/sugar/functions/strings/collapse.h : collapse
        function, implementing paste( . , collapse = "" )
        * include/Rcpp/complex.h: operator==( Rcomplex, Rcomplex )
        * src/api.cpp: implementation of operator==(Rcomplex, Rcomplex)
        * include/Rcpp/vector/Vector.h: added const version of operator[](string)

2012-12-10  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: warn when depends attribute is not matched with
        required entries in package description; add Rtools to PATH for
        duration of sourceCpp
        * src/Attributes.cpp: warn when depends attribute is not matched with
        required entries in package description
        * src/AttributesGen.cpp: prune unnecessary includes from RcppExports
        * src/Timer.cpp: fix timer build issues on windows

2012-12-10 Romain Francois <romain@r-enthusiasts.com>

        * src/api.cpp: import r_cast.cpp, coerce.cpp, RcppCommon.cpp
        and debugging.cpp content
        * include/platform/compiler.h: put here compiler specific deduction things
        * src/internal.h: new header to host function declarations for
        routines that are not exported into Rcpp.h
        * src/Rcpp_init.c: export capabilities (renamed rcpp_capabilities)
        * include/Rcpp/traits/traits.h: master file for all traits includes
        * include/Rcpp/macros/macros.h: master file for all macros includes
        * include/Rcpp/DataFrame.h: just have declaration for DataFrame
        * include/Rcpp/Benchmark/Timer.h: move it into the Rcpp:: namespace
        * include/Rcpp/cache.h: clean
        * include/Rcpp/Reference.h : field was declared const and should not
        be.  added a ConstFieldProxy class for read only use

2012-12-09 Romain Francois <romain@r-enthusiasts.com>

        * src/api.cpp: merge many .cpp files here to reduce compile time
        * src/barrier.cpp: merge with cache.cpp to reduce compile time
        * include/Rcpp/exceptions.h: drop forward_uncaught_exceptions_to_r
        * src/exceptions.cpp: drop forward_uncaught_exceptions_to_r
        * src/Date.cpp: merge all Date related files

2012-12-08 Romain Francois <romain@r-enthusiasts.com>

        * src/Timer.cpp: implementation of Timer
        * include/Rcpp/Benchmark/Timer.h: internal performance timer, based on
        the code from the microbenchmark package
        * include/Rcpp/api/meat/Matrix.h: move more in Matrix meat
        * src/Date.cpp: import the code from posixt.cpp

2012-12-07  JJ Allaire <jj@rstudio.org>

        * src/AttributesGen.cpp: use __ prefix for variables in generated
        code; add RNGScope for attribute exported functions.

2012-12-07 Romain Francois <romain@r-enthusiasts.com>

        * src/random.cpp: instantiations of random generators here
        * include/Rcpp/stats/random/random.h: only have declarations of
        random generators here. Rework the Generator template so that it
        inherits RNGScope to provide automatic calls to GetRNGstate and
        PutRNGstate

2012-12-06  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: revert DOS newlines; use new shared library name
        for each rebuild in sourceCpp
        * src/Attributes.cpp: revert DOS newlines; define RCPP_NO_SUGAR;
        use new shared library name for each rebuild in sourceCpp
        * src/AttributesGen.cpp: revert DOS newlines; convert 'try-error'
        to exception for C++ interfaces
        * src/AttributesGen.h: 'try-error' to exception for C++ interfaces
        * src/AttributesParser.cpp: revert DOS newlines; define RCPP_NO_SUGAR
        * src/RcppCommon.cpp: conversion from exeption to 'try-error'
        * include/Rcpp/exceptions.h: conversion from exeption to 'try-error'
        * include/Rcpp/preprocessor.h: add END_RCPP_RETURN_ERROR macro
        to convert exceptions to 'try-error' objects
        * include/Rcpp/iostream/Rstreambuf.h: revert DOS newlines
        * DESCRIPTION: bump version to 0.10.1.5

2012-12-06  Dirk Eddelbuettel  <edd@debian.org>

        * src/exceptions.cpp: Added include of cstdlib to compile

2012-12-06 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/api/meat/Environment.h: meat for Environment
        * src/exceptions.cpp: include config so that it knows that Rcpp can
        demangle
        * unitTests/runit.environments.R: using sourceCpp
        * src/Environment.cpp: less includes
        * src/Evaluator.cpp: less includes

2012-12-05 Romain Francois <romain@r-enthusiasts.com>

        * src/cache.cpp: added get_cache
        * include/Rcpp/hash/IndexHash.h: use a cached integer vector for the
        hash table payload. The cache vector increases as needed.
        * include/Rcpp/iostream/Rostream.h: make Rostream a template
        * include/Rcpp/iostream/Rstreambuf.h: make Rstreambuf a template
        * src/AttributesGen.cpp : include exceptions.h which was included
        implicitely by Rostream.h before
        * include/Rcpp/macros/debug.h : factor out the debugging macros
        * include/Rcpp/api/meat/RObject.h : only declare templates that use
        as and wrap. they are implemented later in the meat directory
        * include/Rcpp/api/meat/meat.h: directory containing implementations
        of templates using as and wrap
        * include/RcppCommon.h: removed unused test_named
        * src/RcppCommon.cpp: removed unused test_named
        * src/r_cast.cpp: less includes
        * src/posixt.cpp: less includes

2012-12-05  JJ Allaire <jj@rstudio.org>

        * src/Attributes.R: direct hookup of external ptr in sourceCpp
        * src/Attributes.cpp: use code generation for compileAttributes;
        direct hookup of external ptr in sourceCpp
        * src/AttributesGen.cpp: use code generation for compileAttributes;
        direct hookup of external ptr in sourceCpp
        * src/AttributesGen.h: use code generation for compileAttributes;
        direct hookup of external ptr in sourceCpp
        * src/Module.cpp: fix typo in GetCppCallable
        * include/Rcpp/iostream/Rstreambuf.h: add cstdio include
        * DESCRIPTION: bump version to 0.10.1.4

2012-12-04  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/hash/hash.h: Added include inttypes.h for intptr_t

2012-12-04  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: use simple code generation for sourceCpp
        * src/Attributes.cpp: move generators into their own source file;
        use simple code generation for sourceCpp
        * src/AttributesGen.cpp: move generators into their own source file;
        add C++ default argument parsing
        * src/AttributesGen.h: move generators into their own source file
        * src/AttributesParser.cpp: move generators into their own source file
        * src/AttributesParser.h: move generators into their own source file
        * src/AttributesTypes.h: new header for attributes types
        * src/AttributesUtil.h: new header for attributes utilities

2012-12-04 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/hash/hash.h: new implementation of IndexHash, based on
        Simon's fastmatch package
        * include/Rcpp/sugar/functions/match.h: more efficient version of match
        using new IndexHash
        * include/Rcpp/sugar/functions/unique.h: more efficient version of
        unique and in using IndexHash
        * include/Rcpp/sugar/functions/duplicated.h: more efficient version
        of duplicated and in using IndexHash
        * include/Rcpp/sugar/functions/self_match.h: more efficient version
        of self_match and in using IndexHash
        * include/Rcpp/vector/Vector.h: more efficiently create Vector from
        sugar expression that are already vectors, i.e. grab the SEXP

2012-12-03  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/RcppCommon.h: Applied patch kindly contributed by Yan
        Zhou which provides a number of more refined definition for support
        of both the C++11 standard and different compilers
        * inst/include/Rcpp/internal/wrap.h: Idem
        * inst/include/Rcpp/sugar/sugar.h: Idem
        * inst/include/Rcpp/traits/comparator_type.h: Idem
        * inst/include/Rcpp/vector/Vector.h: Idem
        * inst/unitTests/runit.wrap.R: Idem
        * src/RcppCommon.cpp: Idem

        * DESCRIPTION: Increase minor dev. version once more

2012-12-03  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: added function to check whether R development
        tools are currently installed

2012-12-03 Romain Francois <romain@r-enthusiasts.com>

        * src/Module.cpp: move BEGIN_RCPP/END_RCPP to Module__invoke
        * src/coerce.cpp: added coerce_to_string implementations
        * include/RcppCommon.h : nicer formatting for RCPP_DEBUG_*, now up to
        RCPP_DEBUG_5
        * include/Rcpp/vector/Vector.h: debugging
        * include/Rcpp/String.h: The String class
        * include/Rcpp/as.h: support for String
        * include/Rcpp/vector/converter.h : support for String
        * include/Rcpp/vector/string_proxy.h: support for String
        * include/Rcpp/internal/wrap.h : support for String
        * include/Rcpp/internal/r_coerce.h: support for String
        * include/Rcpp/sugar/functions/sapply.h: debugging
        * include/Rcpp/traits/wrap_type_traits.h: support for String
        * include/Rcpp/traits/r_type_traits.h: support for String
        * unitTests/cpp/String.cpp : unit tests for String
        * unitTests/runit.String.R: unit test for String
        * include/Rcpp/sugar/sets.h: support for String

2012-12-01  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/RcppCommon.h: Applied patch by Yan Zhou to add support
        for clang++ with libc++, and Intel's icpc when std=c++11

2012-11-29 Romain Francois <romain@r-enthusiasts.com>

        * unitTests/runit.DataFrame.R: using sourceCpp
        * include/Rcpp/vector/Matrix.h: fix yet another const correctness issue

2012-11-27  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/iostream/Rostream.h: Check before deleting buf

2012-11-26  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.10.1
        * inst/NEWS.Rd: Release 0.10.1
        * inst/include/Rcpp/config.h: Release 0.10.1
        * debian/*: Similarly updated for new release to Debian

        * DESCRIPTION: Added paragraph about Rcpp attributes
        * debian/control: Idem

2012-11-26 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/Module.h: comment out the unused and unuseable
        converter overload.
        * include/Rcpp/sugar/functions/pmin.h: be consistent about how the
        pmin_op helper struct is defined (always a struct).
        * include/Rcpp/sugar/functions/pmax.h: same for pmax
        * include/Rcpp/stats/random/rbeta.h: fixed constructor issue
        * unitTests/runit.sugar.R: rework to use sourceCpp instead of inline
        * include/Rcpp/vector/Vector.h: added ctor to deal with
        SingleLogicalResult
        * include/Rcpp/vector/Matrix.h: another const correctness fix

2012-11-25  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: use echo = TRUE for sourceCpp R code chunks
        * src/Module.cpp: BEGIN_RCPP/END_RCPP in InternalFunction_invoke
        * inst/doc/Rcpp-attributes/Rcpp-attributes.Rnw: add documentation
        on correct semantics for signaling error conditions

2012-11-24  JJ Allaire <jj@rstudio.org>

        * inst/doc/Rcpp-attributes/Rcpp-attributes.Rnw: expand discussion
        of binary compatibility issues.

2012-11-23 Romain Francois <romain@r-enthusiasts.com>

        * src/AttributesParser.cpp : attempt to fix build issue on r-forge
        * include/Rcpp/DataFrame.h: nrows() method
        * include/Rcpp/vector/RangeIndexer.h: now derives from VectorBase so
        that we can use it in sugar.

2012-11-22  JJ Allaire <jj@rstudio.org>

        * include/exceptions.h: new exception constructor / stop function
        * src/exceptions.cpp: new exception constructor / stop function
        * include/RcppCommon.h: new exception constructor / stop function

2012-11-22 Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/iostream.h: use delete rdbuf() as recommended by
        Martyn Plummer
        * include/Rcpp/sugar/functions/self_match.h: self_match, giving a
        functionality similar to match( x, unique(x) )
        * src/coerce.cpp: added coercion to STRSXP
        * include/Rcpp/internal/r_coerce.h : added r_coerce<.,STRPSXP>
        * include/Rcpp/sugar/functions/table.h: sugar table
        * include/Rcpp/sugar/functions/duplicated.h: sugar duplicated

2012-11-21  JJ Allaire <jj@rstudio.org>

        * R/Rcpp.package.skeleton.R: add 'attributes' and 'cpp_files'
        parameters to Rcpp.pacakge.skeleton
        * inst/skeleton/rcpp_hello_world_attributes.cpp: version of hello world
        that uses attributes
        * man/Rcpp.package.skeleton.Rd: doc updates
        * inst/doc/Rcpp-attributes/Rcpp-attributes.Rnw: doc updates
        * DESCRIPTION: bump version to 0.10.0.3

2012-11-21  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/Misc/piBySimulation.r: New simple example using Rcpp
        attributes in a 'compute pi by simulation in R and C++' exercise
        * inst/examples/Misc/piSugar.cpp: Corresponding C++ variant

2012-11-21  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/iostream/Rostream.h: Fix warning given by -Wreorder
        * include/Rcpp/sugar/functions/mapply/mapply_3.h: more flexible
        * include/Rcpp/vector/Vector.h: More efficient assign_object, which
        is used in the assignment operator
        * include/Rcpp/sugar/functions/clamp.h: added clamp function

2012-11-20  JJ Allaire <jj@rstudio.org>

        * src/Attributes.cpp: ensure dynlib cache state is always updated
        * inst/doc/Rcpp-attributes/Rcpp-attributes.Rnw: elaborate further
        on exporting C++ interfaces from packages

2012-11-20  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/iostream/Rostream.h: change order of initiaization in
        ctor. was making solaris compiler unhappy
        * include/Rcpp/stats/random/rnorm.h: not using function pointer
        generators, as this generates (anachronisms) warning on
        solaris. Also, this version is more efficient since there is no need
        to dereference the function pointer

2012-11-19  JJ Allaire <jj@rstudio.org>

        * src/AttributesParser.h: support for argument default values
        * src/AttributesParser.cpp: support for argument default values
        * src/Attributes.cpp: support for argument default values
        * man/exportAttribute.Rd: documentation updates
        * man/compileAttributes.Rd: documentation updates
        * man/sourceCpp.Rd: documentation updates
        * inst/doc/Rcpp-attributes/Rcpp-attributes.Rnw: add documentation
        on changes to attributes in 0.10.1

2012-11-18  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: sourceCpp embedded R code; print warning if no
        export attributes are found in source file
        * src/AttributesParser.h: sourceCpp embedded R code
        * src/AttributesParser.cpp: sourceCpp embedded R code; new scheme
        for mixing user and generated C++ headers
        * src/Attributes.cpp: sourceCpp embedded R code; include <Rcpp.h>
        above generated modules
        * man/sourceCpp.Rd: documentation updates
        * man/interfacesAttribute.Rd: documentation updates

2012-11-18  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/vector/converter.h: allow CharacterVector::create(
        NA_STRING )
        * include/Rcpp/sugar/functions/mapply/mapply_2.h: more cases in mapply

2012-11-17  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-modules/Rcpp-modules.Rnw: Change free function name
        'range' to 'uniformRange' to protect it from getting clobbered by the
        new sugar function range.

2012-11-17  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/internal/wrap_end.h: have calls to wrap as late as
        possible so that they "see" all (potentially user defined) overloads
        of wrap.
        * include/Rcpp/internal/SEXP_Iterator.h: directly iterate over SEXP.
        const iterator for List and ExpressionVector

2012-11-16  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/vector/Vector.h : added static methods Vector::is_na
        and Vector::get_na
        * include/Rcpp/sugar/functions/setdiff.h: initial version of setdiff
        and intersect
        * include/Rcpp/vector/MatrixColumn.h: dealing with const-ness
        * include/Rcpp/vector/MatrixRow.h: dealing with const-ness
        * include/Rcpp/vector/traits.h: dealing with const-ness
        * include/Rcpp/vector/proxy.h: dealing with const-ness
        * include/Rcpp/vector/MatrixBase.h: dealing with const-ness
        * include/Rcpp/vector/Vector.h: dealing with const-ness

2012-11-15  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/sugar/logical/SingleLogicalResult.h : apply patch
        suggested by Karl Millar
        * R/Attributes.R: new R function areMacrosDefined
        * man/evalCpp.Rd: documentation update
        * include/Rcpp/sugar/functions/match.h : generic version of match
        * include/Rcpp/sugar/tools/iterator.h: help iterator that helps
        writing match in terms of stl algorithms.
        * include/Rcpp/vector/Vector.h: class no_init that can be used to create
        an uninitialized vector. e.g. IntegerVector out = no_init(10) ;
        * include/Rcpp/sugar/functions/unique.h: sugar version of %in% using
        unordered_set
        * include/Rcpp/sugar/functions/minmax.h: min, max, and range

2012-11-14  JJ Allaire <jj@rstudio.org>

        * src/Attributes.cpp: create sourceCpp context list using single
        statement

2012-11-14  Dirk Eddelbuettel  <edd@debian.org>

        * inst/announce/ANNOUNCE-0.10.0.txt: Fix typo spotted by Martin
        Morgan in announcement mail

2012-11-14  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/internal/wrap.h: fix for wrap( std::complex<double> )
        * include/Rcpp/module/class_Base.h: factored out from Module.h
        * R/00_classes.R: the C++Class gains the parents slot to hold information
        about parent classes of the class
        * src/Module.cpp : The CppClass constructor fills the parents slot of C++Class

2012-11-13  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.10.0
        * inst/NEWS: Release 0.10.0
        * inst/include/Rcpp/config.h: Release 0.10.0
        * debian/*: Similarly updated for new release to Debian

2012-11-13  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/as.h: as<enum>
        * include/Rcpp/internal/wrap.h : wrap( enum )
        * include/Rcpp/traits/wrap_type_traits.h: trait to help wrap( enum )
        * include/Rcpp/traits/r_type_traits.h: trait to help as<enum>
        * include/Rcpp/module/macros.h: macros RCPP_EXPOSED_ENUM to help as/wrap
        of enums

2012-11-12  Dirk Eddelbuettel  <edd@debian.org>

        * inst/announce/ANNOUNCE-0.10.0.txt: Announcement draft

2012-11-12  JJ Allaire <jj@rstudio.org>

        * inst/doc/Rcpp-attributes/*: New vignette

2012-11-12  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/vector/Vector.h : adding const_iterator and associated
        begin() and end() methods
        * include/Rcpp/vector/Matrix.h : idem

2012-11-11  JJ Allaire <jj@rstudio.org>

        * src/Attributes.cpp: fully qualify _ in generated code

2012-11-11  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/iostream/Rstreambuf.h: implementing sync() so that
        flush works
        * src/Rstreambuf.cpp: implementation
        * src/Rostream.cpp : added Rcerr that forwards to REprintf

2012-11-10  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: ensure function definitions are never stale
        * src/Attributes.cpp: add optional hook for inclusion of package types
        * examples/Attributes/Export.cpp: example use of Rcpp::export
        * examples/Attributes/Depends.cpp: example use of Rcpp::depends
        * examples/Attributes/sourceCpp.R: example use of sourceCpp()
        * examples/Attributes/cppFunction.R: example use of cppFunction()

2012-11-09  Romain Francois <romain@r-enthusiasts.com>

        * R/Attributes.R: Passing verbose from evalCpp to cppFunction
        * include/RcppCommon.h: include <limits> instead of <limits.h>
        * include/Rcpp/vector/CharacterVectorExtractionIterator.h: iterator
        class to quickly iterate over the content of a CharacterVector. The
        content that is iterated over is to be considered read-only.

2012-11-08  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: special sourceCpp handling for file within the src
        directory of a package; use .h as suffix for generated headers
        * src/Attributes.cpp: add information on arguments to Rcpp module;
        use inline rather than static linkage for generated C++ shims;
        generated headers: add header guard and use .h suffix;
        * man/cppFunction.Rd: update documentation
        * man/sourceCpp.Rd: update documentation
        * man/evalCpp.Rd: update documentation
        * man/exportAttribute.Rd: update documentation
        * man/interfacesAttribute.Rd: update documentation


2012-11-08  Romain Francois <romain@r-enthusiasts.com>

        * R/Module.R: Module functions taking no arguments don't get the ellipsis
        anymore in their formals
        * src/Module.cpp: passing up the number of arguments of the function
        * R/Attributes.R: added evalCpp
        * man/evalCpp.Rd: documentation for evalCpp

2012-11-07  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: derive depends from package LinkingTo; change
        sourceCpp plugin parameter to depends and respect Rcpp::interfaces
        generated include files
        * src/Attributes.cpp: validate exported C++ functions before calling;
        use static rather than inline for stubs to avoid call-site bloat;
        improved error message when package hpp already exists; import Rcpp
        namespace into package shim namespace
        * src/AttributesParser.h: add signature and isHidden methods
        * src/AttributesParser.cpp: add signature and isHidden methods
        * src/exceptions.cpp: add function_not_exported exception
        * include/Rcpp/exceptions.h: add function_not_exported exception
        * man/cppFunction.Rd: update documentation
        * man/sourceCpp.Rd: update documentation
        * man/compileAttributes.Rd: update documentation
        * man/dependsAttribute.Rd: update documentation
        * man/exportAttribute.Rd: update documentation
        * man/interfacesAttribute.Rd: update documentation

2012-11-07  Romain Francois <romain@r-enthusiasts.com>

        * src/Language.cpp: Language gains a fast_eval method, without the whole try/catch
        * src/barrier.cpp: function char_nocheck to avoid the check in using CHAR
        * include/Rcpp/sugar/functions/unique.h: sugar unique and sort_unique
        using unordered_set (perhaps we could use it from c++11).

2012-11-06  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: tweak whitespace in verbose mode
        * src/AttributesParser.h: support for interfaces attribute
        * src/AttributesParser.cpp: support for interfaces attribute
        * src/Attributes.cpp: support for interfaces attribute; refactor
        code generators; use single module for exports; return list of
        updated files from compileAttributes
        * src/Module.cpp: add package parameter to GetCppCallable
        * include/Rcpp/Module.h: add package parameter to GetCppCallable
        * man/compileAttributes.Rd: documentation updates

2012-11-05  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/Module.h: added class CppInheritedProperty to handle
        inherited properties
        * include/Rcpp/module/class.h: implemented inheritance of properties

2012-11-05  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: use modules for attribute code generation
        * src/Attributes.cpp: use modules for attribute code generation
        * src/AttributesParser.h: use modules for attribute code generation
        * src/AttributesParser.cpp: use modules for attribute code generation

2012-11-04  Dirk Eddelbuettel  <edd@debian.org>

        * tests/doRUnit.R: In "development releases" (such as 0.9.15.5) we
        now default to setting the required CRAN-test-workaround-kludge
        "RunAllRcppTests" to "yes" as a default -- but not for actual
        releases (with versions such as 0.9.15)

2012-11-04  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/module/CppFunction.h: fixed module bug (virtual function
        was not defined)

2012-11-03  JJ Allaire <jj@rstudio.org>

        * Use CLINK_CPPFLAGS rather than PKG_CXXFLAGS for LinkingTo
        include directories (identical behavior to inline)

2012-11-03  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/sugar/functions/which_min.h : sugar which.min
        * include/Rcpp/sugar/functions/which_max.h : sugar which.max
        * include/Rcpp/module/Module.h : added get_function_ptr which returns
        the pointer of the target function as a DL_FUNC

2012-11-02  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.rmath.R: More tests added

2012-11-02  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/module/CppFunction.h : factored CppFunction in its own
        file and added the get_function_ptr virtual method. added
        documentation
        * include/Rcpp/module/Module_generated_CppFunction.h: implementation
        of get_function_ptr in classes that derive CppFunction
        * src/Module.cpp: s/get_function_ptr/get_function/
        * include/Rcpp/module/Module.h : factored out and documented.
        s/get_function_ptr/get_function/

2012-11-01  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.rmath.R: New unit test file added

2012-11-01  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: change 'envir' param to 'env' for consistency with
        the interface of loadModule
        * man/sourceCpp.Rd: documentation updates
        * man/cppFunction.Rd: documentation updates

2012-11-01  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/sugar/logical/or.h : implementing x | y where x and y
        are Logical sugar expressions
        * include/Rcpp/sugar/logical/and.h : implementing x & y where x and y
        are Logical sugar expressions

2012-10-31  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: add cppFunction for inline-style definitions;
        change 'local' param to (more clear and explicit) 'envir' param;
        change 'show.output' param to 'showOutput'; add parameter to
        onBuild hook to indicate if the source was from a 'code' parameter
        * src/Attributes.cpp: factored parser into it's own file
        * src/AttributesParser.h: attributes parser header
        * src/AttributesParser.cpp: attributes parser implementation
        * man/sourceCpp.Rd: documentation updates
        * man/compileAttributes.Rd: documentation updates
        * man/cppFunction.Rd: documentation for cppFunction
        * NAMESPACE: export for cppFunction

2012-10-31  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/module/class.h: factored out of Module.h which started to
        be too big. class_ gains a derives<Parent>( "Parent" ) for so that the
        class inherits method that were exposed by its parent.
        * include/Rcpp/Module.h: template class CppInheritedMethod for
        implementing inherited method
        * src/Module.cpp: get_class_pointer implementation

2012-10-30  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Rmath.h: Finalised adding Rmath functions

2012-10-30  JJ Allaire <jj@rstudio.org>

        * R/Attributes.R: new functions sourceCpp and compileAttributes that
        use C++11 style attributes (embedded in comments) to perform
        automatic generation of boilerplate marshaling code
        * src/Attributes.cpp: support functions for attribute handling
        * include/Rcpp/exceptions.h: file io exception classes
        * man/sourceCpp.Rd: documentation for sourceCpp
        * man/compileAttributes.Rd: documentation for compileAttributes
        * man/exportAttriute.Rd: documentation for export attribute
        * man/dependsAttribute.Rd: documentation for depends attribute
        * NAMESPACE: exports for sourceCpp and compileAttributes

2012-10-30  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/as.h: new bare_as to simplify uses of as
        * include/Rcpp/module/Module_generated_Factory.h: using bare_as
        * R/Module.R: promoting the show method
        * src/Attributes.cpp: remove g++ warning (int != size_t)

2012-10-29  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Rmath.h: More Rmath functions

2012-10-29  Romain Francois <romain@r-enthusiasts.com>

        * R/Module.R: Taking care of a check warning
        * include/Rcpp/module/macros.h: adding RCPP_EXPOSED_CLASS_NODECL
        * include/Rcpp/Module.h: introducing converter to facilitate
        conversion between classes.
        * R/Module.R: Methods registered internally with converter will
        generate the appropriate "as" S4 method.

2012-10-28  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Rmath.h: Beginnings of a namespave 'R' around
        Rmath functions so that Rcpp users can call the (scalar) functions
        R::pnorm() which helps with adapting or integrating programs writting
        outside of Rcpp

2012-10-27  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/module/macros.h: Add forward declaration of class
        to macro 'RCPP_EXPOSED_CLASS'

2012-10-25  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/internal/wrap.h: wrapping module object with the help
        of the RCPP_EXPOSED_CLASS
        * include/Rcpp/module/macros.h: improving the macros so that wrap and
        as are covered
        * include/Rcpp/traits/wrap_type_traits.h: wrapping module objects
        * include/Rcpp/module/Module_generated_class_factory.h : factories
        are alternatives to constructors. For now, we can expose as factories
        any free function that returns a pointer to the target class
        * include/Rcpp/module/Module_generated_Factory.h : factories
        * include/Rcpp/Module.h: exposing factories

2012-10-24  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/traits/is_pointer.h: traits to identify if a type is a
        pointer
        * include/Rcpp/traits/un_pointer.h: traits to remove a pointer
        * include/Rcpp/module/Module_generated_get_return_type.h : handle
        pointer return types
        * include/Rcpp/config.h: define RCPP_HAS_DEMANGLING for MAC OS <=
        10.7 (up to Lion)
        * include/Rcpp/module/macros.h: new file that contains macro to help
        with modules
        * include/Rcpp/traits/r_type_traits.h : new tag to allow as<T> where
        T is some class exposed in a module
        * include/Rcpp/as.h : implementation of as<T> in that case

2012-10-23  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/internal/wrap.h: new function module_wrap used
        internally by modules
        * include/Rcpp/module/Module_generated_CppMethod.h: using module_wrap
        and simplified the code (removing 35% of the generated code now
        rendered useless)
        * include/Rcpp/module/Module_generated_PointerCppMethod.h: using
        module_wrap and simplified the code
        * include/Rcpp/traits/module_wrap_traits.h : new file. helping
        implementation of module_wrap

        * R/00_classes.R: C++OverloadedMethods gets the field "nargs" to
        capture the number of arguments

        * R/01_show.R: cleanup

        * R/Module.R: handle the case where a method has no argument. In that
        case, the ellipsis does not end up in the formals

        * include/Rcpp/Module.h: exposing nargs in C++OverloadedMethods

2012-10-22  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/as.h: support for as<> for module objects
        * include/Rcpp/Module.h: idem
        * include/Rcpp/traits/r_type_traits.h: idem
        * src/Module.cpp: idem

2012-10-21  Romain Francois <romain@r-enthusiasts.com>

        * include/Rcpp/traits/wrap_type_traits.h: support for wrapping module objects
        * include/Rcpp/internal/wrap.h : idem
        * include/Rcpp/Module.h: idem

2012-10-13  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.15
        * inst/NEWS: Release 0.9.15
        * inst/include/Rcpp/config.h: Release 0.9.15
        * debian/*: Similarly updated for new release to Debian

2012-10-08  Dirk Eddelbuettel  <edd@debian.org>

        * src/exceptions.cpp: Additional PROTECT for parsing exception
        messages before returning them to R, from a suggestion by Ben North

2012-10-07  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.Date.R: Added a few more tests

2012-10-06  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Date.h: Dates are now represented as doubles,
        also added accessor functions for double and retained int

        * src/Date.cpp: Convert from SEXP to double, added constructor from
        double and added checks for 'finite' representation before converting
        to 'struct tm' adding support for NA, NaN and Inf

        * src/DateVector.cpp: Instantiate Date types as double

        * src/Datetime.cpp: Also added support for NA, NaN and Inf values

        * inst/unitTests/runit.Date.R: A few additional tests

2012-10-05  Dirk Eddelbuettel  <edd@debian.org>

        * src/exceptions.cpp: Applied patch by Martin Morgan which untangles
        the clang includes driven by version, and uses direct tests for
        presence of the header file
        * inst/include/RcppCommon.h: No longer define CLANG version meta
        variables as we can directly include the relevant header

2012-09-30  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.14
        * inst/NEWS: Release 0.9.14
        * inst/include/Rcpp/config.h: Release 0.9.14
        * debian/*: Similarly updated for new release to Debian

2012-09-08  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.sugarOps.R: More sugar Ops unit tests

2012-09-07  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.sugarOps.R: (Incomplete) beginnings of new
        unit test file for sugar operations on vectors and matrices

2012-09-07  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/functions/sign.h: Sign gets a SEXP operator

2012-09-03  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/sugar/functions/math.h: Added new sugar
        function trunc(), round() and signif()
        * inst/unitTests/runit.sugar.R: Added unit tests for these

2012-09-01  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Makefile: The 'all' target is now empty to prevent
        autobuilders such as R-Forge from falling over

2012-07-23  Dirk Eddelbuettel  <edd@debian.org>

        * R/bib.R: Trim the trailing ".bib" from the generated bibtex
        filename as Windows adds one anyway leading to two and an error

2012-07-21  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Module.h (Rcpp): Corrected typo / incomplete
        reference in finalizer use

2012-07-06  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/config.h: In order to not attempt to include
        exception_defines.h if on OS X (as the clang runtime may not have
        predictable access to g++ headers providing these), do not define
        RCPP_HAS_DEMANGLING which is used in src/exceptions.cpp

2012-06-28  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.13
        * inst/NEWS: Release 0.9.13
        * inst/include/Rcpp/config.h: Release 0.9.13
        * debian/*: Similarly updated for new release to Debian

        * tests/doRUnit.R: Updated, added (by default commented-out) setting
        to enforce all tests to run, added standard copyright headers noting
        heritage off work by Martin Maechler and Gregor Gorjanc

        * inst/unitTests/runTests.R: Only check environment variable to run
        all tests if it is not already set (to cooperate with doRUnit.R)

2012-06-27  Dirk Eddelbuettel  <edd@debian.org>

        * src/Environment.cpp: Default ctor initializes its RObject with
        R_GlobalEnv; SEXP constructor does not use a default arg as it tests
        * inst/include/Rcpp/Environment.h: Corresponding change

        * inst/include/RcppCommon.h: #define(s) for before/after clang++ 3.0

        * src/exceptions.cpp: Added support for clang++ (>= 3.0) which (just
        like g++ 4.6 or later) needs bits/exceptions_defines

        * inst/unitTests/runit.modref.R: re-activated
        * inst/unitTests/runit.Module.client.package.R: re-activated core

        * inst/unitTests/runit.modref.R: Run only if RunAllCppTests var set
        * inst/unitTests/runit.Module.client.package.R: Idem
        * inst/unitTests/runit.support.R: Idem
        * inst/unitTests/runit.rcout.R: Idem
        * inst/unitTests/runit.environments.R: Idem
        * inst/unitTests/runit.Language.R: Idem
        * inst/unitTests/runit.Function.R: Idem

2012-06-23  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.12
        * inst/NEWS: Release 0.9.12
        * inst/include/Rcpp/config.h: Release 0.9.12
        * debian/*: Similarly updated for new release to Debian

        * src/Environment.cpp: Remove empty constructor which is redundant
        since fix in rev3592 with default SEXP value of R_GlobalEnv
        * inst/include/Rcpp/Environment.h: Idem

        * inst/unitTests/runTests.R (allTests): Command-line flag --allTests
        sets an environment variable indicating that all tests should run

        * inst/unitTests/runit.Module.R: Run only if RunAllCppTests var set
        * inst/unitTests/runit.Module.client.package.R: Idem
        * inst/unitTests/runit.client.package.R: Idem
        * inst/unitTests/runit.XPtr.R: Idem
        * inst/unitTests/runit.macros.R: Idem

        * inst/doc/unitTests/Rcpp-unitTests.R: Ensure Rcpp-unitTests
        vignette is built with RunAllCppTests flag set

        * cleanup: Also clean in inst/unitTests/testRcppClass/src

        * DESCRIPTION: Set Maintainer: to edd@debian.org as CRAN prefers to
        receive upload email from the same address the Maintainer field

2012-06-22  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.11
        * inst/NEWS: Release 0.9.11
        * inst/include/Rcpp/config.h: Release 0.9.11
        * debian/*: Similarly updated for new release to Debian

        * DESCRIPTION: Increased Depends to R (>= 2.15.1)

2012-06-21  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-modules/Rcpp-modules.Rnw: Updated to reflect use
        under R 2.15.1
        * inst/skeleton/zzz.R: Idem

2012-06-20  Dirk Eddelbuettel  <edd@debian.org>

        * R/loadRcppModules.R: Use lib.loc= argument on packageDescription()
        as suggested by Kurt, and fetch libname from enclosing environment

        * DESCRIPTION: Typo and grammar fixes with thanks to Kurt and Doug

2012-05-25  Dirk Eddelbuettel  <edd@debian.org>

        * inst/skeleton/zzz.R: Added new 'evalqOnLoad()' call for R-devel,
        currently commented out

2012-05-24  Dirk Eddelbuettel  <edd@debian.org>

        * inst/skeleton/Num.cpp: Added to Rcpp.package.skeleton(); will be
        added when module=TRUE in call
        * inst/skeleton/stdVector.cpp: Idem

        * inst/unitTests/testRcppModule/src/rcpp_module.cpp: added more
        comments, added copyright header, corrected output of example
        functions by not escaping "backslash-n" twice
        * inst/unitTests/testRcppModule/src/stdVector.cpp: added some
        comments, added copyright header
        * inst/unitTests/testRcppModule/src/Num.cpp: Idem

        * inst/unitTests/runit.Module.client.package.R: Added four simple
        tests for Rcpp Modules

        * inst/doc/Rcpp-modules/Rcpp-modules.Rnw: Some extensions and
        clarifications added

2012-05-13  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/iostream/Rostream.h: Added Rstreambuf.h include
        as per rcpp-devel discussion with Alexey Stukalov

2012-05-09  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: Expanded R CMD SHLIB discussion
        after suggested changes from SC8ren HC8jsgaard; also expanded compiler
        section a little mentioning clang/clang++ and icc.

2012-05-02  Dirk Eddelbuettel  <edd@debian.org>

        * src/Environment.cpp: Move one default argument to Environment.h
        * src/Function.cpp: Move one default argument to Function.h
        * inst/THANKS: Thanks to Anirban Mukherjee for these two changes

2012-04-28  John M Chambers  <jmc@r-project.org>

        * R/RcppClass.R: use globalVariables() from R 2.15.1 (with exists()
        test to no break older versions) to declare C++ fields and methods
        * inst/unitTests/testRcppClass/R/load.R: test use

2012-04-22  Dirk Eddelbuettel  <edd@debian.org>

        * src/debugging.cpp: Expanded 'if defined()' test to included Cygwin
        thanks to a patch submitted by Dario Buttari

2012-04-19  Dirk Eddelbuettel  <edd@debian.org>

        * src/Evaluator.cpp: errorOccuredSym never used and commented out

2012-04-18  John M Chambers  <jmc@r-project.org>

        * R/RcppClass.R: New version of setRcppClass, allowing R classes to
        extend C++ classes used via Rcpp modules
        * R/loadModule.R: New function, replaces uses of .onLoad()
        * man/*: Added/updated corresponding documentation

2012-04-07  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/Vector.h: bug fix. reported on Rcpp-devel
        http://comments.gmane.org/gmane.comp.lang.r.rcpp/3292

2012-03-29  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.Vector.R: unit test for containsElementNamed

2012-03-29  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/Vector.h: Vector<> gains the
        containsElementNamed method to test for presence of named element

2012-03-24  Romain Francois  <romain@r-enthusiasts.com>

        * src/cache.cpp: Using a single Rcpp_cache, stored in the Rcpp
        namespace

        * src/Evaluator.cpp: Using tryCatch instead of rcpp_tryCatch, no more
        using .Internal; but still define rcpp_TryCatch for backwards compat.

2012-03-23  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: Added short subsection on how to
        test a package from the command-line, expanding a patch by Glenn
        Lawyer in response to an initial rcpp-devel post by Dirk

2012-02-16  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.10
        * inst/NEWS: Release 0.9.10
        * inst/include/Rcpp/config.h: Release 0.9.10
        * debian/*: Similarly updated for new release to Debian

2012-02-16  Douglas Bates  <bates@stat.wisc.edu>

        * src/Evaluator.cpp: PROTECT the expr argument to Evaluator::Run.
        Reorganize code.

2011-12-15  Douglas Bates  <bates@stat.wisc.edu>

        * src/Evaluator.cpp: Avoid Rf_install inside an R API call

2012-02-12  Dirk Eddelbuettel  <edd@debian.org>

        * R/excections.R: Revert to previous use with .Internal
        * R/tools.R: Add branch for R 2.15.0 which can use
        assingInMyNamespace; else still use unlockBinding

2012-02-12  Dirk Eddelbuettel  <edd@debian.org>

        * Rcpp-introduction.Rnw: Small wording fix thanks to Pat Burns

2012-02-06  Romain Francois  <romain@r-enthusiasts.com>

        * R/exceptions.R: one less .Internal call
        * src/Evaluator.cpp: one less .Internal call

2012-02-03  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Extractor.h: remove use of Fast in Extractor

        * inst/include/Rcpp/sugar/functions/mapply/mapply.h: new sugar
        function, similar to sapply, but with 2 or 3 (for now) input vectors

2012-02-01  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/iostream/Rostream.h: no need to include Rcpp.h
        here

        * inst/include/RcppCommon.h: include Rostream.h here, instead of ...

        * inst/include/Rcpp.h: ... here (needed for RcppArmadillo)

2012-01-29  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/diff.h: custom implementation of diff for the
        REALSXP case, skipping unnecessary NA tests

2012-01-24  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: New FAQ entry on passing a single
        option to g++, based on a rcpp-devel question by Whit Armstrong.

2012-01-15  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/Vector.h: fixing IntegerVector(int,int),
        reported by Gregor Kastner on rcpp-devel
        * inst/unitTests/runit.Vector.R: regression test for the above

2011-12-25  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.9
        * inst/NEWS: Release 0.9.9
        * inst/include/Rcpp/config.h: Release 0.9.9
        * debian/*: Similarly updated for new release to Debian

2011-12-24  Dirk Eddelbuettel  <edd@debian.org>

        * Reverting the 'int64' changes listed below (during the period from
          Oct-31 to Nov-07) which adversely affect packages using Rcpp
          We will re-apply the 'int64' changes in a way which should
          cooperate more easily with 'long' and 'unsigned long'
          This covered svn revisions 3264 to 3308.

        * DESCRIPTION: Remove (for now) Depends: on int64
        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: Ditto for int64_t example

        * inst/unitTests/runit.Module.client.package.R: On Windows,
        deactivate 'test.Module.package'

        * inst/unitTests/runit.client.package.R: On Windows, deactivate
        'test.client.packageA' test

2011-12-23  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runTests.R: unit tests output 'fallback' directory
        changed to '..' and files are now in top-level of $pkg.Rcheck/

2011-12-21  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.8
        * inst/NEWS: Release 0.9.8
        * inst/include/Rcpp/config.h: Release 0.9.8
        * debian/*: Similarly updated for new release to Debian

2011-12-20  Dirk Eddelbuettel  <edd@debian.org>

        * inst/skeleton/zzz.R (.onLoad): correct order of arguments

2011-12-18  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/FastLM/lmArmadillo.R: Link with -llapack when using
        external Armadillo library (but RcppArmadillo makes all this easier)

2011-12-18  Romain Francois  <romain@r-enthusiasts.com>

        * inst/doc/*: Fixes to various vignettes for new version of highlight

2011-12-16  Douglas Bates  <bates@stat.wisc.edu>

        * inst/unitTests/runit.stats.R: Correct cut+paste typo in qbinom

        * inst/include/Rcpp/XPtr.h: Check for XPtr type constructing from SEXP

2011-12-12  John M Chambers  <jmc@r-project.org>

        * R/RcppClass.R: Added setRcppClass for classes extending C++ classes
        * man/setRcppClass.Rd: Added corresponding documentation
        * NAMESPACE: Added corresponding exports entry

2011-11-13  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/stats/f.h: Correct call to not require ncp parameter

        * inst/unitTests/runit.stats.R: Add unit tests for pf(), pnf(),
        pchisq(), pnchisq() and pcauchy()

2011-11-07  Romain Francois  <romain@r-enthusiasts.com>

        * include/Rcpp/internal/wrap.h: implemented wrap_dispatch_importer__impl
        for int64 and uint64, needed for RProtoBuf

        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: Add int64_t usage example

2011-11-06  Romain Francois  <romain@r-enthusiasts.com>

        * include/Rcpp/modules/Module_generated_Pointer_method.h: added code to deal
        with const free "methods", e.g. OUT foo( const Class*, ...) in modules
        Before const_method could only deal with actual const methods of the class,
        e.g. OUT Class::foo( ... ) const
        * include/Rcpp/modules/Module_generated_Pointer_CppMethod.h: idem
        * include/Rcpp/as.h: deal with as<int64_t> and as<uint64_t>
        * include/Rcpp/internal/export.h : deal with as< some_container<int64_t> >
        and as< some_container<uint64_t> > where some_container is some container
        that has iterators, e.g. std::vector

2011-10-31  Romain Francois  <romain@r-enthusiasts.com>

        * include/Rcpp/int64/int64_lite.h: handling int64_t and uint64_t types,
        based on the int64 package
        * include/Rcpp/internal/wrap.h: new dispatch layers to handle int64_t,
        uint64_t and containers of these
        * DESCRIPTION: new depending on int64

2011-10-28  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/iostream/Rostream.h (Rcpp): Added tentative patch
        for operator<< also contributed by Jelmer Ypma -- but kept commented
        out for now

2011-10-25  Dirk Eddelbuettel  <edd@debian.org>

        * src/Rostream.cpp: Patch by Jelmer Ypma which adds a new device
        'Rcout' not unlike std::cout but uses Rprintf internally
        * src/Rstreambuf.cpp: Idem
        * include/include/Rcpp/iostream/Rostream.h: Idem
        * include/include/Rcpp/iostream/Rstreambuf.h: Idem
        * include/include/Rcpp.h:  Include new headers

        * inst/unitTests/runit.rcout.R: Added simple unit test

2011-09-29  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.7
        * inst/NEWS: Release 0.9.7
        * inst/include/Rcpp/config.h: Release 0.9.7
        * debian/*: Similarly updated for new release to Debian

        * inst/include/Rcpp/sugar/block/SugarBlock_1.h: Apply second path by
        Martyn Plummer to permit compilation on Solaris
        * inst/include/Rcpp/sugar/block/SugarBlock_2.h: Idem
        * inst/include/Rcpp/sugar/block/SugarBlock_3.h: Idem
        * inst/include/Rcpp/sugar/matrix/outer.h: Idem
        * inst/include/Rcpp/vector/LazyVector.h: Idem
        * inst/unitTests/testRcppModule/src/stdVector.cpp: Idem

2011-09-24  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Extractor.h: Apply patch by Martyn Plummer to
        help with compilation on Solaris
        * inst/include/Rcpp/sugar/block/Vectorized_Math.h: Idem
        * inst/include/Rcpp/sugar/functions/math.h: Idem

        * inst/include/Rcpp/sugar/block/SugarBlock_2.h: Also applied path by
        Martyn Plummer, but with additional #ifdef layer for SunPro Compiler
        * inst/include/Rcpp/vector/LazyVector.h: Idem

2011-08-26  Douglas Bates  <bates@stat.wisc.edu>

        * inst/examples/OpenMP/OpenMPandInline.r: Added another variant
        using import_transform for the Rcpp Vector class.

2011-08-26  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/*h: Removed exception specifiers in function headers
        * src/*cpp: Corresponding changes in implementations

        * inst/examples/OpenMP/OpenMPandInline.r: Added two std::transform()
        variants as suggested in rcpp-devel email by Davor Cubranic

2011-08-25  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/OpenMP/OpenMPandInline.r: Added new example for
        OpenMP via inline, comparing simple loops with plain Rcpp and sugar

2011-08-23  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/Misc/ifelseLooped.r: Added new example based on blog
        post today, and a StackOverflow ansers---and which shows how Rcpp can
        accelerate loops that may be difficult to vectorise due to dependencies

        * inst/examples/Misc/: New directory for small examples regrouping
        the new example as well as the fibonacci example added in Rcpp 0.9.6

2011-08-17  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: Added a short section including an
        example on the issue raised by Murray wherein 64 bit 'long' integer
        types can be cast with loss to numeric types without error or warning.

2011-07-28  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.Function.R: new unit test for accessing a
        non-exported function from a namespace

2011-07-26  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.6
        * inst/NEWS: Release 0.9.6
        * inst/include/Rcpp/config.h: Release 0.9.6
        * debian/*: Similarly updated for new release to Debian

2011-07-24  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/Fibonacci/fib.r: New example showing how to compute a
        Fibonacci sequence using Rcpp and compare it to R and byte-compiled R

2011-07-14  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/RcppGibbs/RcppGibbs.R: New example RcppGibbs,
        extending Sanjog Misra's Rcpp illustration of Darren Wilkinson's
        comparison of MCMC Gibbs Sampler implementations;
        * inst/examples/RcppGibbs/timeRNGs.R: added short timing on Normal
        and Gaussian RNG draws between Rcpp and GSL as R's rgamma() is seen
        to be significantly slower

2011-07-13  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/traits/is_eigen_base.h: helper traits to
        facilitate implementation of the RcppEigen package. The is_eigen_base
        traits identifies if a class derives from EigenBase using SFINAE

        * inst/include/Rcpp/internal/wrap.h: new layer of dispatch to help
        RcppEigen

2011-07-07  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/XPtr.h: The XPtr class template gains a second
        template parameter allowing the developper to supply his/her own
        finalizer instead of the default one that calls delete

2011-07-05  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.5
        * inst/NEWS: Release 0.9.5
        * inst/include/Rcpp/config.h: Release 0.9.5
        * debian/*: Similarly updated for new release to Debian

2011-07-02  Dirk Eddelbuettel  <edd@debian.org>

        * cleanup: Also clean in examples/OpenMP/

2011-06-09  Dirk Eddelbuettel  <edd@debian.org>

        * inst/skeleton/zzz.R (.onLoad): Force load of methods package before
        calling loadRcppModules() to make 'R CMD check' happier

2011-06-06  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/Vector.h : init becomes protected to fix the bug
        reported by Doug Bates on Rcpp-devel.

2011-05-31  Romain Francois  <romain@r-enthusiasts.com>

        * R/loadRcppModules.R: New argument "direct" in loadRcppModules

        * R/tools.R: New unexported function forceAssignInNamespace

2011-05-29  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/stats/random/rlnorm.h: Repaired accidental header
        guard from 'norm' to 'lnorm' so that the file really gets included,
        make several calls to standard library 'exp()' explicit as '::exp()'
        and fixed a cut-and-paste typo

2011-05-24  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/internal/wrap.h: For arguments of type const char *,
        wrap now checks for NULL arguments before calling Rf_mkString()
        * unitTests/runit.wrap.R: Added unit test for this

2011-05-14  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-quickref/Rcpp-quickref.Rnw: Corrected an error in STL
        example and added two more STL examples

2011-04-27  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/OpenMP/piWithInterrupts.cpp: Beginnings of new
        contributed example on OpenMP as well as user interrupt handling

2011-04-26  Romain Francois  <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/functions/mean.h: new sugar function: mean

        * inst/include/Rcpp/sugar/functions/var.h: new sugar function: var

        * inst/include/Rcpp/sugar/functions/sd.h: new sugar function: sd

2011-04-19  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: New example setting row and column
        names for matrices

2011-04-16  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: New example using Rcpp.plugin.maker

2011-04-12  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.4
        * inst/NEWS: Release 0.9.4
        * inst/include/Rcpp/config.h: Release 0.9.4
        * debian/*: Similarly updated for new release to Debian

2011-04-12  Romain Francois  <romain@r-enthusiasts.com>

        * inst/unitTests/testRcppModules/src/stdVector.cpp: compiler
        disambiguation

        * src/r_cast.cpp: use a callback to R's "as.character" instead of
        calling Rf_coerceVector, which did not work as expected for factors

2011-04-11  Romain Francois  <romain@r-enthusiasts.com>

        * R/loadRcppModules.R: New R function "loadRcppModules" that looks
        for the "RcppModules" field in the DESCRIPTION file, loads and
        populates the modules into the package NAMESPACE

        * man/loadRcppModules.Rd: documentation

        * inst/unitTests/testRcppModule: using loadRcppModules

2011-04-11  Dirk Eddelbuettel  <edd@debian.org>

        * inst/man/Rcpp-package.Rd: Added JSS reference in \references{}

        * inst/doc/*: Added JSS reference to vignettes

2011-04-09  Dirk Eddelbuettel  <edd@debian.org>

        * inst/CITATION: Finalized using JSS data on volume, number, pages

2011-04-07  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-quickref/Rcpp-quickref.Rnw: Add patch by Christian
        pointing out need for Rcpp:: namespace qualifier, and hint for Rcpp-FAQ

2011-04-05  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: Added OS X entry for min. sufficient
        versions of OS X itself and Xode based on Simon's post to rcpp-devel

2011-04-05  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.3
        * inst/NEWS: Release 0.9.3
        * inst/include/Rcpp/config.h: Release 0.9.3
        * debian/*: Similarly updated for new release to Debian

2011-04-05  Romain Francois  <romain@r-enthusiasts.com>

        * R/01_show.R: set of cosmetic changes to the show method for C++
        classes

        * inst/include/Rcpp/Module.h: fixed module bug by not using
        singletons of the class_ template

2011-04-03  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-introduction.Rnw: Updated to forthcoming JSS paper

        * inst/CITATION: Added citation() support using forthcoming paper

        * inst/doc/Makefile: Trying make parallel builds possible by not calling
        'clean' in the 'all' target; thanks to Brian Ripley for the heads-up

2011-04-02  Dirk Eddelbuettel  <edd@debian.org>

        * cleanup: Also clean in inst/unitTest/testRcppModule/src/

        * inst/include/RcppCommon.h: Define new variable for g++ < 4.6.0
        * src/exceptions.cpp: Include <exception_defines.h> up to g++-4.5 only

        * inst/unitTests/testRcppModule/src/stdVector.cpp: Use #ifdef not #if

        * inst/include/Rcpp/module/Module_generated_ctor_signature.h: Add a
        bit of null-op code to suppress a 'unused parameter' warning in the
        initial (and non-templated) ctor_signature() function

2011-03-21  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/testRcppModule/src/stdVector.cpp: Protect push_back
        declaration by #ifdef as it conflicts with -std=c++0x use for g++-4.5

2011-03-17  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/RcppCommon.h: Condition the typedef for 'long long'
        of rcpp_long_long_type on the (still experimental) support for C++0x
        which can be enabled with the non-portable g++ flag '-std=c++0x';
        adding a test for C++0x support suppresses a new warning with g++ about
        long long being part of C++98; thanks to Kurt Hornik for raising this

2011-03-10  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/grow.h: Applied another patch kindly supplied by
        Murray which fixes another clang/llvm and C++ conformance issue by
        re-ordering declarations as unqualified names must be declared before
        they are used, even when used within templates.

2011-02-28  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Makefile: Call R and Rscript relative to R_HOME/bin

2011-02-23  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.2
        * inst/NEWS: Release 0.9.2
        * inst/include/Rcpp/config.h: Release 0.9.2
        * debian/*: Similarly updated for new release to Debian

        * inst/include/RcppCommon.h: Apply patch by Alexey Stukalov to enable
        basic Intel Compiler support without Cxx0x or TR1 features

        * inst/THANKS: Added some Thank You! to Baptiste, Alexey and Ken

        * inst/include/Rcpp/Module.h: Minor reworking of module loading
        macro to get rid of one g++ warning

2011-02-22  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.Module.client.package.R: Add a test for OS X
        10.5.* or older and do not execute the test here as g++ 4.2.1 balks
        at some of the Rcpp modules code. Thanks to Simon Urbankek for
        pinning this down and Baptiste Auguie for additonal testing.

2011-02-20  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: Added RcppArmadillo example

2011-02-19  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: Added three more setup-related
        questions in the first section following another rcpp-devel question

2011-02-14  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.1
        * inst/NEWS: Release 0.9.1
        * inst/include/Rcpp/config.h: Release 0.9.1
        * debian/*: Similarly updated for new release to Debian

2011-02-13  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Module.h: Cache return of Rf_install("Module") in
        a static helper function used by the LOAD_RCPP_MODULE macro

2011-02-11  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: Added two more examples

2011-02-10  Douglas Bates  <bates@stat.wisc.edu>

        * inst/include/Rcpp/XPtr.h: Replace calls to EXTPTR_PTR with
        R_ExternalPtrAddr.  The distinction is important when R is
        compiled with PROTECTCHECK enabled.

2011-02-01  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/Vector.h: extra PROTECT'ion in several places

2011-01-25  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/DataFrame_generated.h: Assign Rf_install() result
        to local SEXP (by modifying generator script creating the file)
        * inst/include/Rcpp/DataFrame.h: Assign Rf_install() result to local SEXP
        * inst/include/Rcpp/DottedPair.h: idem
        * inst/include/Rcpp/grow.h: idem
        * inst/include/Rcpp/Module.h: idem
        * inst/include/Rcpp/vector/eval_methods.h: idem
        * inst/include/Rcpp/vector/Vector.h: idem

2011-01-25  Douglas Bates  <bates@stat.wisc.edu>

        * src/exceptions.cpp: Assign Rf_install() result to local SEXP
        * src/Evaluator.cpp: idem
        * src/Reference.cpp: idem
        * src/S4.cpp: idem

        * inst/include/Rcpp/Date.h: Use predefined symbol.

2011-01-22  Dirk Eddelbuettel  <edd@debian.org>

        * src/cache.cpp: Assign Rf_install() result to local SEXP
        * src/Environment.cpp: idem
        * src/Evaluator.cpp: idem
        * src/Function.cpp: idem
        * src/Function.cpp: idem
        * src/RObject.cpp: idem
        * src/Symbol.cpp: idem

        * inst/doc/Rcpp.bib: Added SoDA (some time ago)

2011-01-13  Douglas Bates  <bates@stat.wisc.edu>

        * src/Reference.cpp: Protect the value being set in Reference::FieldProxy::set

2011-01-11  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/string_proxy.h: fix implicit conversion to int,
        reported by Daniel Sabanes Bove on Rcpp-devel

        * inst/unitTests/runit.vector.R: unit test for the above fix

2011-01-08  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp.bib: Updated a number of CRAN versions

2011-01-07  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/config.h (RCPP_VERSION): Set to 0.9.0, at last.

2011-01-06  Douglas Bates  <bates@stat.wisc.edu>

        * R/zzz.R (.onLoad): Don't call init_Rcpp_cache here.

        * src/Rcpp_init.c: Don't register init_Rcpp_cache.  It should only
        be called once and it is called in the C function R_init_Rcpp.

        * NAMESPACE: Use registered symbols instead of relisting them.
        Registration allows for checking the number of arguments.

2011-01-04  Dirk Eddelbuettel  <edd@debian.org>

        * src/debugging.cpp: Treat the *BSD flavours like Windows and offer
        file and line number but not stack trace (for lack of execinfo)

        * src/Makevars: Replace implicit variable $^ with explicit list

2011-01-02  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-quickref/Rcpp-quickref.Rnw: Applied patch with
        additional documentation by Christian Gunning

2010-12-23  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/RObject.h: New internal class SEXPstack to handle
        garbage collection. Presumably more efficient than R_PreserveObject
        and R_ReleaseObject

        * inst/include/Rcpp/sugar/operators/times.h: More efficient operator*
        for REALSXP sugar expressions, avoiding unnecessary NA tests.

        * inst/include/Rcpp/sugar/operators/divides.h: More efficient
        operator/ for REALSXP sugar expressions, avoiding unnecessary NA
        tests.

        * inst/include/Rcpp/sugar/operators/minus.h: More efficient operator- for
        REALSXP sugar expressions, avoiding unnecessary NA tests.

2010-12-22  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/operators/plus.h: More efficient operator+
        for REALSXP sugar expressions, avoiding unnecessary NA tests.

2010-12-22  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.Vector.R: Applied patch by Christian Gunning
        to add more tests for complex-typed vectors

2010-12-20  Dirk Eddelbuettel  <edd@debian.org>

        * R/inline.R (Rcpp.plugin.maker): Reverse order in PKG_LIBS

2010-12-19  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.9.0

        * debian/*: Similarly updated for new release to Debian

2010-12-18  Dirk Eddelbuettel  <edd@debian.org>

        * inst/announce/ANNOUNCE-0.9.0.txt: Started announcement post

        * inst/unitTests/runit.Date.R: Added new unit tests for date and
        datetime from string

2010-12-17  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Datetime.h: correct default format to use %OS for
        fractional seconds and not the popular typo %OS (i.e. ooh, not zero)

        * src/Datetime.cpp: add missing as.POSIXct() after strptime for
        constructor from string as we then use the constructor from double

        * src/Date.cpp: add missing as.Date() after strptime for constructor
        from string as we then use the constructor from int

2010-12-13  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/string_proxy.h: List::Proxy did not
        convert bool correctly, reported on Rcpp-devel by Daniel SabanC)s
        BovC) <daniel.sabanesbove@ifspm.uzh.ch>

2010-12-12  Romain Francois <romain@r-enthusiasts.com>

        * R/SHLIB.R: new unexported R function SHLIB, small wrapper around
        R CMD SHLIB

        * inst/include/Rcpp/sprintf.h: returning a std::string to avoid leaks

2010-12-10  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/sprintf.h: Use vsnprintf() instead

2010-12-10  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/barrier.h: faster versions (crossing the write
        barrier) for string_elt, etc ...(to be used only internally)

        * src/barrier.cpp: implementation of the above

2010-12-09  John M Chambers  <jmc@r-project.org>

        * src/Module.cpp: Rcpp/src/exceptions.cpp,
        Rcpp/src/Rcpp_init.c, etc. add a not_initialized exception and a
        dummy_pointer to identify such objects, throw exc. back to R

2010-12-07  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/matrix.h: Matrix gains a nested ::Sub
        typedef

2010-12-05  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/module/Module_generated_class_constructor.h: the
        default constructor was always considered valid because of the use of
        &yes instead of &yes_arity<0>

        * R/Rcpp.package.skeleton.R: Rcpp.package.skeleton( "foo",
        example_code = FALSE) did not work properly. Rcpp.package.skeleton
        gains some arguments

2010-12-05  Dirk Eddelbuettel  <edd@debian.org>

        * src/Date.cpp: Add 1900 to tm.year after mktime00() call as we now
        no longer assume the field is '1900-less'
        * src/Date.cpp: Define new static const variable baseYear as 1900
        and use throughout

        * inst/unitTests/runit.Date.R (test.Date.getFunctions): Added unit
        tests for the get* functions of the Date class

        * R/bib.R (bib): Correct expression for default Rcpp bibtex file

2010-12-04  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Date.h: Remove addition of 1900 in getYear()

2010-12-04  Romain Francois <romain@r-enthusiasts.com>

        * inst/doc/Rcpp-quickref/Rcpp-quickref.Rnw: documentation patch by
        Christian Gunnning <xian@unm.edu>

        * inst/include/Rcpp/vector/matrix.h: fix SubMatrix. Bug reported by
        Christian Gunnning <xian@unm.edu> on Rcpp-devel

        * inst/include/Rcpp/vector/SubMatrix.h: factored out of matrix.h

        * inst/include/Rcpp/sprintf.h: new sprintf template to format strings

2010-12-03  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.RObject.R: fix 'inherits' test added today

        * inst/include/Rcpp/module/Module_generated_Constructor.h: Applied
        patch by Tama Ma <pingnang@phys.ethz.ch> for up to seven args in ctor
        * inst/include/Rcpp/module/Module_generated_class_constructor.h: Idem
        * inst/include/Rcpp/module/Module_generated_ctor_signature.h: Idem

2010-12-03  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/RObject.h : new inline method inherits that
        checks if an object inherits from a given class (wrapper around
        Rf_inherits)

        * inst/unitTests/runit.RObject.R: unit test for the above

2010-12-02  Douglas Bates  <bates@stat.wisc.edu>

        * inst/include/Rcpp/generated/Function__operator.h,
          inst/include/Rcpp/Function.h: operator() becomes const.

2010-11-29  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/Vector.h: trying to please suncc after
        CRAN checks

        * R/Module.R: protect the module$refClassGenerators <- generators
        line against the case where there are no classes (triggered a
        problem with the parser package)

2010-11-27  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.8.9

        * debian/*: Similarly updated for new release to Debian

2010-11-26  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/Vector.h: List::create( _["foo"] ) sets
        the SEXP to R_MissingArg, usueful for formal arguments
        specifications, simpler form than List::create( _["foo"] =
        R_MissingArg )

        * inst/include/Rcpp/macros/unroll.h: helper macro RCPP_UNROLL_LOOP

        * inst/include/Rcpp/vector/MatrixColumn.h: added
        MatrixColumn::operator=( MatrixColumn& ) otherwise it gets
        synthetized by the compiler

        * inst/include/Rcpp/vector/MatrixRow.h: same for MatrixRow

        * inst/include/Rcpp/vector/Matrix.h: added Matrix( SubMatrix ) and
        Matrix::operator=( SubMatrix )

2010-11-25  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/module/Module_generated_function.h: new .function
        with formal argument specification

        * inst/include/Rcpp/module/Module_generated_CppFunction.h: helper
        classes for the above

        * R/Module.R: using the formal argument specification if available

        * R/populate.R: new R function populate to dump the contents of a
        module into an environment or a namespace

        * man/populate.Rd: documentation for populate

2010-11-24  Romain Francois <romain@r-enthusiasts.com>

        * R/00_classes.R: formals<- method for C++Function that allows to set
        default arguments, etc .. to a C++ function

2010-11-23  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Makefile: Call Rscript with --vanilla to skip user settings

2010-11-23  Romain Francois <romain@r-enthusiasts.com>

        * R/00_classes.R: C++Class gains a docstring slot to host self
        documentation

        * R/Module.R: calling an exposed C++ more efficiently by using the xp
        directly rather than traversing the map internally

        * R/00_classes.R: C++Function gains a docstring slot to host self
        documentation of the internal function. And a "signature" slot to
        host the C++ signature of the function

        * R/01_show.R: updated show( C++Function ) to display the docstring
        and the signature. updated show( C++Class ) to display the docstring.

        * inst/include/Rcpp/module/Module_generated_CppFunction.h: self
        documentation for exposed C++ functions and extraction of the
        signature

        * inst/include/Rcpp/module/Module_generated_function.h: idem

2010-11-22  Romain Francois <romain@r-enthusiasts.com>

        * R/00_classes.R: C++OverloadedMethods gains an "info" class methods,
        factored out from Module.R

        * R/01_show.R: more information printed in show( C++Class )

        * inst/include/Rcpp/Module/Module_generated_get_signature.h:
        templates to grab method signatures

        * inst/include/Rcpp/Module.h: CppMethod gains a signature method that
        returns the signature of the method.

        * R/00_classes.R: C++OverloadedMethods gains a "signatures" field
        that contains the signature of each overload

        * R/Module.R: registered method gain an automatically generated self
        description that contains the method(s) signature(s) and the
        docstring that is declared in .method

        * inst/include/Rcpp/Module/Module_generated_CppMethod.h: implement
        signature

        * inst/include/Rcpp/Module/Module_generated_Pointer_CppMethod.h: idem

2010-11-21  Romain Francois <romain@r-enthusiasts.com>

        * R/Module.R: internal version of cpp_hasDefaultConstructor

        * src/Module.cpp: implementation (Class__has_default_constructor)

        * inst/include/Rcpp/Module.h: support (class_.has_default_constructor)

        * inst/include/Rcpp/module/Module_generated_class_constructor.h: new interface
        for exposing constructors, the init_ disappears and the template arguments
        are directly applied to the .constructor function

        * inst/include/Rcpp/module/Module_generated_Constructor.h: removed init_*

        * inst/include/Rcpp/module/Module_generated_method.h: .method gains a docstring
        argument to allow self documentation of exposed methods

        * inst/include/Rcpp/module/Module_generated_PointerMethod.h: idem

        * R/Module.R: grab method docstrings

2010-11-20  John M Chambers  <jmc@r-project.org>

        * R/Module.R: now checks for the existence of a default constructor
        for a C++ class and generates a suitable $initialize() method accordingly.

2010-11-20  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/MatrixRow.h: added missing return *this ;

        * R/Module.R: dispatch based on void-ness of the methods. For example
        if all methods are known to be void, etc ...

        * R/00_classes.R: more information in the C++OverloadedMethods ref
        class

        * src/Module.cpp: new .External CppMethod__invoke_void and
        CppMethod__invoke_notvoid that are used when we know for sure that
        all overloaded methods are void, or not void

        * inst/include/Rcpp/Module.h: class_ gains invoke_void and
        invoke_notvoid to support the changes above

2010-11-18  Douglas Bates  <bates@stat.wisc.edu>

        * inst/include/Rcpp/module/Module_generated_[class_]Constructor.h:
        allow up to 6 arguments to .constructor

2010-11-18  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Module.h: rework the class_ template to allow
        overloaded methods

        * R/00_classes.R: The C++Method class disappears and the
        C++OverloadedMethods enters. a "C++OverloadedMethods" object points
        to a set of overloaded C++ methods that all share the same name.

        * R/Module.R: adapt some of the code to cope with changes above

2010-11-17  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/as_vector.h: added the as_vector function
        that turns a sugar matrix expression into a vector of the appropriate
        type

        * inst/include/Rcpp/vector/Matrix.h: new SubMatrix class

2010-11-13  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Module.h: expose constructors as the
        "cpp_constructor" field of "C++ClassRepresentation" and the
        "constructors" slot of "C++Class"

2010-11-07  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/operators/minus.h: fixed
        Minus_Vector_Primitive<RTYPE,false,T>

        * inst/unitTests/runit.sugar.R: new test for the above

2010-11-05  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Module.h: exposing multiple constructors in modules

        * src/Module.cpp: The mangled class name is now "Rcpp_" plus the
        class name. The previous version used the address of the external
        pointer to the module, which was not constant.

2010-11-04  Douglas Bates  <bates@stat.wisc.edu>

        * inst/include/Rcpp/module/Module_generated_Constructor.h: remove
        redundant 'return's.

2010-11-04  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Module.h: experimental way to specify which
        constructor to use in classes exposed by modules. This is still too
        restrictive as it only allows one constructor.

        * inst/include/Rcpp/sugar/block/SugarMath.h: extend the SUGAR_MATH_1
        macro so that we can apply functions (e.g. sqrt) directly on SEXP

2010-11-01  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version): Release 0.8.8

        * debian/*: Similarly updated for new release to Debian

2010-10-30  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/RcppCommon.h: New define IS_GCC_450_OR_LATER
        * inst/include/Rcpp/Extractor.h: Do not enable Rcpp::Fast if g++
        4.5.0 or later is used -- we need to figure out what upsets it

2010-10-23  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/MatrixRow.h: Faster row indexing

        * inst/include/Rcpp/vector/Matrix.h: added use of _ to get columns
        and rows of a matrix. For example if x is a NumericMatrix, x(_,i)
        returns the same as x.column(i) and x(i,_) returns the same as
        x.row(i)

        * inst/unitTests/runit.Matrix.R: unit tests for the above

        * inst/include/Rcpp/sugar/functions/sum.h: the sugar version of sum
        now takes care of missing values correctly

        * inst/include/Rcpp/sugar/functions/cumsum.h: sugar version of cumsum

2010-10-21  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/MatrixColumn.h: Fixed indexing
        bug (mismatch between number of rows and number of columns

        * inst/unitTests/runit.Matrix.R: test fix above based on the
        R-help/Rcpp-devel thread:
        http://article.gmane.org/gmane.comp.lang.r.rcpp/851

        * inst/include/Rcpp/vector/MatrixColumn.h: Column gains a operator=
        taking a sugar expression. Faster indexing (caching the pointer
        instead of calling nrow many times)

        * inst/include/Rcpp/vector/Matrix.h: first pass at making matrix
        indexing faster

2010-10-21  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Module.h: Reorder instantiation for class_

2010-10-20  Dirk Eddelbuettel  <edd@debian.org>

        * include/Rcpp/XPtr.h: Applied patch by Karl Millar
        * include/Rcpp/vector/Vector.h: Idem

2010-10-19  Dirk Eddelbuettel  <edd@debian.org>

        * src/posixt.cpp: Correct POSIXct, POSIXt ordering for R 2.12.0

 2010-10-14  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version): Release 0.8.7

        * debian/*: Similarly updated for new release to Debian

2010-10-10  Romain Francois <romain@r-enthusiasts.com>

        * tests/doRUnit.R: workaround to disable tests on windows 64 until we can
          figure out what upsets R CMD check.

        * R/Module.R: expose the finalizer

2010-10-07  John M Chambers  <jmc@r-project.org>

        * R/Module.R: modify cpp_refMethods to substitute the .External
        directly with the method and class pointers.

2010-10-03  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/stats/random/r*: Added comment reminding users
        read up on Section 6.3 of "Writing R Extensions" and the need to
        call GetRNGstate() and PutRNGstate() when using R's RNGs

2010-09-30  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/MatrixRow.h: Matrix row inherits
        VectorBase so that it becomes a sugar expression, so that we can do
        something like this:
          NumericMatrix x( ... ) ;
          NumericVector x0 = x.row(0) ;

        * inst/include/Rcpp/vector/MatrixColumn.h: idem for columns

        * cleanup: run make clean in the inst/doc directory to install
        the fake vignettes

2010-09-27  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/traits/is_sugar_expression.h: new trait class
        to recognize sugar expressions

        * inst/include/Rcpp/vector/Vector.h: operator=( sugar expression)
        no longer allocate unnecessary memory.

2010-09-26  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rpp/Fast.h: new helper class Rcpp::Fast that allows
        faster indexing of Vector

        * inst/include/Rcpp/sugar/operators/plus.h: port to operator+ the same
        improvements than in operator*

2010-09-25  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/routines.h: declare routines that are registered

        * src/Rcpp_init.c: register routines

        * R/*.R: use registration information in many .Call and .External
        functions to speed things up

        * inst/include/Rcpp/RangeIndexer.h: experimenting with loop unrolling

2010-09-24  John M Chambers  <jmc@r-project.org>

        * R/Module.R: modify cpp_fields to substitute the .Call
        directly with the field and class pointers; supplements the
        changes entered by Romain on 9-22. (svn rev 2165, 2141)

        * src/Rcpp_init.c: set up registration of .Call's (rev 2167)

2010-09-24  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/Range.h : Range gains some
        operators (++,--,n etc ...)

        * inst/examples/ConvolveBenchmarks/convolve3_cpp.cpp: using the new
        Range operators

        * inst/include/Rcpp/sugar/operators/times.h: speed improvements. Not
        using pointer to member functions seems to be beneficial.

        * inst/include/Rcpp/sugar/nona/nona.h: sugar function that wraps a
        sugar expression in an object that pretends it does not contain any
        missing values. This allows many sugar functions and operators to use
        their fast versions when we know that the object does not contain
        missing values.

2010-09-22  Romain Francois <romain@r-enthusiasts.com>

        * R/Module.R: set [[ and [[<- as regular methods too, which restores
        previous behavior

2010-09-17  Romain Francois <romain@r-enthusiasts.com>

        * src/Reference.cpp: new objects are created via a callback to R's
        new function, as R_do_new_object did always return the same
        environment

        * R/00_classes.R: new ref class C++Method to represent C++ methods
        and holding their external pointers directly (same idea as C++Field)

        * inst/include/Rcpp/Module.h: internal support for
        C++Method (template class S4_CppMethod)

2010-09-17  John M Chambers  <jmc@r-project.org>

        * R/00_classes.R, R/02_completion.R, et al.: use of environment
        underlying the reference classes removes need for slots in
        C++Object class (svn rev's 2133, 2134)


2010-09-16  Romain Francois <romain@r-enthusiasts.com>

        * R/00_classes.R: moving classes definition here

        * inst/Rcpp/Module.h: added C++ class S4_field that builds S4 objects
        of class C++Field. Build the list of fields as part of the creation
        of the C++Class objects

        * src/Module.cpp: .Call functions CppField__get and CppField__set to
        get/set values of an object's field using external pointers
        directly (no std::map lookup internally)

        * R/Module.R: (unexported) functions .getField and .setField that
        call CppField__get and CppField__set

        * inst/include/Rcpp/Reference.h: skeleton for a Rcpp::Reference class
        that will help dealing with reference classes on the C++ side

        * src/Reference.cpp: implementation (needs update)

2010-09-16  John M Chambers  <jmc@r-project.org>

        * R/Module.R, tests/modRef.R: un-generic of new(); return a
        generator object for C++ classes. Use environment as superclass.


2010-09-15  Romain Francois <romain@r-enthusiasts.com>

        * DESCRIPTION: added the declaration MinimumSvnRev to control which
        version of R-devel we need so that Rcpp fully works, currently set to
        52905

        * R/zzz.R: check the svn revision of R against the declared
        MinimumSvnRev requirement and print a message if necessary (this will
        only stay for the interim period while we develop 0.8.7 so that we
        all are on the same page.

        * inst/include/Rcpp/Module.h: added methods to class_Base :
        methods_arity and methods_voidness to query the number of arguments
        of methods of a class and if the method is void

        * R/Module.R: implement referenceMethods (from methods) for 'C++Class'

2010-09-11  Dirk Eddelbuettel  <edd@debian.org>

        * src/Date.cpp: Add include of unistd.h to make Solaris happy

2010-09-09  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.8.6

        * debian/*: Similarly updated for new release to Debian

2010-09-08  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/RcppCommon.h: Also include typeinfo header file

2010-09-08  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Module.h : added class_Base::property_names
        method to grab the names of all fields (properties)

        * src/Module.cpp : added R access (.Call) function
        CppClass__properties to grab the names of the fields (property) from
        the XP of a class

        * inst/include/Rcpp/Module.h : added class_Base::property_is_readonly
        method to query if a property is read only

        * src/Module.cpp : added R access (.Call) function
        CppClass__property_is_readonly to query if a class property is read
        only

        * inst/include/Rcpp/Module.h : added class_Base::property_class
        method to grab the C++ class of a property

        * src/Module.cpp : added R access (.Call) function
        CppClass__property_class to grab the C++ class of a property

2010-09-06  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/ConvolveBenchmarks/exampleRCode.r: Rewritten /
        simplified using the rbenchmark::benchmark() function

        * DESCRIPTION: Added Suggests: on rbenchmark package

2010-09-04  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/ConvolveBenchmarks/exampleRCode.r: Some cosmetics

        * inst/examples/ConvolveBenchmarks/convolve3_cpp.cpp: Remove one
        unneccessary loop to set values to zero (which the ctor does for us)

2010-09-03  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-extending/Rcpp-extending.Rnw: Add highlight definitions
        * inst/doc/Rcpp-FAQ/Rcpp-FAQ.Rnw: Idem
        * inst/doc/Rcpp-package/Rcpp-package.Rnw: Idem

2010-09-02  Dirk Eddelbuettel  <edd@debian.org>

        * src/msvcmath.cpp: Undo unmotivated msvc patch
        * inst/include/Rcpp/msvc/: Idem
        * inst/include/Rcpp/XPtr.h: Idem
        * inst/include/RcppCommon.h: Idem
        * src/Date.cpp: Idem

        * DESCRIPTION: Added Suggests: on highlight package

2010-08-20  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/complex.h : binary operators for Rcomplex : +,-,*,/

2010-08-15  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/SugarBlock.h: more control of the NA behavior
        in SUGAR_BLOCK_2. SUGAR_BLOCK_2 will now propagate the NA, and the new
        SUGAR_BLOCK_2_NA will use a fixed NA (can be true or false). This can be
        useful if the function that is sugar'ed never generates NA.

        * inst/include/Rcpp/sugar/undoRmath.h : undo the macros done by Rmath.h

2010-08-13  Douglas Bates  <bates@stat.wisc.edu>

        * include/Rcpp.h: undo more defines from Rmath.h

2010-08-13  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/complex.h: simplify complex sugar functions
        Re, Im, Conj, Mod

        * inst/include/Rcpp/sugar/complex.h: new sugar functions operating on
        complex expressions: exp, log, sqrt, cos, sin, tan, acos, asin, atan,
        acosh, asinh, atanh, cosh, sinh, tanh

        * inst/unitTests/runit.sugar.R: added regression test for complex functions
        which did not handle NA properly before

        * DESCRIPTION: no longer requireing GNU make as we dont use it anymore

        * src/Makevars: removed the use of ifeq (which was the last thing requiring
        GNU make)

2010-08-12  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/math.h: replace previous versions of floor,
        abs, exp, ceil, ceiling with versions generated by the SUGAR_MATH_1
        macro

2010-08-11  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/vector.h: Vector gains constructor
        taking size and function pointers, acting as generators :

           Vector( const int& siz, stored_type (*gen)(void), bool seed = true )

           template <typename U1>
           Vector( const int& siz, stored_type (*gen)(U1), const U1& u1,
                   bool seed = true)

           template <typename U1, typename U2>
           Vector( const int& siz, stored_type (*gen)(U1,U2), const U1& u1,
                   const U2& u2, bool seed = true)

        so that for example :

           NumericVector( 10, norm_rand )

        generates a N(0,1) vector of size 10

        * inst/include/Rcpp/stats/random/rlnorm.h: Added rlnorm and rlnorm_
        * inst/include/Rcpp/stats/random/rgamma.h: Added rgamma and rgamma_
        * inst/include/Rcpp/stats/random/rt.h: Added rt and rt_
        * inst/include/Rcpp/stats/random/rbinom.h: Added rbinom and rbinom_
        * inst/include/Rcpp/stats/random/rnchisq.h: Added rnchisq and rnchisq_
        * inst/include/Rcpp/stats/random/rgeom.h: Added rgeom and rgeom_
        * inst/include/Rcpp/stats/random/rhyper.h: Added rhyper and rhyper_
        * inst/include/Rcpp/stats/random/rnbinom_mu.h: Added rnbinom_mu and rnbinom_mu_
        * inst/include/Rcpp/stats/random/rnbinom.h: Added rnbinom and rnbinom_
        * inst/include/Rcpp/stats/random/rpois.h: Added rpois and rpois_
        * inst/include/Rcpp/stats/random/rweibull.h: Added rweibull and rweibull_
        * inst/include/Rcpp/stats/random/rlogis.h: Added rlogis and rlogis_
        * inst/include/Rcpp/stats/random/rwilcox.h: Added rwilcox and rwilcox_
        * inst/include/Rcpp/stats/random/rsignrank.h: Added rsignrank and rsignrank_

        * inst/include/Rcpp/stats/random/rnorm.h: some optimization
        * inst/include/Rcpp/stats/random/rf.h: calculate n2/n1 just once
        * inst/include/Rcpp/sugar/SugarBlock.h : templates and macros to facilitate
        generation of sugar functions that take one or two double parameters

        * inst/include/Rcpp/sugar/math.h: using SugarBlock to generate new
        sugar functions:
                (1 parameter) : gamma, lgamma, digamma, trigamma, tetragamma,
                pentagamma, expm1, log1p, factorial, lfactorial,
                cos, acosh, atan, cos, cosh, log, log10, sqrt, sin, sinh, tan, tanh

                (2 parameter) : choose, lchoose, beta, lbeta, psigamma

2010-08-10  Douglas Bates  <bates@stat.wisc.edu>

        * include/Rcpp/stats/nbinom[_mu].h: Replace conflicting data member name
        'size' by 'siz'

2010-08-10  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/stats/random/rnorm.h: Added rnorm and rnorm_

        * inst/include/Rcpp/stats/random/runif.h: Added runif and runif_

        * inst/include/Rcpp/stats/random/rbeta.h: Added rbeta and rbeta_

        * inst/include/Rcpp/stats/random/rcauchy.h: Added rcauchy and rcauchy_

        * inst/include/Rcpp/stats/random/rchisq.h: Added rchisq and rchisq_

        * inst/include/Rcpp/stats/random/rexp.h: Added rexp and rexp_

        * inst/include/Rcpp/stats/random/rf.h: Added rf and rf_

        * inst/include/Rcpp/stats/stats.h : fixed name clash reported on Rcpp-devel
        http://permalink.gmane.org/gmane.comp.lang.r.rcpp/610

2010-08-09  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/stats/lnorm.h: Added d-p-q (lnorm|weibull|logis|f)
        generated by the script

        * inst/include/Rcpp/vector/Vector.h: further dispatch to allow generators
        to be passed to constructors of Vector

        * inst/include/Rcpp/traits/has_iterator.h: new SFINAE detection of
        generators

        * inst/include/Rcpp/Generator.h : base template class for generators

2010-08-06  Douglas Bates  <bates@stat.wisc.edu>

        * unitTests/runit.stats.R: Corrected instances of numeric
        arguments passed as integers, deleted tests for binomial with
        fixed parameter values.

2010-08-06  Romain Francois <romain@r-enthusiasts.com>

        * ../scripts/stats.R: R script to generate the template code for dpq functions

        * include/Rcpp/stats/unif.h: Added d-p-q unif and tests

        * include/Rcpp/stats/gamma.h: Added d-p-q gamma and tests

        * include/Rcpp/stats/chisq.h: Added d-p-q chisq

2010-08-05  Douglas Bates  <bates@stat.wisc.edu>

        * include/Rcpp/stats/beta.h: Added d-p-q beta and tests

        * include/Rcpp/stats/binom.h: Added pbinom and qbinom,
        and tests of same in runit.stats.R

        * include/Rcpp/stats/pois.h: Added ppois and qpois (plus
        tests in runit.stats.R).

        * include/Rcpp/stats/norm.h: Added pnorm and qnorm and
        corresponding tests in unitTests/runit.stats.R

2010-08-05  Dirk Eddelbuettel  <deddelbuettel@wtchi-stat-l2.wolve.com>

        * inst/include/Rcpp/stats/norm.h: Added dnorm sugar function
        * inst/include/Rcpp/stats/t.h: Added dt, pt, qt sugar functions
        * inst/include/unitTests/runit.stats.R: Added corresponding tests

2010-08-05  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/functions/seq_along.h: added seq(int,int) to
        mimic the R syntax : seq( 0, 5 )

        * inst/include/Rcpp/sugar/Range.h: fixed compiler confusion

        * inst/include/Rcpp/stats: new sugar functions Rcpp::stats::dpois and
        Rcpp::stats::dbinom inspired by Richard Chandler post on Rcpp-devel:
        http://lists.r-forge.r-project.org/pipermail/rcpp-devel/2010-August/000940.html

        * inst/include/Rcpp/sugar/sum.h: preliminary version of Rcpp::sum (does not
        deal with NA properly yet)

2010-08-04  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/: rework sugar matrix so that operator()(int,int)
        is always used instead of operator[](int)

        * inst/include/Rcpp/sugar/matrix/outer.h: new implementation based on
        LazyVector, so that the value from the vector expression is only
        retrieved once

2010-08-02  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/XPtr.h: give default values to tag and prot in XPtr ctor

2010-07-30  Romain Francois <romain@r-enthusiasts.com>

        * inst/doc/Rcpp-quickref/* : new vignette Rcpp-quickref: quick reference guide
        to Rcpp API

2010-07-28  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/exp.h: adapt to stricter standards on solaris/suncc

2010-07-25  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.8.5

        * debian/*: Similarly updated for new release to Debian

2010-07-17  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/Vector.h: faster lhs use of names, only
        using callback to R if necessary. (discovered while profiling
        RProtoBuf)

        * inst/include/Rcpp/RObject.h : faster lhs and rhs use of
        RObject::slot, using R API functions R_do_slot and R_do_slot_assign

2010-07-16  Dirk Eddelbuettel  <edd@debian.org>

        * src/Date.cpp: Small fix which may make Solaris/SunStudio happy

2010-07-16  Romain Francois <romain@r-enthusiasts.com>

        * man/Rcpp-package.Rd : removed old content and point to the
        Rcpp-package vignette for current guidelines.

        * DESCRIPTION: Updated to mention sugar and modules

2010-07-10  Romain Francois <romain@r-enthusiasts.com>

        * src/Makevars: Remove last call to $shell by turning C++0x
        detection off (and into a switch users can edit) which should
        make builds more stable
        * src/Makevars.win: Idem
        * src/cxx0x/cxx0x.R: Detection script deprecated for now

2010-07-10  Romain Francois <romain@r-enthusiasts.com>

        * man/CppClass-class.Rd: changed use of \linkS4Class to suppress a
        warning with the development version of R
        * man/CppObject-class.Rd: idem

2010-07-09  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.8.4

        * debian/*: Similarly updated for new release to Debian

2010-07-09  Romain Francois <romain@r-enthusiasts.com>

        * src/RObject.cpp: adapt the SlotProxy class to deal with the special
        case of the .Data slot (slot<- changes the internal SEXP)

        * R/Module.R: the C++Class now inherits from "character", to facilitate
        S4 method dispatch

        * src/Module.cpp: The CppClass ctor sets the .Data of the C++Class object
        to an obfuscated name to avoid class names clashes at the R level.

2010-07-08  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/functions/head.h: new sugar function : head
        * inst/include/Rcpp/sugar/functions/tail.h: new sugar function : tail

        * inst/include/Rcpp/sugar/functions/tail.h: new sugar function : diag

2010-07-07  Dirk Eddelbuettel  <edd@debian.org>

        * inst/README: Updated and now pointing to all the other documentation

2010-07-07  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/functions/rep.h: version of rep that takes a
        primitive as the first argument

2010-07-07  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runTests.R: Reverted to running all tests now that
        tests are reorganised using the one-compile-per-function scheme which
        significantly speeds up running of the numerous unit tests

2010-07-06  Dirk Eddelbuettel  <edd@debian.org>

        * src/Date.cpp: Imported mktime() from R (which is due to Arthur Olson)

2010-07-06  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/functions/ifelse.h: using compile time dispatch
        based on the NA-ness of the condition type. ifelse handles primitive
        arguments on the lhs, rhs or both

        * inst/include/Rcpp/sugar/functions/rev.h: new sugar function: rev

2010-07-05  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/RcppCommon.h : no more using variadic macros in
        RCPP_DEBUG

        * inst/include/Rcpp/vector/Matrix.h: move ncol, nrow, rows and cols
        in Matrix (used to be in Vector)

        * inst/include/Rcpp/traits/matrix_interface.h: new SFINAE helper to
        detect matrix interface (helps matrix sugar expressions)

2010-07-03  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/traits/result_of.h : also deal with functions
        taking two arguments (useful for e.g. outer)

        * inst/include/Rcpp/vector/MatrixBase.h : new CRTP base class
        for Matrix to facilitate sugar syntax on matrices.

        * inst/include/Rcpp/sugar/matrix/outer.h : new sugar function: outer
        * inst/include/Rcpp/sugar/matrix/row.h: new sugar function: row
        * inst/include/Rcpp/sugar/matrix/col.h: new sugar function: col
        * inst/include/Rcpp/sugar/matrix/lower_tri.h: new sugar function: lower_tri
        * inst/include/Rcpp/sugar/matrix/upper_tri.h: new sugar function: upper_tri

        * inst/include/Rcpp/sugar/functions/rep.h: new sugar function : rep
        * inst/include/Rcpp/sugar/functions/rep_len.h: new sugar function : rep_len
        * inst/include/Rcpp/sugar/functions/rep_each.h: new sugar function : rep_each

2010-07-02  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppStringVector: Now uses std::vector<std::string>
        * inst/include/classic/RcppStringVector.h: Idem

        * inst/unitTests/runit.List.R: Added simple test for RcppStringVector

2010-07-01  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppDateVector: Index argument is int here as well
        * src/RcppDatetimeVector: Idem
        * inst/include/classic/RcppDateVector.h: Idem
        * inst/include/classic/RcppDatetimeVector.h: Idem

        * inst/unitTests/runit.List.R: Added simple test for RcppList

2010-06-30  Dirk Eddelbuettel  <edd@debian.org>

        * src/DateVector: Index argument is int; throw declared
        * src/DatetimeVector: Idem
        * inst/include/Rcpp/DateVector.h: Idem
        * inst/include/Rcpp/DatetimeVector.h: Idem

2010-06-28  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/Im.h:
        * inst/include/Rcpp/sugar/Re.h:
        * inst/include/Rcpp/sugar/Conj.h:
        * inst/include/Rcpp/sugar/Mod.h: added sugar functions for
        complex vectors: Re, Im, Conj, Mod

2010-06-27  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.8.3

        * debian/*: Similarly updated for new release to Debian

        * inst/unitTests/runTests.R: Stop-gap measure to reduce the number of
        tests run on Windows as we now have so many tests that the build
        exceeds the time limit granted by the win-builder service. The forced
        reduction of tests can be overcome by adding --allTests as a
        command-line argument on Windows, or by running on another platform.

2010-06-25  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/posix.h: anticipate R 2.12.0 switch of classes
        POSIXt and POSIXct

        * inst/include/classic: New home for the 'classic' API headers. Also
        some refactoring of the internals so that they can interoperate
        better withuse the new API.

2010-06-24  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/vector/RangeIndexer.h: factored the RangeIndexer
        class out of Vector, so that we can at a later time specialize it for
        character vectors, lists, etc ...

2010-06-24  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Date.h: add struct tm member variable and
        sensible (ie non-intra-day) accessor functions; add SEXP ctor
        * src/Date.cpp: Implementation of the above
        * inst/unitTests/runit.Date.R: tests for the above

        * inst/include/Rcpp/Datetime.h: New Datetime class
        * src/Datetime.cpp: Implementation for new Datetime class
        * inst/unitTests/runit.Datetime.R: first tests for Rcpp::Datetime
        * inst/include/Rcpp/Datetime_forward.h: API Integration

        * inst/include/Rcpp/DatetimeVector.h: New DatetimeVector class
        * src/Datetime.cpp: Implementation for new DatetimeVector class

2010-06-23  Dirk Eddelbuettel  <edd@debian.org>

        * src/Date.cpp: Import mktime00() from R's src/main/datetime.c,
          completed class implementation
        * inst/include/Rcpp/Date.h: Add mktime00() declaration

        * inst/include/Rcpp/DateVector.h: New DateVector class
        * src/Date.cpp: Implementation for new DateVector class

2010-06-23  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Date_forward.h: forward declaration of Rcpp::Date and
        support for wrap( container of Rcpp::Date ), e.g. wrap( vector<Date> )

        * inst/include/Rcpp/sugar/Range.h: added the concept of range to allow
        modification of several elements of a vector.

        * inst/examples/ConvolveBenchmarks: version of the convolution function
        using sugar indexing.

2010-06-22  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/Rcpp/Date.h: New Date class (not yet complete)
        * src/Date.cpp: Implementation for new Date class (not yet complete)
        * inst/unitTests/runit.Date.R: first tests for Rcpp::Date

2010-06-21  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/SugarPerformance/: New example to benchmark the new
        syntactic 'sugar' classes

2010-06-19  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/RcppDoxygenExamples.h: Correct three wrong paths for
        ConvolveBenchmak example files, and add missing FastLM/ examples

2010-06-18  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/sugar/*: implementation of Rcpp sugar, covering
        binary operators (<,>,<=,>=,!=,==) for logical vectors or logical
        expressions, arithmetic operators (+,-,*,/) for vectors and
        expressions, and several functions similar to the R functions of the
        same name, currently: abs, all, any, ceiling, diff, exp, ifelse,
        is_na, lapply, pmin, pmax, pow, sapply, seq_along, seq_len, sign

        * inst/doc/Rcpp-sugar/Rcpp-sugar.Rnw: vignette documenting Rcpp sugar

2010-06-17  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Vector.h: split into more manageable files

        * inst/include/Rcpp/vector/VectorBase.h: simplify the VectorBase class
        so that it is just implementing CRTP. It does not inherit from RObject anymore.
        This will help implementation of sugar.

2010-06-16  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppDateVector.cpp: Also provide non-const operator()(int i)
        * inst/include/RcppDateVector.h: Idem

2010-06-16  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/InternalFunction.h: new class Rcpp::InternalFunction
        * R/Module.R: R support for Rcpp::InternalFunction

        * inst/include/Rcpp/Module.h: added the LOAD_RCPP_MODULE macro to
        allow loading a module from C++

        * R/Module.R: if the first argument is an external pointer already,
        Module assumes it is a module pointer. (R support for the item above)

2010-06-15  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppDatetimeVector.cpp: Use std::vector internally
        * inst/include/RcppDatetimeVector.h: Idem
        * src/RcppDateVector.cpp: Use std::vector internally
        * inst/include/RcppDateVector.h: Idem

2010-06-14  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppDatetimeVector.cpp: Add constructor from int
        * inst/include/RcppDatetimeVector.h: Idem
        * src/RcppDateVector.cpp: Add constructor from int
        * inst/include/RcppDateVector.h: Idem

2010-06-13  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppResultSet.cpp: Proper template specialisation for wrap
        * inst/include/RcppResultSet.h: Idem

        * src/RcppDateVector.cpp: Add const qualifier to operator()(int i)
        * inst/include/RcppDateVector.h: Idem

2010-06-13  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Vector.h: added new factory functions for Vector:
        Vector::import and Vector::import_transform

2010-06-12  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppDate.cpp: Simple RcppDate(SEXP) ctor added
        * inst/include/RcppDate.h: Idem

        * src/RcppResultSet.cpp: carved out four new wrap() functions by
        splitting the existing code in add() methods off

2010-06-11  Romain Francois <romain@r-enthusiasts.com>

        * R/help.R: workaround to allow the syntax "Rcpp ? something" to
        bring Rcpp documentation

        * inst/include/Rcpp/Module.h: support for exposing public data
        members

        * inst/doc/Rcpp-modules/Rcpp-modules.Rnw: a section to mention fields
        as a way to expose data members

        * inst/Rcpp/traits/is_na.h : new helper class Rcpp::traits::is_na

2010-06-09  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.8.2

        * debian/*: Similarly updated for new release to Debian

2010-06-08  Romain Francois <romain@r-enthusiasts.com>

        * src/RcppCommon.cpp: track if demangling is available (currently
        only available with gcc)

2010-06-08  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.8.1

        * debian/*: Similarly updated for new release to Debian

2010-06-07  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-extending*: Extended mini vignette "Rcpp-extending"

2010-06-07  Romain Francois <romain@r-enthusiasts.com>

        * inst/doc/Rcpp-extending*: Added new mini vignette "Rcpp-extending"

2010-06-05  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-FAQ*: Extended mini vignette "Rcpp-FAQ"

2010-06-05  Romain Francois <romain@r-enthusiasts.com>

        * inst/doc/Rcpp-FAQ*: Added new mini vignette "Rcpp-FAQ"

2010-06-04  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Module.h:
        * R/Module.R: support for properties of C++ objects

2010-06-03  Romain Francois <romain@r-enthusiasts.com>

        * src/RcppCommn.cpp: added show method for C++Object and C++Class

        * inst/include/Rcpp/XPtr.h: getTag and getProtected are deprecated, will be
        removed in Rcpp 0.8.2. methods tag and prot should be used instead. The new
        methods support both lhs and rhs use.

2010-06-02  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/traits/r_type_traits.h: added missing support for
        std::complex<double>, needed by RcppArmadillo

        * src/RcppCommon.cpp: added internal .Call function as_character_externalptr
        to extract the address of the pointer wrapped by an external pointer

2010-06-01  Romain Francois <romain@r-enthusiasts.com>

        * inst/doc/Rcpp-package*: new mini vignette "Rcpp-package" to improve the
        documentation of Rcpp.package.skeleton and details the steps involved in
        making a package that uses Rcpp

        * inst/doc/Rcpp-modules/Rcpp-modules.Rnw: document how to use modules
        in other packages (namespace, etc ...)

        * R/Rcpp.package.skeleton: added the module argument

        * R/Module.R: prompt method for Module objects to generate skeleton of an Rd
        file with the list of functions and classes defined by the module.

2010-05-30  Romain Francois <romain@r-enthusiasts.com>

        * R/Module.R: completion for C++ modules.

2010-05-29  Romain Francois <romain@r-enthusiasts.com>

        * R/Module.R: when a Module is loaded, it creates extensions of the
        class C++Object for each internal class to enable S4 dispatch

        * R/Module.R: support for completion of methods of C++ objects

2010-05-28  Romain Francois <romain@r-enthusiasts.com>

        * R/cppfunction.R: withdrawn, we now use inline::cxxfunction which is
        more flexible and we no longer need to depend on inline
        * man/cppfunction.Rd: *

        * inst/unitTests/runTests.R: The tests now require a recent version
        of inline (>= 0.3.4.2)

2010-05-27  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Module.h: adding support for registering a free function
        that takes a pointer to the class of the wrapped object as first argument
        in class_

2010-05-26  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Module.h:
        * src/Module.cpp : limited support for exposing c++ classes in Rcpp modules

        * R/Module.R : classes "C++Class", "C++Object" holding external pointers
        and $ method dispatching internally

2010-05-24  Dirk Eddelbuettel  <edd@debian.org>

        * src/Rcpp*.cpp: Moved template code from the older API to headers
        headers in inst/include/*.h; removed empty source files

2010-05-21  Romain Francois <romain@r-enthusiasts.com>

        * R/exceptions.R: rework rcpp_tryCatch to prevent evaluating the
        expression too early (reported by Doug Bates on Rcpp-devel)

        * src/Evaluator.cpp: rework Evaluator::run() so that it correctly
        evaluates inside an environment (reported by Doug Bates on
        Rcpp-devel)

2010-05-20  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Vector.h : correct throw specs for
        vector_from_string (reported by Brian Ripley from solaris)

        * inst/include/Rcpp/internal/Proxy_Iterator.h: fixed constness of
        several operators in Proxy_Iterator to try to suite suncc/solaris

        * inst/include/Rcpp/config.h: define RCPP_ENABLE_MODULES to hide
        the experimental module features from the official api

        * R/getDLL.R: removed and promoted to getDynLib in inline

2010-05-19  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/as.h: add throw specification to as
        specialization, reported by suncc compiler on CRAN checks

        * inst/include/Rcpp/Module.h : adding the concept of Rcpp modules,
        inspired from boost.python

        * R/Module.R: R side support for modules

        * R/getDLL.R: generic (s4) function to get the DLL based on either
        its name e.g. getDLL( "Rcpp" ) or an object of class CFunc (from the
        inline package)

2010-05-17  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.8.0

        * debian/*: Similarly updated for new release to Debian

2010-05-11  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/traits/*.h: added support for long long int and
        unsigned long long int, which is size_t on win64

2010-05-10  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Dimension.h: added a const operator[], requested
        in the Rcpp-devel thread :
        http://article.gmane.org/gmane.comp.lang.r.rcpp/327

        * inst/include/Rcpp/preprocessor.h: added __rcpp_info__ pseudo
        reflection information to RCPP_XP_FIELD

        * inst/unitTests/runit.macros.R: testing RCPP_XP_FIELD

2010-05-06  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/DataFrame.h: DataFrame( RObject::SlotProxy ) and
        DataFrame( RObject::AttributeProxy ) constructors

        * inst/include/Rcpp/DataFrame.h: DataFrame::create now uses the R
        function data.frame and not as.data.frame, which respects the
        stringsAsFactors argument.

        * inst/include/Rcpp/preprocessor.h: added RCPP_XP_FIELD_SET and
        RCPP_XP_FIELD_SET macros to generate getter and setter for a field of
        a class handled by an external pointer. RCPP_XP_FIELD is modified to
        generate both getter and setter

2010-05-05  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/S4.h: S4 gains a "is" method to identify if an
        object is of a given S4 class, following Doug's advice in lme4a

        * inst/include/Rcpp/algo.h: new STL-like algorithms Rcpp::any and
        Rcpp::any_if

        * inst/include/Rcpp/Vector.h: Vector gains a constructor taking an
        RObject::SlotProxy and a constructor taking an RObject::AttributeProxy,
        allowing this construct NumericVector x( y.slot( "foo" ) )

2010-05-04  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/preprocessor_generated.h: new macros to hide most of
        the boiler plate code
          RCPP_FUNCTION_0, ..., RCPP_FUNCTION_1
          RCPP_FUNCTION_VOID_0, ...
          RCPP_XP_METHOD_0, ...
          RCPP_XP_METHOD_CAST_0, ...
          RCPP_XP_METHOD_VOID_0, ...

2010-05-03  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.DataFrame.R: unit tests for Rcpp::DataFrame

2010-05-03  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/exceptions.h : move the what methods of exception
        classes so that the symbol is defined for sure in the shared
        library. This seems to make a difference due to vague linkage
        issues. Decrypted from http://gcc.gnu.org/wiki/Visibility

2010-05-02  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/as.h: add throw(not_compatible) in Rcpp::as

        * inst/include/Rcpp/clone.h: the clone(SEXP) moves to the headers

2010-04-28  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/Vector.h: changed Vector( size_t ) to Vector( int )
        to allow Vector( 0 ) and Vector::create()

2010-04-27  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/preprocessor.h: new macro RCPP_ENUM_TRAITS to
        generate traits needed to support wrap for an enum type (used in
        RProtoBuf)

        * R/Rcpp.package.skeleton.R: correctly handle the example_code
        argument

2010-04-26  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/DataFrame_*.h: new class Rcpp::DataFrame

        * inst/include/Rcpp/preprocessor.h: added RCPP_XP_FIELD macro

        * inst/include/Rcpp/preprocessor_generated.h: added the set of macros
        RCPP_WRAPPER_0, ..., RCPP_WRAPPER_65 to help wrapping existing
        C functions into .Call callables functions

2010-04-16  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.12

        * debian/*: Similarly updated for new release to Debian

        * RcppLdpath.R: Remove shQuote() from trying to protect spaces in
          Windows pathnames as it breaks backticks expansion usage

2010-04-06  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/Rcpp/traits/*.h: added support for long

2010-04-04  Romain Francois <romain@r-enthusiasts.com>

        * inst/include/* : headers are moved to inst/include so that they are
        are not duplicated on multi arch platforms

        * R/RcppLdPath.R: RcppCxxFlags is updated to reflect the above change

        * src/Makevars: simplified as the headers don't need to be copied to each
        arch lib directory anymore

        * src/Makevars.win: same

        * inst/include/Rcpp/Vector.h : Vector<> gains a templated assignment
        operator

2010-04-02  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Formula.h: new Rcpp::Formula class
        * inst/unitTests/runit.Formula.R: unit test for Rcpp::Formula

2010-03-26  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.11

        * debian/*: Similarly updated for new release to Debian

        * inst/examples/FastLM: Updated to use new create() method

        * inst/unitTests/runit.Matrix.R: New unit test new Matrix constructors

2010-03-26  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Vector.h: Fixed bug in diag()

2010-03-23  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.CharacterVector.R: New unit test for bug found by Doug

2010-03-23  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Vector.h: fixed critical bug. Vector did not have copy constructor
        and assignement operators

        * src/exceptions.cpp: added the demangle helper function to help debugging

        * src/RcppCommon.h: added the DEMANGLE macro and the RCPP_DEBUG macro to help
        debugging.

2010-03-20  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Vector.h : Vector gains a templated fill method to fill all
        elements of a vector with the same value

2010-03-19  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Vector.h : Matrix gains a diag method to create diagonal
        matrices

        * src/Rcpp/Named.h: Named is no longer a class, but a templated function.
        This preserves all the existing interface, but also allows Named to be used
        in making simple vectors, e.g through the Vector::create factory functions

        * src/Rcpp/Vector.h: Vector gains the "create" factory methods taking up
        to 20 arguments that can be named (using the Argument class or the _
        placeholder)

        * src/Rcpp/make_list.h: removed since Vector::create does the job more generically
        and more efficently

2010-03-19  Dirk Eddelbuettel  <edd@debian.org>

        * src/Rcpp/Vector.h: Matrix now also accepts a single int in the
          constructor to create matrices of square sizes

        * src/RcppFrame.h: Patch by Alistair Gee to make ColDatum more robust
          src/RcppFrame.h: Idem
        * inst/unitTests/runit.RcppFrame.R: New unit test for RcppFrame

2010-03-16  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/make_list.h: set of helper factories make_list to facilitate
        production of named generic vectors.

        * src/Rcpp/Named.h: new class Rcpp::Argument similar to Named but does not
        contain the object, just the name. The templated Argument::operator= makes
        a Named. This allows an application to define a set of arguments that it uses
        in order to have a nicer construct. see the runit.Argument.R file for an example

2010-03-15  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.10

        * debian/*: Similarly updated for new release to Debian

        * RcppLdpath.R: Use shQuote() to protect spaces in Windows pathnames

2010-03-15  Romain Francois <romain@r-enthusiasts.com>

        * inst/codebloat/codebloat.R: script to generate code (creating a
        pairlist with up to n arguments).

        * src/Rcpp/Function.h : Function gains a body method to retrieve
        the body of the function (using the BODY macro from Rinternals.h)

2010-03-14  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/S4.h : Rcpp::S4 gains a new constructor taking a string
        reference and building a new S4 object of that type. This throws an
        exception if the object is not successfully created (e.g the class
        is not a known S4 class)

2010-03-13  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/S4.h : new class Rcpp::S4

2010-03-12  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.9

        * debian/*: Similarly updated for new release to Debian

2010-03-12  Romain Francois <romain@r-enthusiasts.com>

        * inst/unitTests/runit.environments.R: mac os has a different locale

        * src/Rcpp/traits/is_convertible.h: the detection is now performed without
        the help of cxx0x or tr1 which makes it compatible with gcc 4.2

        * src/Rcpp/traits/is_same.h: new traits is_same to help detect if two types
        are the same (not currently used)

        * src/Rcpp/traits/wrap_type_traits.h: use "unsigned int" instead of "size_t"
        in the template specializations (64 bit compatibility)

2010-03-10  Dirk Eddelbuettel  <edd@debian.org>

        * R/RcppLdPath.R: More specific about quote-protection of path on Windows

        * inst/doc/Rcpp-introduction.Rnw: Applied several fixes kindly suggested
          by Matt Kraai

2010-03-09  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.8

        * debian/*: Similarly updated for new release to Debian

2010-03-09  Romain Francois <romain@r-enthusiasts.com>

        * man/Rcpp.package.skeleton.Rd: some more documentation

2010-03-07  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/Rcpp-introduction.Rnw: Added vignette based on a recent paper

2010-03-07  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/StringTransformer.h: new class template StringTransformer
        that allows using a character by character function to modify
        elements of a string vector (example available in package RcppExamples)

        * src/Rcpp/Vector.h: string_proxy::iterator is made const char* because
        R uses a global cache for the CHARSXP

2010-03-05  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Vector.h: string_proxy gains begin(), end(),
        size(), and operator[] for iterating over characters of the CHARSXP

2010-03-02  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Vector.h: Vector gains a nested r_type type that is an
        integral_constant<int,RTYPE> to facilitate TMP
        * src/RcppCommon.{h,cpp}: added RCPP_CALL_VECTOR and RCPP_CALL_MATRIX
        macros to facilitate calling a function templated by T = Vector<RTYPE>
        the macro hides the boiler-plate switch( TYPEOF(x) ){ case INTSXP : ... }

2010-03-01  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Vector.h: more typedef : CharacterMatrix, StringMatrix,
        GenericMatrix, ExpressionMatrix, ListMatrix

        * src/ExpressionVector.cpp : replaced by templates in Vector.h
        * src/Rcpp/Vector.h: use templates to cover ExpressionVector additional
        methods : eval() and eval(const Environment& )

2010-02-28  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Vector.h : more generic code for vectors. All vector
        types are now generated from the template Rcpp::Vector<int RTYPE>
        where RTYPE is one of INTSXP, LGLSXP, REALSXP, RAWSXP, STRSXP,
        VECSXP or EXPRSXP.

2010-02-24  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/exceptions.h: some exception classes factored out

        * src/Rcpp/VectorBase.h: now a template, using the
        Curiously recurring template pattern (the type parameter is
        the derived class)

        * src/Rcpp/SEXP_Vector.h: the intermediate class
        SEXP_Vector_Base is removed, reverting the change on
        2010-02-09. This will facilitate the introduction of the
        Curiously recurring template pattern on vectors

        * src/Rcpp/MatrixRow.h : Row has been factored out of SimpleVector
        into a separate template class Rcpp::MatrixRow

        * src/Rcpp/SimpleVector.h: gains a row method that returns
        a SimpleVector::Row, aka MatrixRow<SimpleVector>

        * src/Rcpp/CharacterVector.h : gains a row method that returns
        a CharacterVector::Row, aka MatrixRow<CharacterVector>

        * src/Rcpp/SEXP_Vector.h : gains a row method that returns
        a SEXP_Vector::Row aka MatrixRow<SEXP_Vector>

        * src/Rcpp/MatrixColumn.h : Column class to access elements of a
        matrix column

2010-02-23  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/SimpleVector.h: added the class SimpleVector::Row
        to support STL algorithms working on a row of a matrix.

        * src/Rcpp/internal/ListInitialization.h: new class that
        supports use of operator, (inspired from blitz) giving this
        notation: IntegerVector x(3); x = 0, 1, 2 ;

2010-02-21  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/as.h: more generic as implementation. primitive
        types are handled through templates which for example makes
        it possible to as<GPB::int64> in RProtoBuf. std::deque<T>
        and std::list<T> become as'able when T is a primitive type
        as indicated by the Rcpp::traits::r_type_traits

        * src/as.cpp: removed since as is now fully implemented via
        templates

2010-02-19  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/as.h: as now delegates to a template class
        Exporter since partial specialization was not possible with
        the interface of as. It is possible to partially specialize
        Exporter. std::vector<T> when T is a primitive type is
        now handled through Exporter. Some support Exporter have been
        added and used in RcppArmadillo

        * src/Rcpp/internal/wrap.h: support for std::complex<double>
        and std::complex<float> (needed for RcppArmadillo)

        * src/Rcpp/traits/wrap_type_traits.h : The Importer concept
        has been introduced to support wrap() of more types. If a
        class has a typedef "r_import_type" then the following interface
        is assumed and used. The corresponding class must have methods
        int size() and r_import_type get(int). As usual further dispatch
        is performed based on r_import_type (primitive, etc ...).
        RcppArmadillo has an example of this for wrapping arma::field<T>
        objects using the FieldImporter<T> class.

2010-02-18  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Language.h: added fixed_call to support STL algorithms
        similar to generate.

        * inst/unitTests/runit.Language.R: unit test for fixed_call

        * src/Rcpp/Environment.h: Environment gains a find method
        which searches for a binding in the associated environment
        but also in all its parents, as opposed to get which just
        looks in the environment.

2010-02-17  Dirk Eddelbuettel  <edd@debian.org>

        * src/Makevars: Simplified as RcppExample.cpp is shipped off
        * src/Makevars.win: Simplified as RcppExample.cpp is shipped off

2010-02-17  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/SEXP_Vector.h : The lhs use of operator[](string) has
        been improved so that if the name does not exist in the vector,
        the vector grows.

        * inst/unitTests/runit.GenericVector.R: new unit test
        test.List.implicit.push.back about the new operator[](string)

        * src/Rcpp/SimpleVector.h : new template class SimpleMatrix<int>
        that derives from SimpleVector<int>, with typedefs NumericMatrix
        IntegerMatrix, LogicalMatrix, RawMatrix, ComplexMatrix. The actual
        functionality comes from SimpleVector but SimpleMatrix has
        constructors and assignment operators that behave slighlty
        differently : they check that their input is a matrix

        * src/Rcpp/traits/wrap_type_traits: added support for float

        * src/Rcpp/Rcpp.h: now including RObject here instead of in
        RcppCommon.h because RObject is a client of implicit converters
        (attr) and so we need to leave a hook for third party code, e.g.
        RcppArmadillo

2010-02-16  Dirk Eddelbuettel  <edd@debian.org>

        * src/Makevars.wim: Applied improved version kindly supplied by Brian Ripley

        * R/RcppExample.R, man/RcppExample.Rd: Moved to RcppExamples package
        * man/RcppDate.Rd, man/RcppParams.Rd, man/RcppResultSet.Rd, RcppVector.Rd,
          src/RcppExample.cpp: Idem

        * inst/examples/FastLM: Slightly reworked, actual code factored out
          and used in a per-library demo/test script and a joint benchmark.r

2010-02-15  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/FastLM: New example directory with two 'fast lm'
          implementations using, respectively, GNU GSL (in C) and Armadillo
          (in C++); Armadillo is seen as faster for lack of extra copying

2010-02-14  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Language.h: accepting Function in unary_call and
        binary_call to support STL algorithms using R functions.

2010-02-14  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.7

        * debian/*: Similarly updated for new release to Debian

2010-02-14  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Language.h: fixing serious bug. The 'code bloat'
        constructors taking a std::string did not explicitely
        create a symbol, so the created calls were wrong.

        * src/Rcpp/Language.h: new template classes Rcpp::unary_call
        and Rcpp::binary_call to allow use of Language objects
        in STL algorithms.

        * inst/unitTests/runit.Language.R: unit test and example
        of using unary_call and binary_call

2010-02-12  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.6

        * NEWS: Updated

        * debian/*: Similarly updated for new release to Debian

2010-02-12  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/Environment.h: Environment gains a default
        constructor. This is needed for RInside.

2010-02-10  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/SEXP_Vector.h: SEXP_Vector (and therefore
        ExpressionVector and GenericVector, a.k.a List) gain
        methods push_front, push_back and insert that are templated and
        use the 'implicit wrap idiom' to add an element to the front
        or, the back or an arbitrary (valid) position of the list,
        pushing other elements. Internally the SEXP is actually copied.

        * src/Rcpp/SEXP_Vector.h: SEXP_Vector gains an erase method
        modelled after std::vector<>::erase to remove elements from
        a list. erase has a single iterator (or int) form that removes
        one element, and a range based version
        erase(iterator first, iterator last) that erases all elements
        between first and last.

        * src/Rcpp/VectorBase.h: VectorBase gains a version of
        offset to support retrieving the offset of a given name of a
        vector: offset( const std::string& name)

        * src/Rcpp/SimpleVector.h : uses the new offset to perform
        names based indexing (FR #808)
        * src/Rcpp/SEXP_Vector.h: same
        * src/Rcpp/CharacterVector.h: same

        * inst/unitTests/runit.GenericVector.R: unit tests for names
        based indexing
        * inst/unitTests/runit.IntegerVector.R: same
        * inst/unitTests/runit.CharacterVector.R: same

2010-02-09  Dirk Eddelbuettel  <edd@debian.org>

        * inst/skeleton/Makevars: Use $R_HOME/bin indirection
        * inst/skeleton/Makevars.win: Idem

2010-02-09  Romain Francois <romain@r-enthusiasts.com>

        * src/Rcpp/SEXP_Vector.h: The functionality of SEXP_Vector
        that was independent of the template parameter was factored out
        into a new base class SEXP_Vector_Base. This follows the advice
        of item 44 of Effective C++.

        * src/Rcpp/SEXP_Vector.h: SEXP_Vector_Base::iterator is introduced
        as well as methods begin() and end() to support use of stl
        algorithms on lists.

        * inst/unitTests/runit.GenericVector.R: new unit test for
        testing SEXP_Vector_Base::iterator and illustrating a c++
        version of lapply using std::transform

        * src/Rcpp/CharacterVector.h: CharacterVector gains a random
        access iterator, begin() and end() to support STL algorithms.
        The iterator dereferences to a StringProxy

        * src/Rcpp/RObject.h: remove RObject::asFoo methods which were
        deprecated in Rcpp 0.7.5. The alternative is to use Rcpp::as<Foo>

2010-02-08  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.5

        * debian/*: Similarly updated for new release to Debian

2010-02-07  Romain Francois <francoisromain@free.fr>

        * src/RcppSexp.h: class RcppSexp removed (was deprecated)

        * src/Rcpp/*.h: defaults copy constructors and assignment
        operators have been added for all classes extending RObject.
        Otherwise the compiler generates default versions that circumvent
        the garbage collection management

2010-02-06  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/functionCallback/newApiExamples.r: Added simpler
          version using the new API
        * inst/examples/functionCallback/newApiExamples.r: Updated

        * inst/unitTests/runit.RcppVector.R: added test for NA/NaN
        * inst/unitTests/runit.RcppMatrix.R: idem

2010-02-06  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/RObject.h : asFoo methods are deprecated.

        * src/Rcpp/DottedPair.h : using R_len_t instead of int
        to anticipate future changes in R
        * src/Rcpp/VectorBase.h: idem
        * src/DottedPair.cpp: idem
        * src/VectorBase.cpp: idem
        * src/as.cpp: idem

        * src/Rcpp/SimpleVector.h: SimpleVector is now only parameterized
        by the SEXP type. The c type is automatically retrieved using
        the storage_type trait class.

2010-02-05  Dirk Eddelbuettel  <edd@debian.org>

        * inst/THANKS: Added in order to show our appreciation

2010-02-04  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/DottedPair.h: code bloat to allow creation of
        DottedPair containing up to 5 objects without variadic templates
        RInside for example needs this.
        * src/Rcpp/Language.h: same
        * src/Rcpp/Pairlist.h: same
        * src/Rcpp/grow.h: same

        * src/Rcpp/internal/wrap.h : one more level of dispatch to
        identify if there needs a cast between the primitive
        iterated over and the target storage type. For example
        size_t needs a cast to be stored in an integer vector. This
        will be useful for the RProtoBuf package with e.g. types like
        google::protobuf::int64 which needs to be cast to double.
        Consequently the special handling of bool has been withdrawn
        as bool can now be assimilated to a primitive type that does
        require casting (to int)

2010-02-03  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/VectorBase.h: VectorBase gains a names method that
        uses the proxy pattern to get or set the names of a vector

        * src/Rcpp/DottedPair.h: DottedPair gains a << operator to
        add an object to the queue of the list. this is much useful
        when variadic templates are not available

        * src/Rcpp/RObject.h: support for slot assignment. The slot
        method now uses the proxy pattern.

        * inst/unitTests/runit.S4.R: unit test for slot assignment

2010-02-02  Romain Francois <francoisromain@free.fr>

        * src/internal/r_coerce.h : coercion is now handled by a templated
        function r_coerce<int,int>, for example r_coerce<INTSXP,REALSXP>
        takes an int, performs coercion and returns a double

        * src/traits/has_iterator.h : introduce a trait that uses the
        SFINAE idiom to check if a class T has a nested type called
        "iterator". This helps wrap dispatch which now uses the
        range based wrap implementation in that case

        * src/Rcpp/wrap.h: The range based wrap function is exposed
        at the Rcpp:: level. The interface is
        wrap( InputIterator first, InputIterator last )
        and dispatch is performed internally using iterator traits

2010-02-01  Romain Francois <francoisromain@free.fr>

        * src/traits/wrap_type_traits.h: new namespace Rcpp::traits::
        to host Rcpp type traits used by the template meta programming
        dispatching of wrap

2010-01-31  Dirk Eddelbuettel  <edd@debian.org>

        * doxyfile: several updates plus improvements related to examples/
        * src/RcppDoxygenExamples.h: A phony empty file needed mainly to
          define a few \example tags for Doxygen

2010-01-31  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/internal/wrap.h: more wrap for stl templates are
        candidate for wrap (when T can be wrapped)
        std::list<T>                          -> vector or list
        std::multiset<T>                   -> vector or list
        std::map<std::string,T>                 -> named vector or named list
        std::multimap<std::string,T>            -> named vector or named list
        std::tr1::unordered_map<std::string,T>  -> named vector or named list
        std::tr1::unordered_set<T>         -> vector or list
        std::tr1::unordered_multiset<T>    -> vector or list

        * inst/unitTests/runit.wrap.R : unit tests for the new
        wrappable types

2010-01-30  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.4

        * debian/*: Similarly updated for new release to Debian

        * inst/unitTests/runit.RcppMatrix.R: also test STL return
        * inst/unitTests/runit.RcppVector.R: added

2010-01-30  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/internal/wrap.h: rework wrap using traits and
        template meta programming. wrap is now really a template
        and has many generated specializations. This file is
        a private header and should only be included by RcppCommon.h

        * src/Rcpp/Language.h: Language gains Function aware constructors
        and eval methods

2010-01-28  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/DottedPair.h: DottedPair::Proxy are no more lazy, i.e
        traversal of the pair list happens at construction time, so
        that the proxy can be created once and used many times more
        efficiently.

        * src/Rcpp/DottedPair.h: Pairlist and Language are now derived
        from the new virtual class DottedPair since both class were
        almost identical

        * src/Rcpp/SimpleVector.h: simple vectors gain a range
        based assign method and a range based assign constructor
        * inst/unitTests/runit.IntegerVector.R: new unit test
        test.IntegerVector.range.constructors

        * src/Rcpp/Dimension.h: new class Rcpp::Dimension to support
        creation of vectors with dimensions

        * src/Rcpp/*Vector.h: using Rcpp::Dimension

        * src/Rcpp/SimpleVector.h: data is initialized with 0 when
        the object is constructed from size or Dimension constructor

        * inst/unitTestsrunit.CharacterVector.R: new unit test to test
        constructors using Dimension
        * inst/unitTests/runit.IntegerVector.R: idem
        * inst/unitTests/runit.GenericVector.R: idem

        * R/unit.tests.R: new unexported function "test" to trigger
        unit tests using installed test cases

        * src/Rcpp/CharacterVector.h: minor bug fix in assign

        * inst/unitTest/runit.RcppResultSet.R: compare time using
        as.numeric to avoid timezone problems

2010-01-27  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.RcppMatrix.R: added
        * inst/unitTests/runit.RcppMatrixView.R: added
        * inst/unitTests/runit.RcppVector.R: added
        * inst/unitTests/runit.RcppVectorView.R: added

2010-01-27  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/CharacterVector.h: CharacterVector gains a default
        constructor

        * src/Rcpp/CharacterVector.h: CharacterVector gains range
        constructors and range based assign methods facilitating
        construction from iterators

        * inst/unitTests/runit.CharacterVector.R: unit tests for assign
        and range based constructors

        * src/Rcpp/CharacterVector.h: CharacterVector::StringProxy
        gets a printing operator <<(std::ostream& )

        * src/Rcpp/Environment.h: removed the static
        Environment::RCPP_NAMESPACE which caused problems when
        embedding R

        * src/Rcpp/RObject.h: RObject::AttributeProxy::operator RObject
        replaced by templated implicit conversion operator, delegating the
        actual work to as<>.

        * src/Environment.h: Binding::operator RObject is removed since
        it can be automatically generated by the templated implicit
        conversion operator

        * man/RcpUnitTests.Rd: fix html rendering

        * inst/doc/Makefile: clean the index.html file before copying it

2010-01-26  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppDatetime.cpp: New SEXP-based constructor
        * src/RcppDatetime.h: idem, bug fix for operator-

        * src/RcppDate.h: new accessor getJulian() [relative to epoch
          just like R's julian()] to complement getJDN()

        * inst/unitTests/runit.RcppDatetime.R: added

2010-01-26  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/clone.h: explicit cloning of RObjects. The clone
        template function creates a new object of the same class
        as the object it is passed in, encapsulating a duplicate
        of the SEXP contained by the input RObject.

        * src/Rcpp/r_cast.h: new template function to handle casts
        from one SEXP to another. This is mostly useful internally

        * src/Rcpp/VectorBase.h: VectorBase gains a offset method
        that is responsible to calculate the correct offset based
        on variable number of size_t arguments. currently the number
        of arguments can be 1 (vector indexing) and 2 (matrix indexing)
        but arbitrary number of arguments will be added later
        for arbitrary array-like indexing.

        * src/Rcpp/SimpleVector.h: outsourcing offset calculation
        to VectorBase::offset

        * src/Rcpp/CharacterVector.h: use offset to implement matrix-like
        indexing for matrices of strings

        * inst/unitTests/runit.CharacterVector.R: unit test for matrix
        indexing (test.CharacterVector.matrix.indexing)

        * inst/Rcpp/SEXP_Vector.h: use offset to implement matrix like
        indexing on lists

        * inst/unitTests/runit.GenericVector.R: unit test for matrix
        indexing (test.List.matrix.indexing)

2010-01-26  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.RcppDate.R: added

2010-01-25  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/wrap.h: wrap is back at being a template. The
        template parameter T is first converted to SEXP implicitely
        and the wrap(SEXP) method is used. This allows clients to only have to
        implement an implicit conversion to SEXP operator for their class
        and have wrap for free.

        * src/Rcpp/SEXP_Vector.h: factored out ExpressionVector and
        GenericVector into a templated SEXP_Vector class parameterized
        by the SEXP type (VECSXP or EXPRSXP). GenericVector and
        ExpressionVector now are generated from the template. This will
        ease adding features to both classes.

        * src/as.cpp: also use coercion for as<bool>, as<int>, as<double>
        as<Rbyte> (FR #768)

        * src/Rcpp/as.h: smarter template as<T>, now the template
        attempts to create an object by passing the SEXP as the first
        parameter, so any class that has a constructor taking a SEXP
        can be as<>'ed. see item below for how this can be useful

        * src/Rcpp/Environment.h: lhs use of Environment::Binding is now
        a bit smarter and uses as<> to implicitely convert the SEXP
        to the requested type, so that if as<Foo> makes sense, this
        works: Foo foo = env["x"] ;

        * src/Rcpp/Environment.h: Environment::assign gains a templated
        form so that we can assign anything that can be wrapped to
        a name in an environment.

        * inst/unitTests/runit.environments.R: new unit test
        'test.environment.assign.templated' to test the templated assign

        * src/Makevars(.win?): listen to the RCPP_CXX0X environment variable
        and if set to "yes" attempt to add c++0x support if possible

2010-01-24  Dirk Eddelbuettel  <edd@debian.org>

        * configure.in: Withdrawn as OS X universal binaries are only built
          when there is src/Makevars and neither src/Makefile nor configure
        * configure: idem
        * src/Makevars: Again a static file, content copied from Makevars.in,
          -std=c++0x selection back to simply unabling a comment

2010-01-24  Romain Francois <francoisromain@free.fr>

        * src/SimpleVector.h : new template to replace simple vector
        classes. now NumericVector, IntegerVector, LogicalVector,
        ComplexVector and RawVector are all generated from the same
        template class. A first attempt at matrix indexing is added
        as part of this.

        * inst/unitTests/runit.NumericVector.R: new unit tests about
        matrix indexing

        * src/Rcpp/VectorBase.h: added the exception not_a_matrix
        that is thrown when attempting to perform matrix indexing on
        a vector that is not a matrix.

2010-01-23  Dirk Eddelbuettel  <edd@debian.org>

        * inst/unitTests/runit.RcppParams.R: added
        * inst/unitTests/runit.RcppResultSet.R: added

2010-01-23  Romain Francois <francoisromain@free.fr>

        * src/wrap.cpp: s/copy/std::copy/

        * src/RcppDateTime.h: explicitely include <time.h> (win64 warning)

2010-01-22  Romain Francois <francoisromain@free.fr>

        * src/Makevars.win: disable c++0x entirely (for now)

        * src/Rcpp/Environment.h: make sure what() is const. (suncc finding)

        * src/RcppCommon.h: pre declare classes, as an attempt to
        deal with the suncc warning "RObject may not have a type qualifier."

        * src/Rcpp/*.h: make sure RcppCommon.h is the first included header

        * src/*cpp: make sure foo.cpp only include Rcpp/foo.h

        * src/Environment.cpp: use Evaluator instead of R_ToplevelExec

        * src/RcppFunction.{h,cpp}: listen to some suncc warnings

        * src/RcppFrame.cpp: listen to some suncc warnings

        * src/as.cpp: use transform instead of assign, which should
        make the code more portable (particularly suncc) and also
        deal with coercion

2010-01-21  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.3

        * debian/*: Similarly updated for new release to Debian

        * INDEX: updated

        * configure.in: Some more small cleanups

        * inst/skeleton/Makevars.win: Add missing default file

2010-01-21  Romain Francois <francoisromain@free.fr>

        * configure.in: Some small cleanups, add RCPP_CXX0X env var

2010-01-20 Romain Francois <francoisromain@free.fr>

        * src/*: make update private virtual in RObject and couple it with
        setSEXP so that it gets called automatically, instead of manually
        * src/*: move more code depending on c++0x from cpp files to header
        files

2010-01-20  Dirk Eddelbuettel  <edd@debian.org>

        * configure.in: Detect C++ capabilties (via g++ major/minor) via
          small C++ program embedded in autoconf macro

2010-01-19  Romain Francois <francoisromain@free.fr>

        * configure.in: use the cxx0x.R script to discover if the
        compiler being used is c++0x capable
        * configure: regenerated from updated configure.in

        * src/Makevars.in: using CLINK_CPPFLAGS variable

        * src/Makevars.win: using CLINK_CPPFLAGS variable with the
        cxx0x.R discovery script

2010-01-18  Dirk Eddelbuettel  <edd@debian.org>

        * R/RcppLdpath.R: Rewrote logic for LdFlags() to decide when linking
          is static: default now is everywhere but Linux, and choices can be
          overriden as before

2010-01-18  Romain Francois <francoisromain@free.fr>

        * inst/discovery/cxx0x.R: replaces the cxx0x.c file to take
        care of compiling, etc...

2010-01-17  Romain Francois <francoisromain@free.fr>

        * src/exceptions.cpp: slightly less dumb exception logic
        on non GCC compilers. exceptions will now trigger an R error
        with a default message (we don't attempt to get the
        exception class or message because we don't know how to)

        * src/Rcpp/Pairlist.h: Pairlist lacked a default constructor
        which is needed when the variadic templates are not
        available

        * inst/unitTests/*: add -std=c++0x in inline when necessary

        * R/RcppLdPath.R : new script RcppCxx0xFlags() and Cxx0xFlags()
        that compile, load and call a simple C file in order to check
        the compiler version and add the -std=c++0x flag

        * inst/discovery/cxx0x.c: discovery script. simple C script that
        returns "-std=c++0x" if it is compiled with GCC >= 4.3 and
        "" otherwise

2010-01-16  Dirk Eddelbuettel  <edd@debian.org>

        * src/Rcpp/*h: call Rf_length() etc as ::Rf_length() to ensure we get
          the one from the top-level namespace

2010-01-16  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/Environment.h: Environment gains a new_child method
        to create an environment enclosed by this
        * inst/unitTests/runit.environments.R: unit test for new_child

        * src/Rcpp/ExpressionVector.h: ExpressionVector gains a
        convenience methods eval to evaluate itself
        * inst/unitTests/runit.ExpressionVector.R: added unit tests
        for ExpressionVector::eval

        * src/Rcpp/ExpressionVector.h: ExpressionVector gains a
        constructor ExpressionVector( const std::string& ) that
        parses the string as R code
        * inst/unitTests/runit.ExpressionVector.R: added unit tests
        to cover the new constructor

        * src/Rcpp/Environment.h : the Rcpp namespace is cached because
        we use it in many places and retrieving it is an "expensive"
        operation that requires a round trip to the R side
        * src/Evaluator.cpp: use the cached Rcpp namespace

        * R/Rcpp.package.skeleton: now generating example C++ and R
        code that uses Rcpp, also the generated Makevars contains
        a hack so that the generated package can pass check (after
        edition of Rd files, NAMESPACE, etc ...)
        * inst/skeleton: added example code used by the skeleton
        generator

2010-01-15  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/NumericVector.h: cache the start of the array to
        improve performance of operator[]
        * src/NumericVector.cpp: idem

        * src/Rcpp/IntegerVector.h:
        * src/Rcpp/RawVector.h:
        * src/Rcpp/ComplexVector.h:
        * src/Rcpp/LogicalVector.h: idem

        * src/IntegerVector.cpp:
        * src/RawVector.cpp:
        * src/ComplexVector.cpp:
        * src/LogicalVector.cpp: idem

2010-01-13  Romain Francois <francoisromain@free.fr>

        * R/cpp.package.skeleton.R: new function cpp.package.skeleton
        to extend the code generation performed by package.skeleton
        to Rcpp features

        * man/cpp.package.skeleton.Rd: documentation for cpp.package.skeleton

        * src/Rcpp/VectorBase.h: new virtual class Rcpp::VectorBase
        to manage common things of all vectors (length, names, etc ...)
        all Vector classes now derive from VectorBase

        * src/Rcpp/Environment.h: Environment::Binding gains a templated
        conversion operator, to facilitate distance 2 implicit conversion
        making this possible:
        Environment env("package:stats") ;
        Function f = env["rnorm"] ;

        * src/Rcpp/GenericVector.h: GenericVector::Proxy gains an
        assignement operator to deal with Environment::Binding. This is
        to work around distance 1 implicit conversion restrictions

        * src/Rcpp/NumericVector.h: operator[], begin and end are
        promoted to inline member functions
        * src/Rcpp/IntegerVector.h: idem
        * src/Rcpp/RawVector.h: idem
        * src/Rcpp/LogicalVector.h: idem

2010-01-12  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.2

        * debian/*: Similarly updated for new release to Debian

        * .Rbuildignore: Add 'inst/doc/{html,latex,man} as we no
          longer ship the voluminous doxygen-generated content

        * inst/doc/examples/ConvolveBenchmarks/convolve2*: Added simple
          benchmark on the well-known vector convolution example from
          'Writing R Extensions' to compare C and C++ implementations
        * inst/doc/examples/ConvolveBenchmarks/buildAndRun.sh: idem
          inst/doc/examples/ConvolveBenchmarks/exampleRCode.r: idem

2010-01-12  Romain Francois <francoisromain@free.fr>

        * inst/doc/examples/ConvolveBenchmarks/convolve2*: Added additional
        C++ examples to convolution benchmark highlighting performance gains

2010-01-11  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/CharacterVector.h: StringProxy gains operator+=
        * src/CharacterVector.cpp: implementation

        * src/Rcpp/*Vector.h: operator[] now throws index out of bounds
        exception when needed (FR#770)
        * src/*Vector.cpp: same

        * src/Rcpp/Environment.h: operator[](string) for environment
        allowing to get/set values of a binding in this environment.
        The Environment::Binding class has been created to act as
        a proxy.
        * src/Environment.cpp: idem
        * inst/unitTests/runit.environments.R: unit tests for the above

2010-01-10  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/Pairlist.h: operator[] for pairlist using proxies
        * src/Pairlist.cpp : idem
        * inst/unitTests/runit.Pairlist.R: new unit tests

        * src/Rcpp/Language.h: same for Language
        * src/Language.cpp : idem
        * inst/unitTests/runit.Language.R: new unit tests

        * inst/unitTests/runit.Function.R: added unit test for function
        throwing exceptions

        * src/Function.cpp: grab the condition message and not the call

2010-01-09  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/RObject.h: attr can now be used to get or set the
        attribute (used to be read only). This is another manifestation
        of the proxy pattern. The rhs can be anything wrap can handle

        * inst/unitTests/runit.RObject.R: added test.RObject.attr.set
        unit test (setting attribute).

        * src/Rcpp/Function.h: Function::operator() now throws an
        exception if an R error occurs.

2010-01-08  Dirk Eddelbuettel  <edd@debian.org>

        * configure.in: provide basic support for c++ compiler version detection
          at build-time so that we can add -std=c++0x when applicable;
          provide defaults in case we do not use g++
        * src/Makevars.in: copied from Makevars, set C++ flags from configure
        * configure.win: simply log what g++ version is being used

2010-01-08  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/wrap.h: added wrap( size_t ) to disambiguate it

        * int/unitTests/runit.XPTr.R: forgot to set the finalizer on the
        external pointer

        * src/Rcpp/Pairlist.h: Pairlist gains a push_back, replace,
        length, size, remove and insert methods

        * src/Rcpp/Language.h: idem for Language

2010-01-07  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/Pairlist.h: gains a push_front method

        * src/Rcpp/wrap.h : now the result type of the various wrap
        functions depends on the parameters. wrap( bool ) makes a
        LogicalVector, etc ... wrap(SEXP) dispatches to the
        appropriate Rcpp:: class depending on TYPEOF

        * src/Rcpp/RObject.h: added methods "isS4", "slot"
        and "hasSlot" to deal with S4 objects
        * inst/unitTests/runit.S4.R: unit tests

        * src/Rcpp/ComplexVector.h: new class Rcpp::ComplexVector
        to manage ... complex vectors (CPLXSXP)
        * src/ComplexVector.cpp: implementation
        * inst/unitTests/runit.ComplexVector.R: unit tests

        * src/Rcpp/Promise.h: new class Rcpp::Promise to manage
        promises (PROMSXP). only read access so far (no way to force
        the promise)
        * src/Promise.cpp: implementation

        * src/Rcpp/RObject.h: the result of attr is now an RObject
        rather than a SEXP. This does not change previous behavior
        because of the implicit conversion

        * src/Rcpp/ExpressionVector.h: new class Rcpp::ExpressionVector
        which shares a lot with GenericVector.
        * src/ExpressionVector.cpp: implementation
        * inst/unitTests/runit.ExpressionVector.R: unit tests

        * src/Rcpp/CharacterVector.h: new class Rcpp::CharacterVector
        to manage character vectors (STRSXP). StringVector is a
        convenience typedef equivalent to CharacterVector
        * src/CharacterVector.cpp: implementation
        * inst/unitTests/runit.CharacterVector.R: unit tests

        * src/Rcpp/WeakReference.h: new class Rcpp::WeakReference
        to wrap WEAKREFSXP with accessors to the key and value
        * src/WeakReference.cpp: implementation

        * src/Rcpp/Rcpp_Rinternals.h: borrowed from Rinternals so that
        we can use VECTOR_PTR (which R forbids unless we define
        USE_RINTERNALS, but defining it disables NO_R_REMAP)

        * src/Rcpp/GenericVector.h : added begin and end to allow
        stl type iteration over generic vectors. Now using the
        Proxy pattern (from Item 30 of More Effective C++) to
        allow getting and setting the elements of the list through
        the operator[].

        * int/unitTests/runit.GenericVector.R: examples are reworked
        using [] where set and get were used.

2010-01-06  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppCommon.h: Protect definition of logTxt by #ifndef
        * inst/doc/Rcpp-unitTests.Rnw: Minor LaTeX tweak

2010-01-06  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/wrap.h : wrap can now use initializer lists (available
        on on GCC >= 4.4).
        * src/wrap.cpp: implementation
        * int/unitTests/runit.wrap.R: unit tests

        * src/RObject.cpp : make methods RObject::asFoo
        calling Rcpp::as<Foo> to avoid code duplication

2010-01-05  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/GenericVector.h : new class Rcpp::GenericVector
        and an alias Rcpp::List to handle lists (VECSXP), aka generic
        vectors
        * src/GenericVector.cpp : implementation
        * inst/unitTests/runit.GenericVector.R: unit tests

        * src/Rcpp/IntegerVector.h : new class Rcpp::IntegerVector
        to manage integer vector (INTSXP). IntegerVector can be
        constructed from SEXP of appropriate type, from an int which
        simply allocates a vector that big, or using an
        initialization list (the last is GCC >= 4.4 only).
        Additionally IntegerVector defines begin() and end() so that
        they can be used in STL algorithms
        * src/IntegerVector.cpp : implementation
        * inst/unitTests/runit.IntegerVector.R: unit tests

        * src/Rcpp/NumericVector.h : same as above, but for numeric
        vectors (REALSXP)
        * src/NumericVector.cpp : implementation
        * inst/unitTests/runit.NumericVector.R: unit tests

        * src/Rcpp/RawVector.h : same as above, but for numeric
        vectors (RAWSXP)
        * src/RawVector.cpp : implementation
        * inst/unitTests/runit.RawVector.R: unit tests

        * src/Rcpp/LogicalVector.h : same as above, but for numeric
        vectors (RAWSXP)
        * src/LogicalVector.cpp : implementation
        * inst/unitTests/runit.LogicalVector.R: unit tests

        * src/RcppCommon.h: improve the conditional compiling logic
        with macros HAS_VARIADIC_TEMPLATES and HAS_INIT_LISTS instead
        of CXX0X. This ensures the package can be compiled with
        older GCC, with lower functionality

        * src/RcppCommon.{h,cpp}: added a capabilities function that
        can be used to bring the result of the two above macros to R

        * R/RcppLdPaths.R: added unexported function RcppCapabilities
        to call the internal capabilities. capabilities is an alias
        to RcppCapabilities so that we can call Rcpp::capabilities()

2010-01-04  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/Function.h: new class Rcpp::Function to manage functions
        (closures, primitives and builtins) all share the Function class
        (at least for now). This is implemented as a functor taking
        variable number of arguments, so it looks pretty similar to the
        R function

        * src/Function.cpp: implementation

        * inst/unitTests/runit.Function.R: unit tests

        * src/Rcpp/Pairlist.h: new class Rcpp::Pairlist to manage dotted
        pair lists (LISTSXP). unsurprisingly this shares a lot of
        similarities with Language class

        * src/Pairlist.cpp: implementation

        * inst/unitTests/runit.Pairlist.R: unit tests for Rcpp::Pairlist

        * src/Rcpp/wrap.h: wrap no more a template. this was not a good
        idea as it prevented implicit conversion to SEXP behavior when
        wrap'ing a RObject.

        * src/Rcpp/Environment.h: added the remove method

        * src/unitTests/runit.environments.R: remove unit test

        * src/unitTests/runit.Language.R: remove verbose=TRUE in cfunction
        call (generated noise)

        * src/wrap.cpp: added a few missing PROTECT

2010-01-04  Dirk Eddelbuettel  <edd@debian.org>

        * src/excections.cpp: Get rid of another unused variable
        * src/RcppCommon.cpp: Idem

2010-01-03  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/Environment.h: Environment gains the parent
        method that returns the parent environment

        * src/Rcpp/as.h: template as<> to convert SEXP to classic
        C++ types, factored out of RObject

        * src/as.cpp: specific implementations. as<int>, as<bool>
        as<string>, ...

        * inst/unitTests/runit.as.R: unit tests

        * src/Rcpp/wrap.h : factored out from RObject. there is now a
        template wrap in addition to the specific implementations. The
        template generates a warning and return NULL

        * src/wrap.cpp: specific implementations of the wrap template
        (factored out of RObject)

        * src/Rcpp/pairlist.h : variadic templates to
        recursively generate a pairlist
        (CAR and CDR) from any number of "wrap("'able objects.
        (factored out of Language)

        * src/pairlist.cpp: end of recursion for the above

        * src/Rcpp/grow.h : grow a pairlist with any wrappable
        object. Used in pairlist

        * src/grow.cpp : specific implementation for Named object
        to allow tagging the head of the pairlist.

        * src/Rcpp/Named.h : new class Named that is used to specify
        named elements in a pairlist.

        * src/Named.cpp: implementation

        * src/Rcpp/RObject.h: added wrap(const char* const) RObject factory
        method

        * src/Rcpp/RObject.h: rework the garbage collection mechanism so that
        it is automatic and hidden. methods preserve and release are now
        private to the RObject class and the SEXP may only be changed using
        the protected setSEXP member function. isPreserved and forgetPreserve
        are defunct.

        * src/Rcpp/RObject.h: RObject gains assignment operators and copy constructors

        * src/RcppCommon.h: added the CXX0X define that controls whether
        we can use C++0x features offered by the gcc. currently the define
        is hardcoded, but this will eventually be a configure guess. The
        canUseCXX0X function can be called to bring this back to R

        * R/RcppLdPath.R: added the canUseCXX0X R function to query
        the internal canUseCXX0X function, use this in RcppCxxFlags so that
        code linking against Rcpp (inline code or packages) can take
        advantage of it

        * src/Rcpp/Language.h : new class Rcpp::Language to manage calls
        (LANGSXP SEXP)

        * src/Language.cpp : implementation

        * inst/unitTests/runit.Language.R: unit tests

        * src/Rcpp/Environment.h : added constructors and made the SEXP based
        constructor smarter (using as.environment)

        * inst/unitTests/runit.environments.R: more unit tests

        * src/Rcpp/Symbol.h: new class Rcpp::Symbol to encapsulate
        symbols. This allows to use Symbol("rnorm") instead of the most cryptic
        Rf_install("rnorm")

        * src/Symbol.cpp: implementation

        * inst/unitTests/runit.Symbol.R: unit tests

2010-01-03  Dirk Eddelbuettel  <edd@debian.org>

        * doxyfile: updated to current doxygen standard using -u

2010-01-02  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.1

        * debian/*: Similarly updated for new release to Debian

2010-01-02  Romain Francois <francoisromain@free.fr>

        * pkg/src/RcppSexp.h: Added to preserve existing interface,
          implementation use the redesigned class src/RObject.h

2010-01-01  Romain Francois <francoisromain@free.fr>

        * pkg/src/Rcpp/RObject.h: RObject::RObject constructors are
        replaced by the Rcpp::wrap set of functions. Currently the wrap
        functions make a RObject object but it is likely that as new
        classes become available in the new API, wrap will return
        instances of classes that extend RObject.

        * pkg/src/Rcpp/RObject.h: s/protect/preserve/, added methods
        isPreserved and forgetPreserve

        * ** : adapted examples, code, and unit tests to reflect both
        above items

2009-12-31  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/Evaluator.h : new class Rcpp::Evaluator that eases
        evaluation of R expression with error capture. so that we can for example
        throw C++ exceptions

        * src/Evaluator.cpp : implementation of Rcpp::Evaluator

        * inst/unitTests/runit.evaluator: unit tests of Rcpp::Evaluator

        * inst/Rcpp/RObject.h: RObject::RObject(SEXP) now initializes isProtected

        * inst/src/Environment.cpp: use of exceptions

2009-12-30  Romain Francois <francoisromain@free.fr>

        * src/Rcpp/Environment.h : added support for environment through the
        Rcpp::Environment class

        * src/Environment.cpp: idem

        * inst/unitTests/runit.environments.R: testing the above

        * src/RcppCommon.h: now includes <R_ext/Callbacks.h>, needed for the
        environment support

2009-12-30  Romain Francois <francoisromain@free.fr>

        * src/Makevars* : adapt for allowong copy of the Rcpp directory

        * src/Rcpp_RObject.h: replace by src/Rcpp/RObject.h

        * src/Rcpp_XPtr.h: replaced by src/Rcpp/XPtr.h

        * src/*.cpp: adapt to the Rcpp directory

        * cleanup: idem

2009-12-30  Romain Francois <francoisromain@free.fr>

        * inst/unitTests/runit.RObject.R: new unit tests

        * inst/unitTests/runit.exceptions.R: idem

        * inst/unitTests/runit.XPtr.R: idem

        * man/RcppUnitTests.Rd: shows and link unit test reports generated at
        build time

2009-12-29  Romain Francois <francoisromain@free.fr>

        * src/Rcpp_RObject.{h,cpp}: new namespace Rcpp and new class
        Rcpp::RObject to replace RcppSexp with the same functionality.

        * src/Rcpp_XPtr.h: replaces RcppXPtr.h and the class is now
        Rcpp::XPtr<> and extends Rcpp::RObject

        * inst/examples/RcppInline/external_pointer.r: use the new namespace

        * inst/examples/RcppInline/RcppInlineWithLibsExamples.r: idem

        * inst/examples/RcppInline/RcppSexpTests.r: idem

        * DESCRIPTION: marked as version 0.7.0.5

        * inst/doc/*: fake (empty) vignette and unit test trigger

        * inst/unitTests/*: prepare the space for unit tests

        * tests/doRUnit.R : added the usual RUnit tests trigger

2009-12-29  Romain Francois <francoisromain@free.fr>

        * src/RcppXPtr.h: now RcppXPtr extends RcppSexp and RcppSexp manages
        garbarge collection, attributes, etc ...

        * src/exceptions.cpp: replaces src/exception_handling.cpp

        * DESCRIPTION: now suggesting RUnit.

2009-12-29  Romain Francois <francoisromain@free.fr>

        * src/RcppXPtr.h: added operator SEXP() to class
        RcppXPtr to ease implicit conversion from RcppXPtr to SEXP.
        This means we can directly return the RcppXPtr object to R when the
        return type of the function is SEXP. (no need to explicitely call
        asSexp anymore)

        * src/RcppSexp.{h,cpp} : idem

2009-12-29  Romain Francois <francoisromain@free.fr>

        * src/RcppXPtr.h: new smart external pointer wrapper. The RcppXPtr
        template can be used to wrap a external pointer (SEXP) so that it
        looks like the dumb pointer it is wrapping (as far as the * and ->
        operator are concerned). The template parameter controls the type
        of object that is wrapped by the pointer.

        * src/Rcpp.h: importing the RcppXPtr.h header

        * src/RcppExample.cpp: added an example of RcppXPtr usage

        * inst/examples/RcppInline/external_pointer.r: added example using
        the RcppXPtr template

        * DESCRIPTION: marking this as 0.7.0.4

2009-12-28  Romain Francois <francoisromain@free.fr>

        * R/exceptions.R: s/uncaught_cpp_exception/cpp_exception/ and added a
        'class' argument to hold the class name of the C++ exception
        (range_error, etc ...)

        * inst/examples/RcppInline/UncaughtExceptions.r: extend examples to
        show how to grab details of the C++ exception

        * src/exception_handling.cpp: factored out from RcppCommon.cpp, now
        able to grab the class name of the exception and its message.

2009-12-27  Dirk Eddelbuettel  <edd@debian.org>

        * R/RcppInline.R: Removed as we now use cfunction() from inline (>= 0.3.4)
        * man/{RcppInline,internals}.Rd: idem

        * NAMESPACE: removed entries related to cfunction and methods

        * DESCRIPTION: Added 'Suggests: inline (>= 0.3.4)

        * inst/examples/RcppInline/*R: Add library(inline) or require(inline)

2009-12-27  Romain Francois <francoisromain@free.fr>

        * src/RcppCommon.{h,cpp} : added experimental uncaught exception
        management

        * R/zzz.R : added .onAttach, used to register the uncaught exception
        management on package attach

        * R/exceptions.R : added R side of the exception management, unexported
        as it is only used by internal C++ code

        * inst/examples/RcppInline/UncaughtExceptions.r: demo of the
        uncaught exception system

        * src/RcppSexp.{h,cpp} : added method isNULL to test if the
        underlying SEXP is NULL

        * src/RcppSexp.{h,cpp} : added some methods to deal with attributes
        attributeNames : the names of the attributes as a vector<string>
        hasAttribute   : test whether the SEXP has the given attribute
        attr           : extract the attribute (might return NULL)

        * src/RcppSexp.{h,cpp} : added RcppSexp(bool), RcppSexp(vector<bool>)
        constructors and RcppSexp.asBool(), RcppSexp.asStdVectorBool() methods

        * inst/examples/RcppInline/RcppSexpTests.r: examples/tests of the
        above items

2009-12-26  Romain Francois <francoisromain@free.fr>

        * src/RcppSexp.{h,cpp} : added std::set<{int,double,Rbyte,string}> as
        accepted input type for the RcppSexp class (needed by RProtoBuf)

        * inst/examples/RcppInline/RcppSexpTests.r: examples/tests of the above

2009-12-21  Romain Francois <francoisromain@free.fr>

        * src/RcppSexp.{h,cpp} : support for raw vector added into RcppSexp

        * inst/examples/RcppInline/RcppSexpTests.r: examples of raw vector
        support

2009-12-20  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/RcppInline/RcppInlineWithLibsExamples.r: Minor
          simplifications using new RcppSexp types, added third example

2009-12-19  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.7.0

        * DESCRIPTION: Descrition fields reworded and expanded to explicitly
          mention 'inlining' ability as well as simple SEXP support.

        * src/RcppSexp.{h,cpp}: Switch to R_PreserveObject and R_ReleaseObject
          with a big thanks to Romain for the most appropriate suggestion
        * src/RcppSexp.{h,cpp}: Added converters for vectors of
          int, double, and std::string vectors
        * src/RcppResultsSetp.{h,cpp}: Added simple single SEXP return
        * src/RcppCommon.{h,cpp}: Adding simple logging facility
        * inst/examples/RcppInline/RcppSexpTests.r: expanded for new types

2009-12-18  Dirk Eddelbuettel  <edd@debian.org>

        * R/RcppInline.R: Another improvement for Rcpp use
        * inst/examples/RcppInline/RcppSimpleExamples.r: Another simple case

2009-12-17  Dirk Eddelbuettel  <edd@debian.org>

        * R/RcppInline.R: Improved / simplified in light of getting it to
          work on Windoze too so switched to setting env var explicitly;
          also split into three args for CPPFLAGS, CXXFLAGS and LIBS
        * man/RcppInline.Rd: Updated accordingly to reflect new args
        * inst/examples/RcppInline/RcppInlineWithLibsExamples.r: Idem

2009-12-16  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppSexp.{h,cpp}: Added simple RcppSexp class for simple
          conversion from and to single-element SEXPs -- currently limited
          to int, double, std::string
        * inst/examples/RcppInline/RcppSexpTests.r: Simple tests for this

2009-12-15  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: License changed to 'GPL (>= 2)'
        * COPYING: Changed from LGPL 2.1 to GPL 2 (or later)
        * src/*.{h,cpp}: Relicensed under GPL 2 (or later)

2009-12-13  Dirk Eddelbuettel  <edd@debian.org>

        * R/RcppInline.R: Extended to for additional header and library
          arguments so that we can work with arbitrary other projects
        * man/RcppInline.Rd: Added documentation for these arguments
        * inst/examples/RcppInline/RcppInlineWithLibsExamples.r: New
          examples using GNU GSL to show how to compile + link via inline

2009-12-11  Dirk Eddelbuettel  <edd@debian.org>

        * R/RcppInline.R: Imported function 'cfunction' from the inline
          package, along with small patch to directly support Rcpp. The
          inclusion may be temporary -- if our patch is integrated into
          inline we may just depend on that package
        * man/RcppInline.Rd: Imported from inline, plus change for Rcpp
        * inst/examples/RcppInline/RcppInlineExample.r: Small example
          taken from the 'Intro to HPC with R' tutorials

        * R/RcppVersion.R: Removed as unused as redundant given read.dcf() in R
        * man/RcppVersion.R: idem
        * NAMESPACE: updated accordingly
        * INDEX: idem

2009-11-18  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Add Dominick back into Authors per his new request
          reversing his requests to be removed from last December

2009-11-17  Dirk Eddelbuettel  <edd@debian.org>

        * man/RcppParams.Rd: applied patch by Frank S. Thomas to fix example

2009-11-15  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppDateVector.{cpp,h}: Moved out of Rcpp.{h,cpp}
        * src/RcppDatetimeVector.{cpp,h}: idem
        * src/RcppFunction.{cpp,h}: idem
        * src/RcppMatrix.{cpp,h}: idem
        * src/RcppMatrixView.{cpp,h}: idem
        * src/RcppNumList.{cpp,h}: idem
        * src/RcppResultSet.{cpp,h}: idem
        * src/RcppStringVector.{cpp,h}: idem
        * src/RcppStringVectorView.{cpp,h}: idem
        * src/RcppVector.{cpp,h}: idem
        * src/RcppVectorView.{cpp,h}: idem
        * src/RcppCommon.cpp: takes remaining utility function from Rcpp.cpp

2009-11-09  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.6.8

        * src/RcppParams.{cpp,h}: Code reorginsation, moved out of Rcpp.{h,cpp}
        * src/RcppDate.{cpp,h}: idem
        * src/RcppDatetime.{cpp,h}: idem
        * src/RcppCommon.h: New header file for common defines and includes
        * src/Makevars{,.win}: Updated and generalised to reflect new files

2009-11-08  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.6.7

        * man/RcppVector.Rd: Remove erraneous use of \R in \title{} section
          noticed by the Rd parser in R-devel (with thanks to Kurt Hornik)

2009-11-06  Dirk Eddelbuettel  <edd@debian.org>

        * src/RcppList.{h,cpp}: Added a simple class to accept list()
          objects in order to cope with non-rectangular data-types -- this
          comes from the RProtoBuf code currently only on r-forge where
          we need accept lists that are potentially nested.
          The API for RcppList is not fully fleshed out and needs a few
          more append() member functions. Also length is currently fixed.

        * cleanup: Change header file removal to Rcpp*.h

        * inst/README: Added short README about history and status

        * inst/doc/: Updated doxygen documentation

2009-09-29  Dirk Eddelbuettel  <edd@debian.org>

        * inst/examples/functionCallback/*: Added simple C++ / R example of
          defining an R function that is passed to and called from C++

2009-08-03  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.6.6

        * src/Rcpp.{h,cpp}: Added exists() method for RcppParams to test
          for existence of a named parameter.

        * inst/doc/: Updated doxygen documentation

2009-04-01  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.6.5

        * COPYING: Added

2009-03-30  Dirk Eddelbuettel  <edd@debian.org>

        * src/Makevars: Add $(R_ARCH) to target directory path when copying
          the header file as an OS X user reported not finding it with
          default settings.

2009-03-01  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.6.4

        * .Rbuildignore: Added to exclude debian/ from source tarball

2009-02-25  Dirk Eddelbuettel  <edd@debian.org>

        * src/Makevars.win: Renamed from Makefile.win, added missing mkdir
        * cleanup: Remove a few more Windows files

2009-02-24  Dirk Eddelbuettel  <edd@debian.org>

        * inst/doc/{html,latex,man}: Added new documentation of the C++ classes
        * doxyfile: Added Doxygen configuration file for doc generation

2009-02-22  Dirk Eddelbuettel  <edd@debian.org>

        * src/Rcpp.{h,cpp}: cleaner use of namespace 'std' by formal prefix
          rather than via 'using namespace std'
        * src/Rcpp.h: define R_NO_MAP and use Rf_* form of R API functions

2009-02-18  Dirk Eddelbuettel  <edd@debian.org>

        * src/Rcpp.{h,cpp}: Added a few explicit casts, and removed unused
          loop variable; all to make 'g++ -Wall' happy

2009-02-10  Dirk Eddelbuettel  <edd@debian.org>

        * src/Rcpp.{cpp,h}: Expanded a few of the throw() messages

2009-01-09  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.6.3

        * R/RcppLdpath.R: Also defined shorter functions CxxFlags() and
          LdFlags() which cat() the longer forms RcppCxxFlags() and
          RcppLdFlags() to further simplify use via litter or Rscript in
          Makefile or Makevars

        * man/Rcpp-package.Rd: Mention short form CxxFlags() and LdFlags()

        * src/Makevars: Applied another build correction for OS X suggested
          by Simon Urbanek

        * src/Rcpp.{cpp,h}: Added 'view-only' classes RcppVectorView,
          RcppMatrixView and RcppStringVectorView contributed by David Reiss

2008-12-02  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.6.2

        * R/RcppLdPath.R: Correct output for the default Linux case

2008-11-30  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION: Release 0.6.1

        * src/Makevars: Added, replacing src/Makefile: thanks to Simon for a
          rewrite that provides OS X support
        * src/Makefile: Retired
        * src/Makefile.win: Now build libRcpp.a instead of Rcpp.a

        * src/Rcpp.{cpp,h}: Removed #ifdef statements related to QuantLib and
          Date ops as we no longer need to split this off -- one build for all
          uses; also added another date offset for the difference between the
          Unix epoch of Jan 1, 1970 and what certain spreadsheets use (which is
          what QuantLib) follows.  With this change, Rcpp is completely
          decoupled from QuantLib headers, yet can be used from QuantLib 0.2.10
          or later. However, this also removes data conversion from R/Rcpp to
          QL as Rcpp no longer 'knows' QL.

        * R/RcppLdPath.R: Adds new functions RcppLdPath() to return lib/
          directory path, and RcppLdFlags() to return arguments, including the
          optional rpath settings on Linux

        * R/RcppExample.R: Added new example 'RcppVectorExample()', extended
          default print method for examples

        * man/Rcpp-package.Rd: Expanded / updated documentation of package
          use when building other packages

        * cleanup: Removing static libraries too but do not remove src/Makevars

2008-11-05  Dirk Eddelbuettel  <edd@debian.org>

        * Release 0.6.0

        * New maintainer

        * src/Makefile{,.win}: New files, including functionality from both
          configure and RcppSrc/Makefile; we now build two libraries, one for
          use by the package which also runs the example, and one for users to
          link against
        * src/Makevars.in: Removed
        * src/Rcpp.{cpp,h}: moved in from ../RcppSrc

        * src/Rcpp.{cpp,h}: Add new type RcppDatetime corresponding to
          POSIXct in with full support for microsecond time resolution
          between R and C++

        * man/*: Several new manual pages added

        * configure{,.in,.win}: Removed as src/Makefile* can handle this more
          easily

        * DESCRIPTION: Minor cleanup and reformatting, Date: now uses
          svn:keyword Date property

        * NAMESPACE: Renamed RcppTemplateVersion to RcppVersion,
          deleted RcppDemo

        * demo/ directory removed as vignette("RcppAPI") is easier and more
          reliable to show vignette documentation

        * R/zzz.R: RcppTemplateDemo() removed, vignette("RcppAPI") is easier
        * man/RcppTemplateDemo.Rd removed as well

        * R/RcppExample.R: reindented, rewritten to set default arguments

        * R/RcppTemplateVersion.R: renamed to RcppVersion.R
        * man/RcppTemplateVersion.Rd: renamed to RcppVersion.Rd

        * RcppSrc/Rcpp.{cpp,h}: moved to src/ directory
        * RcppSrc/Makefile{,.win}: removed

        * inst/doc/RcppAPI.{Rnw,pdf}: Added footnote onto titlepage about how
          this document has not (yet) been updated along with the channges made
